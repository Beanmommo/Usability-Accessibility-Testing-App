version: '3.8'

###############################################################################
#                        Port Bindings and Allocations                        #
###############################################################################

# Inside docker
  # 3000 - react_ui
  # 5000 - flask_backend

# Algorithms
  # 3002 - storydistiller
  # 3003 - xbot
  # 3004 - owleye
  # 3005 - gidroid, xbot

services:
  flask_backend:
    build:
      context: ./server/
    image: bxer.flask_backend
    container_name: bxer.flask_backend
    ports:
      - 5005:5000
    command: python3 manage.py run -p 5000
    volumes:
      - .:/usr/src/FIT3170_Usability_Accessibility_Testing_App/
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
      - MONGO_URL=mongodb://host.docker.internal:27017/
      - S3_URL=http://host.docker.internal:4566
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - "./server:/usr/src/app/server"
      - './algorithms/app/.data:/home/data'
    depends_on:
      - redis
      - mongodb

  react_ui:
    build:
      context: ./Website
    ports:
      - "3001:3001"
    environment:
      - API_URL=flask_backend:5005
      - TASK_URL=http://localhost:5005/task
      - APK_UPLOAD_URL=http://localhost:5005/upload
      - STATUS_URL=http://localhost:5005/status/get
    container_name: bxer.react-ui
    stdin_open: true
    volumes:
       - .:/usr/src/FIT3170_Usability_Accessibility_Testing_App/Website
       - .:/usr/src/FIT3170_Usability_Accessibility_Testing_App/Website/node_modules

  worker:
    build:
      context: ./server/
    command: celery worker --app=tasks.celery --loglevel=info
    container_name: bxer.task_queue
    volumes:
      - .:/usr/src/FIT3170_Usability_Accessibility_Testing_App/
    environment:
      - FLASK_DEBUG=1
      - APP_SETTINGS=server.config.DevelopmentConfig
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - REDIS_URL=redis://redis:6379/0
      - STORYDISTILLER=http://host.docker.internal:3002/new_job
      - XBOT=http://host.docker.internal:3003/new_job
      - OWLEYE=http://host.docker.internal:3004/new_job
      - FLASK_BACKEND=http://host.docker.internal:5005
      - GIFDROID=http://host.docker.internal:3005/new_job
      # - MONGO_URL=mongodb://username:password@mongodb
    depends_on:
      - flask_backend
      - redis

  mongodb:
    tty: true
    image: mongo:5.0
    container_name: bxer.mongodb
    ports:
      - 27017:27017
    volumes:
      - .:/data/mongodb

  redis:
    ports:
      - 6379:6379
    container_name: bxer.redis
    image: redis:6-alpine

  localstack:
    image: localstack/localstack:0.14.3
    container_name: bxer.localstack
    ports:
      - '4563-4599:4563-4599'
      - '8055:8080'
    environment:
      # - AWS_DEFAULT_REGION=ap-southeast-2
      # - EDGE_PORT=4566
      - SERVICES=s3
      - DEBUG=1
      - AWS_DEFAULT_REGION=us-east-1
      - DATA_DIR=/tmp/localstack/data
    volumes:
      - './.localstack:/tmp/localstack'
      - '/var/run/docker.sock:/var/run/docker.sock'

  # storydistiller:
  #   build:
  #     context: ./algorithms/storydistiller/
  #   command: python3 app.py
  #   container_name: bxer.storydistiller
  #   ports:
  #     - '3002:3002'
  #   volumes:
  #     - './algorithms/app/.data:/home/data'

  # xbot:
  #   build:
  #     context: ./algorithms/xbot/
  #   command: python3 app.py
  #   container_name: bxer.xbot
  #   ports:
  #     - '3003:3003'
  #   volumes:
  #     - './algorithms/app/.data:/home/data'

  # owleye:
  #   build:
  #     context: ./algorithms/owleye/
  #   command: python3 app.py
  #   container_name: bxer.owleye
  #   ports:
  #     - '3004:3004'
  #   volumes:
  #     - './algorithms/app/.data:/home/data'

  # tappability:
  #   build:
  #     context: ./algorithms/tappability/
  #   command: python3 app.py
  #   container_name: bxer.tappable
  #   ports:
  #     - '3007:3007'
  #   volumes:
  #     - './algorithms/app/.data:/home/data'


  gifdroid:
    build:
      context: ./algorithms/gifdroid
    command: python3 app.py
    image: bwoa0001/gifdroid
    container_name: bxer.gifdroid
    ports:
      - '3005:3005'
    environment:
    - FILE_API=http://host.docker.internal:5005/file/get
    - STATUS_API=http://host.docker.internal:5005/status
    - FLASK_BACKEND=http://host.docker.internal:5005
    - MONGO_URL=mongodb://host.docker.internal:27017/
    - S3_URL=http://host.docker.internal:4566
    - EMULATOR=host.docker.internal:5555
    volumes:
    - './algorithms/app/.data:/home/data'

  droidbot:
    build:
      context: ./algorithms/droidbot
    command: python3 app.py
    image: bwoa0001/gifdroid
    container_name: bxer.droidbot
    ports:
      - '3008:3008'
    environment:
    - FILE_API=http://host.docker.internal:5005/file/get
    - STATUS_API=http://host.docker.internal:5005/status
    - FLASK_BACKEND=http://host.docker.internal:5005
    - MONGO_URL=mongodb://host.docker.internal:27017/
    - S3_URL=http://host.docker.internal:4566
    - EMULATOR=host.docker.internal:5555
    volumes:
    - './algorithms/app/.data:/home/data'

  # gifdroid:
  #   build:
  #     context: ./algorithms/docker_apps/gifdroid_app
  #   command: python3 app.py
  #   image: bwoa0001/gifdroid
  #   container_name: bxer.gifdroid
  #   ports:
  #     - '3005:3005'
  #   environment:
  #   - FILE_API=http://host.docker.internal:5005/result/get
  #   - STATUS_API=http://host.docker.internal:5005/status
  #   - FLASK_BACKEND=http://host.docker.internal:5005
  #   - MONGO_URL=mongodb://host.docker.internal:27017/
  #   - S3_URL=http://host.docker.internal:4566
  #   - EMULATOR=host.docker.internal:5555
  #   volumes:
  #   - './algorithms/app/.data:/home/data'

  # ui_checker:
  #   build:
  #     context: ./docker_apps/ui_checker
  #   command: python3 app.py
  #   image: triplejays/ui-checker:1.2
  #   container_name: bxer.ui_checker
  #   ports:
  #     - '3006:3006'
  #   environment:
  #   - debug_mode=1
  #   - status_api=http://host.docker.internal:5005/status
  #   - flask_backend=http://host.docker.internal:5005
  #   - mongo_url=mongodb://host.docker.internal:27017/
  #   - s3_url=http://host.docker.internal:4566
  #   - emulator=host.docker.internal:5555
  #   - FILE_API=http://host.docker.internal:5005/file/get
