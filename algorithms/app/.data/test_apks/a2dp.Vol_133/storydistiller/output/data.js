var links = [
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": null, 
    "methodSourceLink": null, 
    "target": "main", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "methodTargetLink": [], 
    "source_layoutcode": null, 
    "target_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "source": "APP", 
    "source_actcode": null, 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//icon/ic_launcher.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.main"
},
{
    "target_layoutcode": "<root />", 
    "source_fullname": "a2dp.Vol.main", 
    "methodSourceLink": [], 
    "target": "service", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.service.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class service extends Service implements AudioManager.OnAudioFocusChangeListener {\n    private static final String A2DP_Vol = \"A2DP_Vol\";\n    private static final int ALARM_STREAM = 2;\n    static String DeviceToConnect = null;\n    private static final String FIX_STREAM = \"fix_stream\";\n    private static final int IN_CALL_STREAM = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    private static final int MUSIC_STREAM = 0;\n    private static final String OLD_PH_VOL = \"old_phone_vol\";\n    private static final String OLD_VOLUME = \"old_vol\";\n    private static Integer OldVol = 5;\n    private static Integer OldVol2 = 5;\n    private static Integer Oldsilent = null;\n    public static final String PREFS_NAME = \"btVol\";\n    static AudioManager am2 = null;\n    private static MyApplication application;\n    public static btDevice[] btdConn = new btDevice[5];\n    public static Integer connects = 0;\n    private static boolean hideVolUi = false;\n    static IBluetoothA2dp ibta2;\n    public static ServiceConnection mConnection = new ServiceConnection() {\n        /* class a2dp.Vol.service.AnonymousClass11 */\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            service.mIsBound = true;\n            service.ibta2 = IBluetoothA2dp.Stub.asInterface(service);\n            BluetoothDevice device = null;\n            for (BluetoothDevice dev : BluetoothAdapter.getDefaultAdapter().getBondedDevices()) {\n                if (dev.getAddress().equalsIgnoreCase(service.DeviceToConnect)) {\n                    device = dev;\n                }\n            }\n            if (device != null) {\n                try {\n                    service.ibta2.connect(device);\n                } catch (RemoteException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        public void onServiceDisconnected(ComponentName name) {\n            service.mIsBound = false;\n            service.doUnbind(service.application);\n        }\n    };\n    static boolean mIsBound = false;\n    public static boolean mTtsReady = false;\n    private static boolean mvolsLeft = false;\n    private static String notify_pref = \"always\";\n    private static boolean pvolsLeft = false;\n    private static boolean ramp_vol = false;\n    public static boolean run = false;\n    public static boolean talk = false;\n    private DeviceDB DB;\n    float MAX_ACC = 10.0f;\n    private int MAX_MESSAGE_LENGTH = 350;\n    long MAX_TIME = 20000;\n    private long SMS_delay = 3000;\n    private final BroadcastReceiver SMScatcher = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass12 */\n        public void onReceive(Context context, Intent intent) {\n            Bundle bundle;\n            if (intent.getAction().equals(\"android.provider.Telephony.SMS_RECEIVED\") && service.this.tm.getCallState() == 0 && (bundle = intent.getExtras()) != null) {\n                Object[] pdusObj = (Object[]) bundle.get(\"pdus\");\n                SmsMessage[] messages = new SmsMessage[pdusObj.length];\n                for (int i = 0; i &lt; pdusObj.length; i++) {\n                    messages[i] = SmsMessage.createFromPdu((byte[]) pdusObj[i]);\n                }\n                StringBuilder sb = new StringBuilder();\n                for (SmsMessage currentMessage : messages) {\n                    sb.append(MessageFormat.format(service.this.getString(R.string.msgTemplate), service.this.GetName(currentMessage.getDisplayOriginatingAddress()), currentMessage.getDisplayMessageBody())).append(' ');\n                }\n                service.this.TextReader(sb.toString().trim());\n            }\n        }\n    };\n    private int SMSstream = 0;\n    String a2dpDir = \"\";\n    private boolean bluetoothWasOff = false;\n    private final BroadcastReceiver btOFFReciever = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass3 */\n        public void onReceive(Context context, Intent intent) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            String mac = \"\";\n            if (mBTA.getState() == 10 || mBTA.getState() == 13) {\n                for (int j = 0; j &lt; service.btdConn.length; j++) {\n                    if (service.btdConn[j] != null && service.btdConn[j].getMac().length() &gt; 2) {\n                        mac = service.btdConn[j].getMac();\n                        service.btdConn[j] = null;\n                    }\n                }\n                service.this.getConnects();\n                if (mac != \"\") {\n                    if (service.this.notify) {\n                        service.this.updateNot(false, null);\n                    }\n                    if (!service.mvolsLeft) {\n                        service.setVolume(service.OldVol2.intValue(), service.application);\n                    }\n                    if (!service.pvolsLeft) {\n                        service.setPVolume(service.OldVol.intValue());\n                    }\n                    service.this.dowifi(service.this.oldwifistate);\n                }\n                if (service.mTtsReady) {\n                    try {\n                        if (!service.this.clearedTts) {\n                            service.this.clearTts();\n                        }\n                        service.this.mTts.shutdown();\n                        service.mTtsReady = false;\n                        service.this.unregisterReceiver(service.this.SMScatcher);\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n                }\n                Intent itent = new Intent();\n                itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n                itent.putExtra(\"disconnect\", mac);\n                service.application.sendBroadcast(itent);\n            }\n        }\n    };\n    private boolean carMode = true;\n    private boolean clearedTts = true;\n    private int connectedIcon;\n    private volatile boolean connecting = false;\n    private volatile boolean disconnecting = false;\n    private boolean enableGTalk = false;\n    private boolean enableSMS = false;\n    private final BroadcastReceiver headSetReceiver = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass4 */\n        public void onReceive(Context arg0, Intent intent) {\n            int state = intent.getIntExtra(\"state\", -1);\n            try {\n                btDevice bt2 = service.this.DB.getBTD(\"3\");\n                if (bt2 != null && \"3\".equalsIgnoreCase(bt2.getMac())) {\n                    if (state == 0 && service.connects.intValue() &gt; 0) {\n                        service.this.disconnecting = true;\n                        service.this.DoDisconnected(bt2);\n                    } else if (state == 1) {\n                        service.this.connecting = true;\n                        service.this.DoConnected(bt2);\n                    }\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    };\n    private boolean headsetPlug = false;\n    private boolean homeDock = false;\n    public TextToSpeech.OnInitListener listenerStarted = new TextToSpeech.OnInitListener() {\n        /* class a2dp.Vol.service.AnonymousClass14 */\n        public void onInit(int status) {\n            if (status == 0) {\n                service.mTtsReady = true;\n                service.this.mTts.setOnUtteranceProgressListener(service.this.ul);\n            }\n        }\n    };\n    boolean local;\n    LocationManager locmanager;\n    private NotificationManager mNotificationManager = null;\n    private PackageManager mPackageManager;\n    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass5 */\n        public void onReceive(Context context, Intent intent) {\n            BluetoothDevice bt;\n            btDevice bt2;\n            if (!service.this.connecting) {\n                service.this.connecting = true;\n                try {\n                    bt = (BluetoothDevice) intent.getExtras().get(\"android.bluetooth.device.extra.DEVICE\");\n                } catch (Exception e1) {\n                    bt = null;\n                    e1.printStackTrace();\n                }\n                if (bt != null) {\n                    try {\n                        bt2 = service.this.DB.getBTD(bt.getAddress());\n                    } catch (Exception e) {\n                        bt2 = null;\n                    }\n                } else {\n                    try {\n                        if (intent.getAction().equalsIgnoreCase(\"android.app.action.ENTER_CAR_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"1\");\n                        } else if (intent.getAction().equalsIgnoreCase(\"android.app.action.ENTER_DESK_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"2\");\n                        } else if (intent.getAction().equalsIgnoreCase(\"android.intent.action.ACTION_POWER_CONNECTED\")) {\n                            bt2 = service.this.DB.getBTD(\"4\");\n                        } else {\n                            bt2 = null;\n                        }\n                    } catch (Exception e2) {\n                        bt2 = null;\n                        Log.e(service.LOG_TAG, \"Error\" + e2.toString());\n                    }\n                }\n                if (bt2 == null || bt2.getMac() == null) {\n                    service.this.connecting = false;\n                } else {\n                    service.this.DoConnected(bt2);\n                }\n            }\n        }\n    };\n    private final BroadcastReceiver mReceiver2 = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass8 */\n        public void onReceive(Context context2, Intent intent2) {\n            BluetoothDevice bt;\n            btDevice bt2;\n            if (!service.this.disconnecting) {\n                service.this.disconnecting = true;\n                try {\n                    bt = (BluetoothDevice) intent2.getExtras().get(\"android.bluetooth.device.extra.DEVICE\");\n                } catch (Exception e1) {\n                    bt = null;\n                    e1.printStackTrace();\n                }\n                if (bt != null) {\n                    try {\n                        bt2 = service.this.DB.getBTD(bt.getAddress());\n                    } catch (Exception e) {\n                        bt2 = null;\n                        Log.e(service.LOG_TAG, \"Error\" + e.toString());\n                    }\n                } else {\n                    try {\n                        if (intent2.getAction().equalsIgnoreCase(\"android.app.action.EXIT_CAR_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"1\");\n                        } else if (intent2.getAction().equalsIgnoreCase(\"android.app.action.EXIT_DESK_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"2\");\n                        } else if (intent2.getAction().equalsIgnoreCase(\"android.intent.action.ACTION_POWER_DISCONNECTED\")) {\n                            bt2 = service.this.DB.getBTD(\"4\");\n                        } else {\n                            bt2 = null;\n                        }\n                    } catch (Exception e2) {\n                        bt2 = null;\n                        Log.e(service.LOG_TAG, e2.toString());\n                    }\n                }\n                if (bt2 == null || bt2.getMac() == null) {\n                    service.this.disconnecting = false;\n                } else {\n                    service.this.DoDisconnected(bt2);\n                }\n            }\n        }\n    };\n    private TextToSpeech mTts;\n    private final BroadcastReceiver messageClear = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass2 */\n        public void onReceive(Context arg0, Intent arg1) {\n            service.this.clearTts();\n        }\n    };\n    private boolean musicWasPlaying = false;\n    HashMap&lt;String, String> myHash;\n    private boolean notify = true;\n    boolean oldgpsstate = true;\n    boolean oldwifistate = true;\n    Boolean permLocation = true;\n    Boolean permPhone = true;\n    Boolean permReadContacts = true;\n    Boolean permSMS = true;\n    Boolean permStorage = true;\n    private boolean power = false;\n    SharedPreferences preferences;\n    public BroadcastReceiver sco_change = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass16 */\n        public void onReceive(Context arg0, Intent arg1) {\n            if (arg1.getIntExtra(\"android.media.extra.SCO_AUDIO_STATE\", 0) == 0 && !service.this.clearedTts) {\n                if (!service.mTtsReady) {\n                    service.this.mTts = new TextToSpeech(service.application, service.this.listenerStarted);\n                }\n                HashMap&lt;String, String> myHash2 = new HashMap&lt;>();\n                myHash2.put(\"utteranceId\", service.FIX_STREAM);\n                service.am2.requestAudioFocus(service.this, 3, 2);\n                myHash2.put(\"streamType\", String.valueOf(3));\n                if (service.mTtsReady) {\n                }\n                service.am2.abandonAudioFocus(service.this);\n                service.am2.setMode(0);\n                if (service.this.musicWasPlaying) {\n                    new CountDownTimer(1000, 6000) {\n                        /* class a2dp.Vol.service.AnonymousClass16.AnonymousClass1 */\n                        public void onFinish() {\n                            Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                            i.putExtra(\"command\", \"play\");\n                            service.this.sendBroadcast(i);\n                        }\n                        public void onTick(long millisUntilFinished) {\n                            Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                            downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, TransportMediator.KEYCODE_MEDIA_PLAY));\n                            service.this.sendOrderedBroadcast(downIntent2, null);\n                        }\n                    }.start();\n                }\n                service.this.clearedTts = true;\n            }\n        }\n    };\n    private boolean speakerPhoneWasOn = true;\n    private TelephonyManager tm;\n    private final BroadcastReceiver tmessage = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass1 */\n        public void onReceive(Context context, Intent intent) {\n            service.this.TextReader(intent.getStringExtra(\"message\"));\n        }\n    };\n    boolean tmessageRegistered = false;\n    private boolean toasts = true;\n    public UtteranceProgressListener ul = new UtteranceProgressListener() {\n        /* class a2dp.Vol.service.AnonymousClass15 */\n        public void onDone(String uttId) {\n            int result = 0;\n            if (service.A2DP_Vol.equalsIgnoreCase(uttId)) {\n                switch (service.this.SMSstream) {\n                    case 0:\n                        result = service.am2.abandonAudioFocus(service.this);\n                        break;\n                    case 1:\n                        if (!service.this.clearedTts) {\n                            Intent c = new Intent();\n                            c.setAction(\"a2dp.vol.service.CLEAR\");\n                            service.application.sendBroadcast(c);\n                        }\n                        result = service.am2.abandonAudioFocus(service.this);\n                        break;\n                    case 2:\n                        if (!service.this.clearedTts) {\n                            Intent c2 = new Intent();\n                            c2.setAction(\"a2dp.vol.service.CLEAR\");\n                            service.application.sendBroadcast(c2);\n                        }\n                        result = service.am2.abandonAudioFocus(service.this);\n                        break;\n                }\n                if (result == 0) {\n                    service.am2.abandonAudioFocus(service.this);\n                }\n                service.am2.setMode(0);\n            }\n            if (service.FIX_STREAM.equalsIgnoreCase(uttId)) {\n                service.am2.abandonAudioFocus(service.this);\n            }\n            service.am2.setMode(0);\n        }\n        public void onError(String utteranceId) {\n        }\n        public void onStart(String utteranceId) {\n        }\n    };\n    private long vol_delay = 5000;\n    WifiManager wifiManager;\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        this.tm = (TelephonyManager) getSystemService(\"phone\");\n        return 1;\n    }\n    public IBinder onBind(Intent arg0) {\n        return null;\n    }\n    public void onCreate() {\n        application = (MyApplication) getApplication();\n        try {\n            this.preferences = PreferenceManager.getDefaultSharedPreferences(application);\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.enableSMS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.enableGTalk = this.preferences.getBoolean(\"enableGTalk\", true);\n            notify_pref = this.preferences.getString(\"notify_pref\", \"always\");\n            hideVolUi = this.preferences.getBoolean(\"hideVolUi\", false);\n            this.MAX_TIME = Long.valueOf(this.preferences.getString(\"gpsTime\", \"15000\")).longValue();\n            this.MAX_ACC = Float.valueOf(this.preferences.getString(\"gpsDistance\", \"10\")).floatValue();\n            this.local = this.preferences.getBoolean(\"useLocalStorage\", false);\n            if (this.local) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            OldVol2 = Integer.valueOf(this.preferences.getInt(OLD_VOLUME, 10));\n            OldVol = Integer.valueOf(this.preferences.getInt(OLD_PH_VOL, 5));\n            Oldsilent = Integer.valueOf(this.preferences.getInt(\"oldsilent\", 10));\n        } catch (NumberFormatException e) {\n            this.MAX_ACC = 10.0f;\n            this.MAX_TIME = 15000;\n            Toast.makeText(this, \"prefs failed to load \", 1).show();\n            e.printStackTrace();\n            Log.e(LOG_TAG, \"prefs failed to load \" + e.getMessage());\n        }\n        registerRecievers();\n        am2 = (AudioManager) getSystemService(\"audio\");\n        this.DB = new DeviceDB(application);\n        this.wifiManager = (WifiManager) getBaseContext().getSystemService(\"wifi\");\n        this.locmanager = (LocationManager) getBaseContext().getSystemService(\"location\");\n        if (notify_pref.equalsIgnoreCase(\"always\") || notify_pref.equalsIgnoreCase(\"connected_only\")) {\n            this.notify = true;\n        } else {\n            this.notify = false;\n        }\n        if (this.notify) {\n            this.mNotificationManager = (NotificationManager) getSystemService(\"notification\");\n            Notification not = new Notification.Builder(application).setContentTitle(getResources().getString(R.string.app_name)).setContentIntent(PendingIntent.getActivity(this, 0, new Intent(this, main.class), 0)).setSmallIcon(R.drawable.ic_launcher).setContentText(getResources().getString(R.string.ServRunning)).setPriority(-2).build();\n            if (notify_pref.equalsIgnoreCase(\"always\")) {\n                this.mNotificationManager.notify(1, not);\n                startForeground(1, not);\n            }\n        }\n        run = true;\n        if (this.toasts) {\n            Toast.makeText(this, (int) R.string.ServiceStarted, 1).show();\n        }\n        Intent i = new Intent();\n        i.setAction(\"a2dp.vol.service.RUNNING\");\n        application.sendBroadcast(i);\n        this.tm = (TelephonyManager) getSystemService(\"phone\");\n        this.mPackageManager = getPackageManager();\n    }\n    private void registerRecievers() {\n        IntentFilter filter = new IntentFilter(\"android.bluetooth.device.action.ACL_CONNECTED\");\n        IntentFilter filter2 = new IntentFilter(\"android.bluetooth.device.action.ACL_DISCONNECTED\");\n        registerReceiver(this.btOFFReciever, new IntentFilter(\"android.bluetooth.adapter.action.STATE_CHANGED\"));\n        registerReceiver(this.messageClear, new IntentFilter(\"a2dp.vol.service.CLEAR\"));\n        if (this.carMode) {\n            filter2.addAction(UiModeManager.ACTION_EXIT_CAR_MODE);\n            filter.addAction(UiModeManager.ACTION_ENTER_CAR_MODE);\n        }\n        if (this.homeDock) {\n            filter2.addAction(UiModeManager.ACTION_EXIT_DESK_MODE);\n            filter.addAction(UiModeManager.ACTION_ENTER_DESK_MODE);\n        }\n        if (this.power) {\n            filter2.addAction(\"android.intent.action.ACTION_POWER_DISCONNECTED\");\n            filter.addAction(\"android.intent.action.ACTION_POWER_CONNECTED\");\n        }\n        if (this.headsetPlug) {\n            registerReceiver(this.headSetReceiver, new IntentFilter(\"android.intent.action.HEADSET_PLUG\"));\n        }\n        registerReceiver(this.mReceiver, filter);\n        registerReceiver(this.mReceiver2, filter2);\n    }\n    public void onDestroy() {\n        run = false;\n        stopService(new Intent(application, StoreLoc.class));\n        try {\n            unregisterReceiver(this.mReceiver);\n            unregisterReceiver(this.mReceiver2);\n            unregisterReceiver(this.btOFFReciever);\n            if (this.headsetPlug) {\n                unregisterReceiver(this.headSetReceiver);\n            }\n            if (mTtsReady) {\n                try {\n                    if (!this.clearedTts) {\n                        clearTts();\n                    }\n                    this.mTts.shutdown();\n                    mTtsReady = false;\n                    unregisterReceiver(this.SMScatcher);\n                    unregisterReceiver(this.sco_change);\n                    unregisterReceiver(this.tmessage);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n            this.DB.getDb().close();\n            unregisterReceiver(this.messageClear);\n        } catch (Exception e2) {\n            e2.printStackTrace();\n        }\n        Intent i = new Intent();\n        i.setAction(\"a2dp.vol.service.STOPPED_RUNNING\");\n        application.sendBroadcast(i);\n        if (this.toasts) {\n            Toast.makeText(this, (int) R.string.ServiceStopped, 1).show();\n        }\n        if (mIsBound) {\n        }\n        stopForeground(true);\n    }\n    public void onStart() {\n        run = true;\n        this.connecting = false;\n        this.disconnecting = false;\n        if (this.notify) {\n            updateNot(false, null);\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void DoConnected(btDevice bt2) {\n        boolean done = false;\n        int l = 0;\n        for (int k = 0; k &lt; btdConn.length; k++) {\n            if (btdConn[k] != null && bt2.getMac().equalsIgnoreCase(btdConn[k].getMac())) {\n                l = k;\n                done = true;\n            }\n        }\n        if (!done) {\n            do {\n                if (btdConn[l] == null) {\n                    btdConn[l] = bt2;\n                    done = true;\n                }\n                l++;\n                if (l &gt;= btdConn.length) {\n                    done = true;\n                    continue;\n                }\n            } while (!done);\n        }\n        getConnects();\n        if (connects.intValue() &lt;= 1) {\n            getOldvol();\n            getOldPvol();\n            this.oldwifistate = this.wifiManager.isWifiEnabled();\n            this.oldgpsstate = this.locmanager.isProviderEnabled(\"gps\");\n        }\n        this.connectedIcon = bt2.getIcon();\n        this.SMSstream = bt2.getSmsstream();\n        this.vol_delay = (long) (bt2.getVoldelay() * 1000);\n        this.SMS_delay = (long) (bt2.getSmsdelay() * 1000);\n        ramp_vol = bt2.isVolramp();\n        if (bt2.wifi) {\n            try {\n                this.oldwifistate = this.wifiManager.isWifiEnabled();\n                dowifi(false);\n            } catch (Exception e) {\n                e.printStackTrace();\n                Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            }\n        }\n        if (bt2.getBdevice() != null && bt2.getBdevice().length() == 17) {\n            DeviceToConnect = bt2.getBdevice();\n            getIBluetoothA2dp(application);\n        }\n        if (this.notify) {\n            updateNot(true, bt2.toString());\n        }\n        if (this.toasts) {\n            Toast.makeText(application, bt2.toString(), 1).show();\n        }\n        if (bt2.hasIntent()) {\n            if (this.tm == null) {\n                runApp(bt2);\n            } else if (this.tm.getCallState() == 0) {\n                runApp(bt2);\n            }\n        }\n        if (this.enableGTalk && bt2.isEnableTTS()) {\n            this.mTts = new TextToSpeech(application, this.listenerStarted);\n            application.registerReceiver(this.tmessage, new IntentFilter(\"a2dp.vol.service.MESSAGE\"));\n            this.tmessageRegistered = true;\n            registerReceiver(this.sco_change, new IntentFilter(\"android.media.ACTION_SCO_AUDIO_STATE_UPDATED\"));\n            talk = true;\n        }\n        if (bt2.isEnableTTS() && this.enableSMS) {\n            application.registerReceiver(this.SMScatcher, new IntentFilter(\"android.provider.Telephony.SMS_RECEIVED\"));\n        }\n        Intent itent = new Intent();\n        itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n        itent.putExtra(\"connect\", bt2.getMac());\n        application.sendBroadcast(itent);\n        this.connecting = false;\n        application.sendBroadcast(new Intent(\"a2dp.Vol.Clear\"));\n        if (bt2.isSetpv()) {\n            final int vol1 = bt2.getPhonev();\n            new CountDownTimer(this.vol_delay + 500, this.vol_delay + 500) {\n                /* class a2dp.Vol.service.AnonymousClass6 */\n                public void onFinish() {\n                    service.setPVolume(vol1);\n                }\n                public void onTick(long arg0) {\n                }\n            }.start();\n        }\n        if (bt2.isSilent()) {\n            am2.setStreamVolume(5, 0, 0);\n        }\n        if (bt2.isSetV()) {\n            final int vol = bt2.getDefVol();\n            new CountDownTimer(this.vol_delay, this.vol_delay) {\n                /* class a2dp.Vol.service.AnonymousClass7 */\n                public void onFinish() {\n                    service.setVolume(vol, service.application);\n                }\n                public void onTick(long arg0) {\n                }\n            }.start();\n        }\n        if (bt2.isCarmode()) {\n            set_car_mode(true);\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void DoDisconnected(btDevice bt2) {\n        BluetoothAdapter mBTA;\n        int SavVol = am2.getStreamVolume(3);\n        if (bt2.hasIntent()) {\n            if (am2.isMusicActive()) {\n                Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                i.putExtra(\"command\", \"pause\");\n                sendBroadcast(i);\n                Intent j = new Intent(\"android.intent.action.HEADSET_PLUG\");\n                j.putExtra(\"state\", 0);\n                try {\n                    sendBroadcast(j);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, 86));\n                sendOrderedBroadcast(downIntent2, null);\n            }\n            if (bt2.getPname().length() &gt; 3 && bt2.isAppkill()) {\n                Intent startMain = new Intent(\"android.intent.action.MAIN\");\n                startMain.addCategory(\"android.intent.category.HOME\");\n                startMain.setFlags(268435456);\n                startActivity(startMain);\n                final String kpackage = bt2.getPname();\n                new CountDownTimer(3000, 3000) {\n                    /* class a2dp.Vol.service.AnonymousClass9 */\n                    public void onFinish() {\n                        if (service.am2.isMusicActive()) {\n                            Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                            i.putExtra(\"command\", \"pause\");\n                            service.this.sendBroadcast(i);\n                            Intent j = new Intent(\"android.intent.action.HEADSET_PLUG\");\n                            j.putExtra(\"state\", 0);\n                            try {\n                                service.this.sendBroadcast(j);\n                            } catch (Exception e) {\n                                e.printStackTrace();\n                            }\n                            Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                            downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, 86));\n                            service.this.sendOrderedBroadcast(downIntent2, null);\n                        }\n                        try {\n                            service.this.stopApp(kpackage);\n                        } catch (Exception e2) {\n                            e2.printStackTrace();\n                            Log.e(service.LOG_TAG, \"Error \" + e2.getMessage());\n                        }\n                    }\n                    public void onTick(long arg0) {\n                        if (service.am2.isMusicActive()) {\n                            Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                            i.putExtra(\"command\", \"pause\");\n                            service.this.sendBroadcast(i);\n                            Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                            downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, 86));\n                            service.this.sendOrderedBroadcast(downIntent2, null);\n                        }\n                        try {\n                            service.this.stopApp(kpackage);\n                        } catch (Exception e) {\n                            e.printStackTrace();\n                            Log.e(service.LOG_TAG, \"Error \" + e.getMessage());\n                        }\n                    }\n                }.start();\n            }\n        }\n        if (bt2 != null && bt2.isGetLoc()) {\n            Intent dolock = new Intent(this, StoreLoc.class);\n            dolock.putExtra(\"device\", bt2.getMac());\n            try {\n                startService(dolock);\n            } catch (Exception e2) {\n                e2.printStackTrace();\n            }\n        }\n        if (bt2.wifi) {\n            dowifi(this.oldwifistate);\n        }\n        for (int k = 0; k &lt; btdConn.length; k++) {\n            if (btdConn[k] != null && bt2.getMac().equalsIgnoreCase(btdConn[k].getMac())) {\n                btdConn[k] = null;\n            }\n        }\n        getConnects();\n        if (((bt2 != null && bt2.isSetV()) || bt2 == null) && !mvolsLeft) {\n            setVolume(OldVol2.intValue(), application);\n        }\n        if (((bt2 != null && bt2.isSetpv()) || bt2 == null) && !pvolsLeft) {\n            setPVolume(OldVol.intValue());\n        }\n        if (this.notify && bt2.mac != null) {\n            updateNot(false, null);\n        }\n        if (mTtsReady && (bt2.isEnableTTS() || this.enableGTalk || connects.intValue() &lt; 1)) {\n            try {\n                if (!this.clearedTts) {\n                    clearTts();\n                }\n                this.mTts.shutdown();\n                mTtsReady = false;\n                if (this.enableGTalk) {\n                    unregisterReceiver(this.sco_change);\n                    talk = false;\n                }\n                if (this.enableSMS) {\n                    application.unregisterReceiver(this.SMScatcher);\n                }\n            } catch (Exception e3) {\n                e3.printStackTrace();\n            }\n        }\n        if (this.tmessageRegistered) {\n            try {\n                application.unregisterReceiver(this.tmessage);\n                this.tmessageRegistered = false;\n            } catch (Exception e4) {\n                e4.printStackTrace();\n            }\n        }\n        if (bt2.isSilent()) {\n            am2.setStreamVolume(5, Oldsilent.intValue(), 0);\n        }\n        if (!(bt2.getBdevice() == null || bt2.getBdevice().length() != 17 || (mBTA = BluetoothAdapter.getDefaultAdapter()) == null)) {\n            if (mBTA.isEnabled() && this.bluetoothWasOff) {\n                mBTA.disable();\n            }\n            doUnbind(application);\n        }\n        if (bt2.isAutovol()) {\n            bt2.setDefVol(SavVol);\n            this.DB.update(bt2);\n        }\n        if (bt2.isCarmode()) {\n            set_car_mode(false);\n        }\n        Intent itent = new Intent();\n        itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n        itent.putExtra(\"disconnect\", bt2.getMac());\n        application.sendBroadcast(itent);\n        this.disconnecting = false;\n    }\n    public static void setVolume(final int inputVol, Context sender) {\n        int ui;\n        int curvol = am2.getStreamVolume(3);\n        if (inputVol &lt; 0) {\n            inputVol = 0;\n        }\n        if (inputVol &gt; am2.getStreamMaxVolume(3)) {\n            inputVol = am2.getStreamMaxVolume(3);\n        }\n        if (!ramp_vol || inputVol &lt;= curvol) {\n            if (hideVolUi) {\n                ui = 0;\n            } else {\n                ui = 1;\n            }\n            am2.setStreamVolume(3, inputVol, ui);\n            return;\n        }\n        new CountDownTimer((long) ((inputVol - curvol) * 1000), 1000) {\n            /* class a2dp.Vol.service.AnonymousClass10 */\n            public void onFinish() {\n                int ui;\n                if (service.hideVolUi) {\n                    ui = 0;\n                } else {\n                    ui = 1;\n                }\n                service.am2.setStreamVolume(3, inputVol, ui);\n            }\n            public void onTick(long millisUntilFinished) {\n                int ui;\n                if (service.hideVolUi) {\n                    ui = 0;\n                } else {\n                    ui = 1;\n                }\n                int cvol = service.am2.getStreamVolume(3);\n                int newvol = cvol;\n                if (cvol + 1 &lt; inputVol) {\n                    newvol++;\n                }\n                service.am2.setStreamVolume(3, newvol, ui);\n            }\n        }.start();\n    }\n    private void getOldvol() {\n        OldVol2 = Integer.valueOf(am2.getStreamVolume(3));\n        SharedPreferences.Editor editor = this.preferences.edit();\n        editor.putInt(OLD_VOLUME, OldVol2.intValue());\n        editor.commit();\n    }\n    private void getOldPvol() {\n        OldVol = Integer.valueOf(am2.getStreamVolume(0));\n        Oldsilent = Integer.valueOf(am2.getStreamVolume(5));\n        SharedPreferences.Editor editor = this.preferences.edit();\n        editor.putInt(OLD_PH_VOL, OldVol.intValue());\n        editor.putInt(\"oldsilent\", Oldsilent.intValue());\n        editor.commit();\n    }\n    public static int setPVolume(int inputVol) {\n        if (inputVol &lt; 0) {\n            inputVol = 0;\n        }\n        if (inputVol &gt; am2.getStreamMaxVolume(0)) {\n            inputVol = am2.getStreamMaxVolume(0);\n        }\n        if (hideVolUi) {\n            am2.setStreamVolume(0, inputVol, 1);\n        } else {\n            am2.setStreamVolume(0, inputVol, 0);\n        }\n        return am2.getStreamVolume(0);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void updateNot(boolean connect, String car) {\n        String temp;\n        if (car != null) {\n            temp = getResources().getString(R.string.connectedTo) + \" \" + car;\n        } else if (connects.intValue() &gt; 0) {\n            String tmp = null;\n            for (int k = 0; k &lt; btdConn.length; k++) {\n                if (btdConn[k] != null) {\n                    tmp = btdConn[k].toString();\n                }\n            }\n            temp = getResources().getString(R.string.connectedTo) + \" \" + tmp;\n            connect = true;\n        } else {\n            temp = getResources().getString(R.string.ServRunning);\n        }\n        if (connect) {\n            this.mNotificationManager.notify(1, new NotificationCompat.Builder(application).setContentTitle(getResources().getString(R.string.app_name)).setContentIntent(PendingIntent.getActivity(this, 0, new Intent(this, main.class), 0)).setSmallIcon(this.connectedIcon).setContentText(temp).setPriority(-2).build());\n            return;\n        }\n        this.mNotificationManager.cancel(1);\n        if (notify_pref.equalsIgnoreCase(\"always\")) {\n            this.mNotificationManager.notify(1, new Notification.Builder(application).setContentTitle(getResources().getString(R.string.app_name)).setContentIntent(PendingIntent.getActivity(this, 0, new Intent(this, main.class), 0)).setSmallIcon(R.drawable.ic_launcher).setContentText(temp).setPriority(-2).build());\n        }\n    }\n    private boolean runApp(btDevice bt) {\n        Intent i;\n        String pname = bt.getPname();\n        String cAction = bt.getAppaction();\n        String cData = bt.getAppdata();\n        String cType = bt.getApptype();\n        if (bt.isApprestart() && pname != null && pname.length() &gt; 3) {\n            try {\n                ((ActivityManager) getSystemService(\"activity\")).killBackgroundProcesses(pname);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        if (pname == null || pname.equals(\"\")) {\n            return false;\n        }\n        if (cData.length() &gt; 1) {\n            try {\n                i = Intent.getIntent(cData);\n            } catch (URISyntaxException e2) {\n                e2.printStackTrace();\n                return false;\n            }\n        } else if (!cAction.equals(\"\")) {\n            i = new Intent();\n            i.setAction(cAction);\n            if (!cData.equals(\"\")) {\n                i.setData(Uri.parse(cData));\n            }\n            if (!cType.equals(\"\")) {\n                i.setType(cType);\n            }\n        } else {\n            try {\n                i = this.mPackageManager.getLaunchIntentForPackage(pname);\n            } catch (Exception e3) {\n                e3.printStackTrace();\n                return false;\n            }\n        }\n        try {\n            i.setFlags(268435456);\n        } catch (Exception e1) {\n            e1.printStackTrace();\n        }\n        try {\n            startActivity(i);\n            return true;\n        } catch (Exception e4) {\n            Toast t = Toast.makeText(getApplicationContext(), (int) R.string.app_not_found, 0);\n            if (this.notify) {\n                t.show();\n            }\n            e4.printStackTrace();\n            return false;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void stopApp(String packageName) {\n        if (getPackageManager().getLaunchIntentForPackage(packageName) != null) {\n            try {\n                ActivityManager act1 = (ActivityManager) getSystemService(\"activity\");\n                act1.killBackgroundProcesses(packageName);\n                for (ActivityManager.RunningAppProcessInfo info : act1.getRunningAppProcesses()) {\n                    for (int i = 0; i &lt; info.pkgList.length; i++) {\n                        if (info.pkgList[i].contains(packageName)) {\n                            Process.killProcess(info.pid);\n                        }\n                    }\n                }\n            } catch (ActivityNotFoundException err) {\n                err.printStackTrace();\n                Toast t = Toast.makeText(getApplicationContext(), (int) R.string.app_not_found, 0);\n                if (this.notify) {\n                    t.show();\n                }\n            }\n        }\n    }\n    public void getIBluetoothA2dp(Context context) {\n        Intent i = new Intent(IBluetoothA2dp.class.getName());\n        i.setPackage(getPackageManager().resolveService(i, 64).serviceInfo.packageName);\n        if (!context.bindService(i, mConnection, 1)) {\n            Toast.makeText(context, \"start service connection failed\", 0).show();\n        }\n    }\n    static void doUnbind(Context context) {\n        if (mIsBound) {\n            context.unbindService(mConnection);\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void dowifi(boolean s) {\n        try {\n            this.wifiManager.setWifiEnabled(s);\n        } catch (Exception e) {\n            Toast.makeText(application, \"Unable to switch wifi: \" + e.toString(), 1).show();\n            e.printStackTrace();\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        connects = 0;\n        mvolsLeft = false;\n        pvolsLeft = false;\n        for (int i = 0; i &lt; btdConn.length; i++) {\n            if (btdConn[i] != null) {\n                Integer num = connects;\n                connects = Integer.valueOf(connects.intValue() + 1);\n                if (btdConn[i].isSetV()) {\n                    mvolsLeft = true;\n                }\n                if (btdConn[i].isSetpv()) {\n                    pvolsLeft = true;\n                }\n            }\n        }\n    }\n    public void TextReader(String rawinput) {\n        if (mTtsReady) {\n            this.myHash = new HashMap&lt;>();\n            if (rawinput == null) {\n                Toast.makeText(application, \"No input\", 1).show();\n                return;\n            }\n            final String input = rawinput.replaceAll(\"http.*? \", \", URL, \");\n            this.myHash.put(\"utteranceId\", A2DP_Vol);\n            if (input.length() &gt; this.MAX_MESSAGE_LENGTH) {\n                input = input.substring(0, this.MAX_MESSAGE_LENGTH) + \" , , , message truncated\";\n            }\n            this.musicWasPlaying = am2.isMusicActive();\n            switch (this.SMSstream) {\n                case 0:\n                    am2.requestAudioFocus(this, 3, 2);\n                    this.myHash.put(\"streamType\", String.valueOf(3));\n                    this.clearedTts = false;\n                    break;\n                case 1:\n                    if (am2.isBluetoothScoAvailableOffCall()) {\n                        am2.startBluetoothSco();\n                    }\n                    if (this.musicWasPlaying) {\n                        Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                        i.putExtra(\"command\", \"pause\");\n                        sendBroadcast(i);\n                    }\n                    am2.requestAudioFocus(this, 0, 1);\n                    this.myHash.put(\"streamType\", String.valueOf(0));\n                    this.clearedTts = false;\n                    break;\n                case 2:\n                    am2.requestAudioFocus(this, 4, 2);\n                    this.myHash.put(\"streamType\", String.valueOf(4));\n                    this.clearedTts = false;\n                    break;\n            }\n            if (this.toasts) {\n                Toast.makeText(application, input, 1).show();\n            }\n            if (this.tm.getCallState() == 0) {\n                new CountDownTimer(this.SMS_delay, this.SMS_delay / 2) {\n                    /* class a2dp.Vol.service.AnonymousClass13 */\n                    public void onFinish() {\n                        try {\n                            service.this.mTts.speak(input, 1, service.this.myHash);\n                        } catch (Exception e) {\n                            Toast.makeText(service.application, (int) R.string.TTSNotReady, 1).show();\n                            e.printStackTrace();\n                        }\n                    }\n                    public void onTick(long arg0) {\n                    }\n                }.start();\n            }\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void clearTts() {\n        if (am2.isBluetoothScoAvailableOffCall()) {\n            am2.stopBluetoothSco();\n        }\n    }\n    public void onAudioFocusChange(int focusChange) {\n        switch (focusChange) {\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String GetName(String number) {\n        if (ContextCompat.checkSelfPermission(application, \"android.permission.READ_CONTACTS\") == 0) {\n            this.permReadContacts = true;\n        } else {\n            this.permReadContacts = false;\n        }\n        if (this.permReadContacts.booleanValue()) {\n            Cursor c = getContentResolver().query(Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode(number)), new String[]{\"display_name\"}, null, null, null);\n            if (c.moveToFirst()) {\n                return c.getString(c.getColumnIndex(\"display_name\"));\n            }\n        }\n        return number;\n    }\n    private void set_car_mode(boolean mode) {\n        try {\n            UiModeManager mm = (UiModeManager) getSystemService(\"uimode\");\n            if (mode) {\n                mm.enableCarMode(1);\n            } else {\n                mm.disableCarMode(0);\n            }\n        } catch (Exception e) {\n            Toast.makeText(this, e.getMessage(), 1).show();\n            e.printStackTrace();\n        }\n    }\n}\n", 
    "source": "main", 
    "source_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.service"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][369,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/headers\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/list\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t<node bounds=\"[0,210][1080,303]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"General Settings\" />\n\t\t\t\t\t\t\t\t<node bounds=\"[0,306][1080,498]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,306][912,498]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,348][298,405]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Start at Boot?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,405][516,456]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"The service will start at boot.\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,306][1038,498]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,360][1038,444]\" checkable=\"true\" checked=\"true\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,501][1080,736]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,501][912,736]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,543][332,600]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Show Pop-ups?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,600][912,694]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"Pop-up messages are shown when the service starts or stops.\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,501][1038,736]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,576][1038,660]\" checkable=\"true\" checked=\"true\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,739][1080,931]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,739][1038,931]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,781][450,838]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Use Notification Icon?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,838][380,889]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"Notification Visibility\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,934][1080,1126]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,934][912,1126]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,976][474,1033]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Use Local File Storage?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1033][439,1084]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"Use SD Card file storage\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,934][1038,1126]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,988][1038,1072]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,1129][1080,1321]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1129][912,1321]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1171][465,1228]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Respond to Car Mode?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1228][397,1279]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"Respond to Car Mode\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,1129][1038,1321]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,1183][1038,1267]\" checkable=\"true\" checked=\"true\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,1324][1080,1516]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1324][912,1516]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1366][502,1423]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Respond to Home Dock?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1423][534,1474]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"Do not respond to Home Dock\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,1324][1038,1516]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,1378][1038,1462]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,1519][1080,1711]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"7\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1519][912,1711]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1561][491,1618]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Respond to Audio Jack?\" />\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1618][525,1669]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/summary\" scrollable=\"false\" selected=\"false\" text=\"Do not respond to Audio Jack\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,1519][1038,1711]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,1573][1038,1657]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t<node bounds=\"[0,1714][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"8\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1714][912,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[42,1756][625,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/title\" scrollable=\"false\" selected=\"false\" text=\"Respond to Power Connection?\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t\t<node bounds=\"[912,1714][1038,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/widget_frame\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t\t\t\t<node bounds=\"[954,1768][1038,1794]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/checkbox\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t\t</node>\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.main", 
    "methodSourceLink": [], 
    "target": "Preferences", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.Preferences.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class Preferences extends PreferenceActivity {\n    public static final String PREFS_NAME = \"btVol\";\n    private MyApplication application;\n    public void onContentChanged() {\n        stopService(new Intent(this, service.class));\n        super.onContentChanged();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        getSharedPreferences(\"btVol\", 0).edit().commit();\n        startService(new Intent(this, service.class));\n        this.application = (MyApplication) getApplication();\n        Intent i = new Intent();\n        i.setAction(\"a2dp.vol.preferences.UPDATED\");\n        this.application.sendBroadcast(i);\n        super.onDestroy();\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        addPreferencesFromResource(R.xml.preferences);\n    }\n}\n", 
    "source": "main", 
    "source_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.Preferences"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][369,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[13,223][1067,367]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow03\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[13,223][470,367]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/exportdbtosdbutton\" scrollable=\"false\" selected=\"false\" text=\"EXPORT DATABASE TO SD CARD\" />\n\t\t\t\t\t\t<node bounds=\"[470,223][1067,367]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/exportdbxmltosdbutton\" scrollable=\"false\" selected=\"false\" text=\"EXPORT DATABASE AS XML TO SD CARD\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,380][1080,524]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow04\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,380][578,524]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ImportDBButton\" scrollable=\"false\" selected=\"false\" text=\"IMPORT DATABASE FROM SD CARD\" />\n\t\t\t\t\t\t<node bounds=\"[578,380][1080,524]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ExportLoc\" scrollable=\"false\" selected=\"false\" text=\"EXPORT LAST LOCATION DATA\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,524][532,575]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,524][532,575]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Path\" scrollable=\"false\" selected=\"false\" text=\"Path will show here after export\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[465,575][614,671]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[465,575][614,671]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Output\" scrollable=\"false\" selected=\"false\" text=\"Car Dock&#10;\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.main", 
    "methodSourceLink": [], 
    "target": "ManageData", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.ManageData.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class ManageData extends Activity {\n    String a2dpDir;\n    private MyApplication application;\n    private Button exportDbToSdButton;\n    private Button exportDbXmlToSdButton;\n    private Button exportLoc;\n    private Button importDB;\n    private TextView output = null;\n    private TextView path = null;\n    private String pathstr;\n    public void finish() {\n        setResult(-1, new Intent());\n        super.finish();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        setResult(-1, new Intent());\n        super.onDestroy();\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        this.application = (MyApplication) getApplication();\n        this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n        setContentView(R.layout.managedata);\n        this.output = (TextView) findViewById(R.id.Output);\n        this.path = (TextView) findViewById(R.id.Path);\n        new SelectDataTask().execute(new String[0]);\n        this.exportDbToSdButton = (Button) findViewById(R.id.exportdbtosdbutton);\n        this.exportDbToSdButton.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.ManageData.AnonymousClass1 */\n            public void onClick(View v) {\n                if (ManageData.this.isExternalStorageAvail()) {\n                    new ExportDatabaseFileTask().execute(new String[0]);\n                } else {\n                    Toast.makeText(ManageData.this, \"External storage is not available, unable to export data.\", 0).show();\n                }\n            }\n        });\n        this.exportDbXmlToSdButton = (Button) findViewById(R.id.exportdbxmltosdbutton);\n        this.exportDbXmlToSdButton.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.ManageData.AnonymousClass2 */\n            public void onClick(View v) {\n                if (ManageData.this.isExternalStorageAvail()) {\n                    new ExportDataAsXmlTask().execute(\"devices\", \"A2DPDevices\");\n                    return;\n                }\n                Toast.makeText(ManageData.this, \"External storage is not available, unable to export data.\", 0).show();\n            }\n        });\n        this.importDB = (Button) findViewById(R.id.ImportDBButton);\n        this.importDB.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.ManageData.AnonymousClass3 */\n            public void onClick(View v) {\n                if (ManageData.this.isExternalStorageAvail()) {\n                    new ImportDatabaseFileTask().execute(\"devices\", ManageData.this.a2dpDir);\n                    return;\n                }\n                Toast.makeText(ManageData.this, \"External storage is not available, unable to import data.\", 0).show();\n            }\n        });\n        this.exportLoc = (Button) findViewById(R.id.ExportLoc);\n        this.exportLoc.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.ManageData.AnonymousClass4 */\n            public void onClick(View v) {\n                if (ManageData.this.isExternalStorageAvail()) {\n                    new ExportLocationTask().execute(\"My_Last_Location\", ManageData.this.a2dpDir);\n                    return;\n                }\n                Toast.makeText(ManageData.this, \"External storage is not available, unable to export data.\", 0).show();\n            }\n        });\n    }\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestoreInstanceState(Bundle savedInstanceState) {\n        super.onRestoreInstanceState(savedInstanceState);\n    }\n    /* access modifiers changed from: protected */\n    public void onSaveInstanceState(Bundle saveState) {\n        super.onSaveInstanceState(saveState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private boolean isExternalStorageAvail() {\n        return Environment.getExternalStorageState().equals(\"mounted\");\n    }\n    private class ExportDatabaseFileTask extends AsyncTask&lt;String, Void, Boolean> {\n        private final ProgressDialog dialog;\n        private ExportDatabaseFileTask() {\n            this.dialog = new ProgressDialog(ManageData.this);\n        }\n        /* access modifiers changed from: protected */\n        public void onPreExecute() {\n            this.dialog.setMessage(\"Exporting database...\");\n            this.dialog.show();\n        }\n        /* access modifiers changed from: protected */\n        public Boolean doInBackground(String... args) {\n            File dbFile = new File(ManageData.this.application.getDeviceDB().getDb().getPath());\n            File exportDir = new File(ManageData.this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            File file = new File(exportDir, dbFile.getName());\n            ManageData.this.pathstr = file.getPath();\n            try {\n                file.createNewFile();\n                copyFile(dbFile, file);\n                return true;\n            } catch (IOException e) {\n                Log.e(MyApplication.APP_NAME, e.getMessage(), e);\n                return false;\n            }\n        }\n        /* access modifiers changed from: protected */\n        public void onPostExecute(Boolean success) {\n            if (this.dialog.isShowing()) {\n                this.dialog.dismiss();\n            }\n            if (success.booleanValue()) {\n                Toast.makeText(ManageData.this, \"Export successful!\", 0).show();\n                ManageData.this.path.setText(\"Exported to: \" + ManageData.this.pathstr);\n                return;\n            }\n            Toast.makeText(ManageData.this, \"Export failed\", 0).show();\n            ManageData.this.path.setText(\"Export Failed\");\n        }\n        /* access modifiers changed from: package-private */\n        public void copyFile(File src, File dst) throws IOException {\n            FileChannel inChannel = new FileInputStream(src).getChannel();\n            FileChannel outChannel = new FileOutputStream(dst).getChannel();\n            try {\n                inChannel.transferTo(0, inChannel.size(), outChannel);\n            } finally {\n                if (inChannel != null) {\n                    inChannel.close();\n                }\n                if (outChannel != null) {\n                    outChannel.close();\n                }\n            }\n        }\n    }\n    private class ExportDataAsXmlTask extends AsyncTask&lt;String, Void, String> {\n        private final ProgressDialog dialog;\n        private ExportDataAsXmlTask() {\n            this.dialog = new ProgressDialog(ManageData.this);\n        }\n        /* access modifiers changed from: protected */\n        public void onPreExecute() {\n            this.dialog.setMessage(\"Exporting database as XML...\");\n            this.dialog.show();\n        }\n        /* access modifiers changed from: protected */\n        public String doInBackground(String... args) {\n            DataXmlExporter dm = new DataXmlExporter(ManageData.this.application.getDeviceDB().getDb());\n            try {\n                String dbName = args[0];\n                String exportFileName = args[1];\n                dm.export(dbName, exportFileName);\n                ManageData.this.pathstr = ManageData.this.a2dpDir + \"/\" + exportFileName + \".xml\";\n                return null;\n            } catch (IOException e) {\n                Log.e(MyApplication.APP_NAME, e.getMessage(), e);\n                return e.getMessage();\n            }\n        }\n        /* access modifiers changed from: protected */\n        public void onPostExecute(String errMsg) {\n            if (this.dialog.isShowing()) {\n                this.dialog.dismiss();\n            }\n            if (errMsg == null) {\n                Toast.makeText(ManageData.this, \"Export successful!\", 0).show();\n                ManageData.this.path.setText(\"Exported to: \" + ManageData.this.pathstr);\n                return;\n            }\n            Toast.makeText(ManageData.this, \"Export failed - \" + errMsg, 0).show();\n            ManageData.this.path.setText(\"Export Failed\");\n        }\n    }\n    private class SelectDataTask extends AsyncTask&lt;String, Void, String> {\n        private final ProgressDialog dialog;\n        private SelectDataTask() {\n            this.dialog = new ProgressDialog(ManageData.this);\n        }\n        /* access modifiers changed from: protected */\n        public void onPreExecute() {\n            this.dialog.setMessage(\"Selecting data...\");\n            this.dialog.show();\n        }\n        /* access modifiers changed from: protected */\n        public String doInBackground(String... args) {\n            List&lt;String> names = ManageData.this.application.getDeviceDB().selectAll();\n            StringBuilder sb = new StringBuilder();\n            Iterator&lt;String> it = names.iterator();\n            while (it.hasNext()) {\n                sb.append(it.next() + \"\\n\");\n            }\n            return sb.toString();\n        }\n        /* access modifiers changed from: protected */\n        public void onPostExecute(String result) {\n            if (this.dialog.isShowing()) {\n                this.dialog.dismiss();\n            }\n            ManageData.this.output.setText(result);\n        }\n    }\n    private class ImportDatabaseFileTask extends AsyncTask&lt;String, Void, Boolean> {\n        private final ProgressDialog dialog;\n        private ImportDatabaseFileTask() {\n            this.dialog = new ProgressDialog(ManageData.this);\n        }\n        /* access modifiers changed from: protected */\n        public void onPreExecute() {\n            this.dialog.setMessage(\"Importing database...\");\n            this.dialog.show();\n        }\n        /* access modifiers changed from: protected */\n        public Boolean doInBackground(String... args) {\n            File dbFile = new File(ManageData.this.application.getDeviceDB().getDb().getPath());\n            File exportDir = new File(ManageData.this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            File file = new File(exportDir, dbFile.getName());\n            ManageData.this.pathstr = file.getPath();\n            try {\n                file.createNewFile();\n                copyFile(file, dbFile);\n                return true;\n            } catch (IOException e) {\n                Log.e(MyApplication.APP_NAME, e.getMessage(), e);\n                return false;\n            }\n        }\n        /* access modifiers changed from: protected */\n        public void onPostExecute(Boolean success) {\n            if (this.dialog.isShowing()) {\n                this.dialog.dismiss();\n            }\n            if (success.booleanValue()) {\n                ManageData.this.path.setText(\"Imported from: \" + ManageData.this.pathstr);\n                Intent itent = new Intent();\n                itent.setAction(\"a2dp.vol.Main.RELOAD_LIST\");\n                itent.putExtra(\"device\", \"\");\n                ManageData.this.application.sendBroadcast(itent);\n                Toast.makeText(ManageData.this, (int) R.string.ImportCompletedText, 0).show();\n                return;\n            }\n            Toast.makeText(ManageData.this, \"Import failed\", 0).show();\n            ManageData.this.path.setText(\"Import Failed\");\n        }\n        /* access modifiers changed from: package-private */\n        public void copyFile(File src, File dst) throws IOException {\n            FileChannel inChannel = new FileInputStream(src).getChannel();\n            FileChannel outChannel = new FileOutputStream(dst).getChannel();\n            try {\n                inChannel.transferTo(0, inChannel.size(), outChannel);\n            } finally {\n                if (inChannel != null) {\n                    inChannel.close();\n                }\n                if (outChannel != null) {\n                    outChannel.close();\n                }\n            }\n        }\n    }\n    private class ExportLocationTask extends AsyncTask&lt;String, Void, Boolean> {\n        private final ProgressDialog dialog;\n        private ExportLocationTask() {\n            this.dialog = new ProgressDialog(ManageData.this);\n        }\n        /* access modifiers changed from: protected */\n        public void onPreExecute() {\n            this.dialog.setMessage(\"Exporting location data...\");\n            this.dialog.show();\n        }\n        /* access modifiers changed from: protected */\n        public Boolean doInBackground(String... args) {\n            File LocFile = ManageData.this.application.getFileStreamPath(args[0]);\n            File exportDir = new File(ManageData.this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            File file = new File(exportDir, LocFile.getName() + \".txt\");\n            ManageData.this.pathstr = file.getPath();\n            try {\n                file.createNewFile();\n                copyFile(LocFile, file);\n                return true;\n            } catch (IOException e) {\n                Log.e(MyApplication.APP_NAME, e.getMessage(), e);\n                return false;\n            }\n        }\n        /* access modifiers changed from: protected */\n        public void onPostExecute(Boolean success) {\n            if (this.dialog.isShowing()) {\n                this.dialog.dismiss();\n            }\n            if (success.booleanValue()) {\n                ManageData.this.path.setText(\"Exported to: \" + ManageData.this.pathstr);\n                Toast.makeText(ManageData.this, \"Location data exported\", 1).show();\n                return;\n            }\n            Toast.makeText(ManageData.this, \"Export failed\", 0).show();\n            ManageData.this.path.setText(\"Export Failed\");\n        }\n        /* access modifiers changed from: package-private */\n        public void copyFile(File src, File dst) throws IOException {\n            FileChannel inChannel = new FileInputStream(src).getChannel();\n            FileChannel outChannel = new FileOutputStream(dst).getChannel();\n            try {\n                inChannel.transferTo(0, inChannel.size(), outChannel);\n            } finally {\n                if (inChannel != null) {\n                    inChannel.close();\n                }\n                if (outChannel != null) {\n                    outChannel.close();\n                }\n            }\n        }\n    }\n}\n", 
    "source": "main", 
    "source_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.ManageData"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][369,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ScrollView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/scrollView1\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/tableLayout1\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,210][1080,261]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView2\" scrollable=\"false\" selected=\"false\" text=\"Enter a name for this device\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,261][1080,379]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editDesc2\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,379][1080,463]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkCaptLoc\" scrollable=\"false\" selected=\"false\" text=\"Capture location on disconnect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,463][1080,547]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkwifi\" scrollable=\"false\" selected=\"false\" text=\"Disconnect WIFI when bluetooth connects?\" />\n\t\t\t\t\t\t<node bounds=\"[0,547][1080,631]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/silentBox\" scrollable=\"false\" selected=\"false\" text=\"Silence notifications while connected?\" />\n\t\t\t\t\t\t<node bounds=\"[0,631][1080,715]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/enableTTSBox\" scrollable=\"false\" selected=\"false\" text=\"Enable Reading Text Messages?\" />\n\t\t\t\t\t\t<node bounds=\"[0,715][1080,799]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetVol\" scrollable=\"false\" selected=\"false\" text=\"Set media volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,799][1080,883]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"7\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetpv\" scrollable=\"false\" selected=\"false\" text=\"Set in-call phone volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,930][1080,1056]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"8\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseAppButton\" scrollable=\"false\" selected=\"false\" text=\"START APP ON CONNECT\" />\n\t\t\t\t\t\t<node bounds=\"[0,1056][1080,1140]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"9\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBoxLaunchCar\" scrollable=\"false\" selected=\"false\" text=\"Launch Car Mode\" />\n\t\t\t\t\t\t<node bounds=\"[0,1169][1080,1295]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"10\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseBTbutton\" scrollable=\"false\" selected=\"false\" text=\"ALSO CONNECT TO BLUETOOTH DEVICE\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,1295][1080,1413]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"11\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editBtConnect\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,1442][1080,1493]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"12\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView4\" scrollable=\"false\" selected=\"false\" text=\"Connected Icon\" />\n\t\t\t\t\t\t<node bounds=\"[0,1546][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RadioGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"13\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/radioGroupIcon\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[105,1546][378,1735]\" checkable=\"true\" checked=\"true\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio0\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[699,1735][975,1794]\" checkable=\"true\" checked=\"false\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.main", 
    "methodSourceLink": [], 
    "target": "EditDevice", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.EditDevice.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class EditDevice extends Activity {\n    private static final int ACTION_ADD_PACKAGE = 17;\n    private static final int ACTION_CHOOSE_APP = 2;\n    private static final int ACTION_CHOOSE_APP_CUSTOM = 16;\n    private static final int ACTION_CHOOSE_FROM_PROVIDER = 11;\n    private static final int ACTION_CREATE_HOME_SCREEN_SHORTCUT = 14;\n    private static final int ACTION_CUSTOM_INTENT = 6;\n    private static final int ALARM_STREAM = 2;\n    private static final String[] APP_TYPE_OPTIONS = {\"Choose App\", \"Create Shortcut\", \"Home Screen Shortcut\", \"Pandora Radio Station\", \"Custom Intent\", \"Clear App Selection\"};\n    private static final int DIALOG_BITLY = 6;\n    private static final int DIALOG_PICK_APP_TYPE = 3;\n    private static final int DIALOG_WARN_STOP_APP = 5;\n    private static final int FETCH_HOME_SCREEN_SHORTCUT = 15;\n    private static final int IN_CALL_STREAM = 1;\n    private static final int MUSIC_STREAM = 0;\n    private boolean TTsEnabled;\n    private String appaction;\n    private String appdata;\n    private boolean appkill;\n    private MyApplication application;\n    private boolean apprestart;\n    private String apptype;\n    public String btd;\n    private Button cb;\n    private Button connbt;\n    private btDevice device;\n    private boolean enablegps;\n    private EditText fapp;\n    private CheckBox fappkill;\n    private CheckBox fapprestart;\n    private CheckBox fautoVol;\n    private EditText fbt;\n    private CheckBox fcarmodeBox;\n    private EditText fdesc2;\n    private CheckBox fenableGPS;\n    private CheckBox fenableTTS;\n    private CheckBox fgloc;\n    private SeekBar fphonev;\n    private CheckBox frampVol;\n    private CheckBox fsetpv;\n    private CheckBox fsetvol;\n    private CheckBox fsilent;\n    private CheckBox fsleepBox;\n    private SeekBar fsmsdelaybar;\n    private TextView fsmsdelaybox;\n    private SeekBar fvol;\n    private SeekBar fvoldelaybar;\n    private TextView fvoldelaybox;\n    private CheckBox fwifi;\n    private RadioGroup icongroup;\n    private RadioButton iconradio0;\n    private RadioButton iconradio1;\n    private RadioButton iconradio2;\n    private RadioButton iconradio3;\n    private RadioButton iconradio4;\n    private LinearLayout l1;\n    private LinearLayout l2;\n    private DialogInterface.OnClickListener mAppTypeDialogOnClick = new DialogInterface.OnClickListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass11 */\n        public void onClick(DialogInterface dialog, int which) {\n            switch (which) {\n                case 0:\n                    EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 2);\n                    return;\n                case 1:\n                    Intent i = new Intent(\"android.intent.action.PICK_ACTIVITY\");\n                    i.putExtra(\"android.intent.extra.INTENT\", new Intent(\"android.intent.action.CREATE_SHORTCUT\"));\n                    i.putExtra(\"android.intent.extra.TITLE\", \"Create a Shortcut\");\n                    EditDevice.this.startActivityForResult(i, 14);\n                    return;\n                case 2:\n                    Intent i2 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i2.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_HOMESCREEN);\n                    EditDevice.this.startActivityForResult(i2, 11);\n                    return;\n                case 3:\n                    Intent i3 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i3.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_PANDORA);\n                    EditDevice.this.startActivityForResult(i3, 11);\n                    return;\n                case 4:\n                    Intent i4 = new Intent(EditDevice.this.getBaseContext(), CustomIntentMaker.class);\n                    i4.putExtra(\"alarm_custom_action\", EditDevice.this.appaction);\n                    i4.putExtra(\"alarm_custom_data\", EditDevice.this.appdata);\n                    i4.putExtra(\"alarm_custom_type\", EditDevice.this.apptype);\n                    i4.putExtra(\"alarm_package_name\", EditDevice.this.pname);\n                    EditDevice.this.startActivityForResult(i4, 6);\n                    return;\n                case 5:\n                    EditDevice.this.pname = \"\";\n                    EditDevice.this.appaction = \"\";\n                    EditDevice.this.appdata = \"\";\n                    EditDevice.this.apptype = \"\";\n                    EditDevice.this.vUpdateApp();\n                    return;\n                default:\n                    return;\n            }\n        }\n    };\n    private TextView mediadelay;\n    private DeviceDB myDB;\n    private String pname;\n    SharedPreferences preferences;\n    private Button sb;\n    SeekBar.OnSeekBarChangeListener smsdelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass9 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fsmsdelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    private Button startapp;\n    private RadioGroup streamgroup;\n    private RadioButton streamradio0;\n    private RadioButton streamradio1;\n    private RadioButton streamradio2;\n    private TextView ttsdelay;\n    private TextView tv2;\n    private TextView tvincallVol;\n    private TextView tvmediavol;\n    private TextView tvstream;\n    SeekBar.OnSeekBarChangeListener voldelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass10 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fvoldelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    public void onBackPressed() {\n        Save();\n        closedb();\n        finish();\n        super.onBackPressed();\n    }\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.edit_item);\n        this.application = (MyApplication) getApplication();\n        this.myDB = new DeviceDB(this.application);\n        AudioManager am = (AudioManager) getSystemService(\"audio\");\n        this.sb = (Button) findViewById(R.id.EditDevSavebutton);\n        this.cb = (Button) findViewById(R.id.EditDevCancelbutton);\n        this.startapp = (Button) findViewById(R.id.chooseAppButton);\n        this.connbt = (Button) findViewById(R.id.chooseBTbutton);\n        this.fdesc2 = (EditText) findViewById(R.id.editDesc2);\n        this.fgloc = (CheckBox) findViewById(R.id.checkCaptLoc);\n        this.fsetvol = (CheckBox) findViewById(R.id.checkSetVol);\n        this.fvol = (SeekBar) findViewById(R.id.seekBarVol);\n        this.fapp = (EditText) findViewById(R.id.editApp);\n        this.fapprestart = (CheckBox) findViewById(R.id.appRestartCheckbox);\n        this.fappkill = (CheckBox) findViewById(R.id.appKillCheckbox);\n        this.fbt = (EditText) findViewById(R.id.editBtConnect);\n        this.fwifi = (CheckBox) findViewById(R.id.checkwifi);\n        this.fenableTTS = (CheckBox) findViewById(R.id.enableTTSBox);\n        this.fsetpv = (CheckBox) findViewById(R.id.checkSetpv);\n        this.fsilent = (CheckBox) findViewById(R.id.silentBox);\n        this.fphonev = (SeekBar) findViewById(R.id.seekPhoneVol);\n        this.fsmsdelaybar = (SeekBar) findViewById(R.id.SMSdelayseekBar);\n        this.fsmsdelaybox = (TextView) findViewById(R.id.SMSdelaytextView);\n        this.fvoldelaybar = (SeekBar) findViewById(R.id.VolDelaySeekBar);\n        this.fvoldelaybox = (TextView) findViewById(R.id.VolDelayTextView);\n        this.tv2 = (TextView) findViewById(R.id.textView2);\n        this.frampVol = (CheckBox) findViewById(R.id.rampBox);\n        this.fautoVol = (CheckBox) findViewById(R.id.autoVolcheckBox);\n        this.icongroup = (RadioGroup) findViewById(R.id.radioGroupIcon);\n        this.iconradio0 = (RadioButton) findViewById(R.id.iconradio0);\n        this.iconradio1 = (RadioButton) findViewById(R.id.iconradio1);\n        this.iconradio2 = (RadioButton) findViewById(R.id.iconradio2);\n        this.iconradio3 = (RadioButton) findViewById(R.id.iconradio3);\n        this.iconradio4 = (RadioButton) findViewById(R.id.iconradio4);\n        this.streamgroup = (RadioGroup) findViewById(R.id.radioGroupStream);\n        this.streamradio0 = (RadioButton) findViewById(R.id.streamradio0);\n        this.streamradio1 = (RadioButton) findViewById(R.id.streamradio1);\n        this.streamradio2 = (RadioButton) findViewById(R.id.streamradio2);\n        this.l1 = (LinearLayout) findViewById(R.id.LinearLayout1);\n        this.l2 = (LinearLayout) findViewById(R.id.LinearLayout2);\n        this.ttsdelay = (TextView) findViewById(R.id.textViewTTSDelay);\n        this.mediadelay = (TextView) findViewById(R.id.textViewMediaDelay);\n        this.tvstream = (TextView) findViewById(R.id.textViewStream);\n        this.tvmediavol = (TextView) findViewById(R.id.textViewMediaVolume);\n        this.tvincallVol = (TextView) findViewById(R.id.textViewInCallVol);\n        this.fsleepBox = (CheckBox) findViewById(R.id.checkBoxSleep);\n        this.fcarmodeBox = (CheckBox) findViewById(R.id.checkBoxLaunchCar);\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        this.TTsEnabled = this.preferences.getBoolean(\"enableTTS\", false);\n        this.btd = getIntent().getStringExtra(\"btd\");\n        this.device = this.myDB.getBTD(this.btd);\n        this.fdesc2.setText(this.device.desc2);\n        this.fgloc.setChecked(this.device.isGetLoc());\n        this.fsetvol.setChecked(this.device.isSetV());\n        this.fvol.setMax(am.getStreamMaxVolume(3));\n        this.fvol.setProgress(this.device.defVol);\n        this.fapp.setText(this.device.getPname());\n        this.fbt.setText(this.device.getBdevice());\n        this.fwifi.setChecked(this.device.isWifi());\n        if (this.device == null) {\n            this.connbt.setEnabled(false);\n        }\n        this.pname = this.device.getPname();\n        this.appaction = this.device.getAppaction();\n        this.appdata = this.device.getAppdata();\n        this.apptype = this.device.getApptype();\n        this.apprestart = this.device.isApprestart();\n        this.appkill = this.device.isAppkill();\n        this.fapprestart.setChecked(this.apprestart);\n        this.fappkill.setChecked(this.appkill);\n        this.fenableTTS.setChecked(this.device.isEnableTTS());\n        this.fsetpv.setChecked(this.device.isSetpv());\n        this.fphonev.setMax(am.getStreamMaxVolume(0));\n        this.fphonev.setProgress(this.device.getPhonev());\n        this.fsmsdelaybar.setMax(20);\n        this.fsmsdelaybar.setOnSeekBarChangeListener(this.smsdelaySeekBarProgress);\n        this.fsmsdelaybox.setText(this.device.smsdelay + \"s\");\n        this.fsmsdelaybar.setProgress(this.device.getSmsdelay());\n        this.fvoldelaybar.setMax(20);\n        this.fvoldelaybar.setOnSeekBarChangeListener(this.voldelaySeekBarProgress);\n        this.fvoldelaybox.setText(this.device.voldelay + \"s\");\n        this.fvoldelaybar.setProgress(this.device.getVoldelay());\n        this.frampVol.setChecked(this.device.isVolramp());\n        this.fautoVol.setChecked(this.device.isAutovol());\n        this.fsilent.setChecked(this.device.isSilent());\n        this.fsleepBox.setChecked(this.device.isSleep());\n        this.fcarmodeBox.setChecked(this.device.isCarmode());\n        switch (this.device.getIcon()) {\n            case R.drawable.car2:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.headset:\n                this.iconradio1.setChecked(true);\n                break;\n            case R.drawable.ic_launcher:\n            default:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.icon5:\n                this.iconradio4.setChecked(true);\n                break;\n            case R.drawable.jack:\n                this.iconradio2.setChecked(true);\n                break;\n            case R.drawable.usb:\n                this.iconradio3.setChecked(true);\n                break;\n        }\n        switch (this.device.getSmsstream()) {\n            case 0:\n                this.streamradio0.setChecked(true);\n                break;\n            case 1:\n                this.streamradio1.setChecked(true);\n                break;\n            case 2:\n                this.streamradio2.setChecked(true);\n                break;\n            default:\n                this.streamradio0.setChecked(true);\n                break;\n        }\n        setTTSVisibility();\n        this.fenableTTS.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass1 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setTTSVisibility();\n            }\n        });\n        setMediaVisibility();\n        this.fsetvol.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass2 */\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                EditDevice.this.setMediaVisibility();\n            }\n        });\n        setInCallVisibility();\n        this.fsetpv.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass3 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setInCallVisibility();\n            }\n        });\n        setAppVisibility();\n        this.tv2.requestFocus();\n        vUpdateApp();\n        this.sb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass4 */\n            public void onClick(View v) {\n                EditDevice.this.Save();\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.cb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass5 */\n            public void onClick(View arg0) {\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.startapp.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass6 */\n            public boolean onLongClick(View arg0) {\n                PackageManager pm = EditDevice.this.getPackageManager();\n                List&lt;ApplicationInfo> packages = pm.getInstalledApplications(0);\n                String[] lstring = new String[packages.size()];\n                int i = 0;\n                for (int n = 0; n &lt; packages.size(); n++) {\n                    Intent itent = pm.getLaunchIntentForPackage(packages.get(n).packageName);\n                    if (packages.get(n).icon &gt; 0 && packages.get(n).enabled && itent != null) {\n                        lstring[i] = packages.get(n).packageName;\n                        i++;\n                    }\n                }\n                final String[] ls2 = new String[i];\n                for (int j = 0; j &lt; i; j++) {\n                    ls2[j] = lstring[j];\n                }\n                Arrays.sort(ls2);\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Pick a package\");\n                builder.setItems(ls2, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass6.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        EditDevice.this.fapp.setText(ls2[item]);\n                    }\n                });\n                builder.create().show();\n                return false;\n            }\n        });\n        this.startapp.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass7 */\n            public void onClick(View arg0) {\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(EditDevice.this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(EditDevice.APP_TYPE_OPTIONS, EditDevice.this.mAppTypeDialogOnClick);\n                adb2.create();\n                adb2.show();\n            }\n        });\n        this.connbt.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass8 */\n            public void onClick(View v) {\n                if (!EditDevice.this.myDB.getDb().isOpen() && !EditDevice.this.myDB.getDb().isDbLockedByCurrentThread()) {\n                    EditDevice.this.myDB = new DeviceDB(EditDevice.this.application);\n                }\n                final Vector&lt;btDevice> vec = EditDevice.this.myDB.selectAlldb();\n                int j = vec.size();\n                int i = 0;\n                while (i &lt; j) {\n                    if (vec.get(i).mac.length() &lt; 17) {\n                        vec.remove(i);\n                        j--;\n                        i--;\n                    }\n                    i++;\n                }\n                vec.trimToSize();\n                String[] lstring = new String[(vec.size() + 1)];\n                for (int i2 = 0; i2 &lt; vec.size(); i2++) {\n                    lstring[i2] = vec.get(i2).desc2;\n                }\n                lstring[vec.size()] = \"none\";\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Bluetooth Device\");\n                builder.setItems(lstring, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass8.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        if (item &lt; vec.size()) {\n                            EditDevice.this.fbt.setText(((btDevice) vec.get(item)).mac);\n                        } else {\n                            EditDevice.this.fbt.setText(\"\");\n                        }\n                    }\n                });\n                builder.create().show();\n            }\n        });\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setMediaVisibility() {\n        if (this.fsetvol.isChecked()) {\n            this.tvmediavol.setVisibility(0);\n            this.fvol.setVisibility(0);\n            this.fautoVol.setVisibility(0);\n            this.frampVol.setVisibility(0);\n            this.l2.setVisibility(0);\n            this.mediadelay.setVisibility(0);\n            return;\n        }\n        this.tvmediavol.setVisibility(8);\n        this.fvol.setVisibility(8);\n        this.fautoVol.setVisibility(8);\n        this.frampVol.setVisibility(8);\n        this.l2.setVisibility(8);\n        this.mediadelay.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setTTSVisibility() {\n        if (this.fenableTTS.isChecked()) {\n            this.l1.setVisibility(0);\n            this.ttsdelay.setVisibility(0);\n            this.tvstream.setVisibility(0);\n            this.streamgroup.setVisibility(0);\n            return;\n        }\n        this.l1.setVisibility(8);\n        this.ttsdelay.setVisibility(8);\n        this.tvstream.setVisibility(8);\n        this.streamgroup.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setInCallVisibility() {\n        if (this.fsetpv.isChecked()) {\n            this.tvincallVol.setVisibility(0);\n            this.fphonev.setVisibility(0);\n            return;\n        }\n        this.tvincallVol.setVisibility(8);\n        this.fphonev.setVisibility(8);\n    }\n    private void setAppVisibility() {\n        if (this.fapp.getText().length() &gt; 0) {\n            this.fapp.setVisibility(0);\n            this.fapprestart.setVisibility(0);\n            this.fappkill.setVisibility(0);\n            this.fsleepBox.setVisibility(8);\n            return;\n        }\n        this.fapp.setVisibility(8);\n        this.fapprestart.setVisibility(8);\n        this.fappkill.setVisibility(8);\n        this.fsleepBox.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void Save() {\n        if (this.fdesc2.length() &lt; 1) {\n            this.device.setDesc2(this.device.desc1);\n        } else {\n            this.device.setDesc2(this.fdesc2.getText().toString());\n        }\n        this.device.setSetV(this.fsetvol.isChecked());\n        this.device.setDefVol(this.fvol.getProgress());\n        this.device.setGetLoc(this.fgloc.isChecked());\n        this.device.setPname(this.pname);\n        this.device.setBdevice(this.fbt.getText().toString());\n        this.device.setWifi(this.fwifi.isChecked());\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.apprestart = this.fapprestart.isChecked();\n        this.device.setApprestart(this.apprestart);\n        this.appkill = this.fappkill.isChecked();\n        this.device.setAppkill(this.appkill);\n        this.enablegps = this.fenableTTS.isChecked();\n        this.device.setEnableTTS(this.enablegps);\n        this.device.setSetpv(this.fsetpv.isChecked());\n        this.device.setPhonev(this.fphonev.getProgress());\n        this.device.setSmsdelay(this.fsmsdelaybar.getProgress());\n        this.device.setVoldelay(this.fvoldelaybar.getProgress());\n        this.device.setVolramp(this.frampVol.isChecked());\n        this.device.setAutovol(this.fautoVol.isChecked());\n        this.device.setSilent(this.fsilent.isChecked());\n        this.device.setSleep(this.fsleepBox.isChecked());\n        this.device.setCarmode(this.fcarmodeBox.isChecked());\n        switch (this.icongroup.getCheckedRadioButtonId()) {\n            case R.id.iconradio0:\n                this.device.setIcon(R.drawable.car2);\n                break;\n            case R.id.iconradio1:\n                this.device.setIcon(R.drawable.headset);\n                break;\n            case R.id.iconradio2:\n                this.device.setIcon(R.drawable.jack);\n                break;\n            case R.id.iconradio3:\n                this.device.setIcon(R.drawable.usb);\n                break;\n            case R.id.iconradio4:\n                this.device.setIcon(R.drawable.icon5);\n                break;\n        }\n        switch (this.streamgroup.getCheckedRadioButtonId()) {\n            case R.id.streamradio0:\n                this.device.setSmsstream(0);\n                break;\n            case R.id.streamradio1:\n                this.device.setSmsstream(1);\n                break;\n            case R.id.streamradio2:\n                this.device.setSmsstream(2);\n                break;\n        }\n        if (!this.TTsEnabled && this.fenableTTS.isChecked()) {\n            SharedPreferences.Editor editor = this.preferences.edit();\n            editor.putBoolean(\"enableTTS\", true);\n            editor.commit();\n        }\n        this.sb.setText(\"Saving\");\n        try {\n            this.myDB.update(this.device);\n            Intent itent = new Intent();\n            itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n            itent.putExtra(\"device\", \"\");\n            this.application.sendBroadcast(itent);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void closedb() {\n        this.myDB.getDb().close();\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 2:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    this.appaction = \"\";\n                    this.apptype = \"\";\n                    this.appdata = \"\";\n                    vUpdateApp();\n                    break;\n                case 6:\n                    this.pname = \"\";\n                    this.appaction = data.getStringExtra(\"alarm_custom_action\");\n                    this.appdata = data.getStringExtra(\"alarm_custom_data\");\n                    this.apptype = data.getStringExtra(\"alarm_custom_type\");\n                    if (this.appdata.length() &gt; 3) {\n                        try {\n                            this.pname = Intent.getIntent(this.pname).getComponent().getPackageName();\n                        } catch (URISyntaxException e) {\n                            this.pname = \"custom\";\n                            e.printStackTrace();\n                        }\n                    }\n                    if (this.pname.equals(\"\")) {\n                        this.pname = \"custom\";\n                    }\n                    vUpdateApp();\n                    break;\n                case 11:\n                    processShortcut(data);\n                    break;\n                case 14:\n                    startActivityForResult(data, 15);\n                    break;\n                case 15:\n                    processShortcut(data);\n                    if (this.pname.length() &lt; 3 || this.pname.equalsIgnoreCase(\"Custom\")) {\n                        showDialog(5);\n                        break;\n                    }\n                case 16:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n                case 17:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void vUpdateApp() {\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.device.setPname(this.pname);\n        if (!this.device.hasIntent()) {\n            this.fapp.setText(\"\");\n        } else if (this.pname != null && this.pname.length() &gt; 3) {\n            this.fapp.setText(this.pname);\n        } else if (this.appdata != null) {\n            this.fapp.setText(this.appdata);\n        } else if (this.appaction != null) {\n            this.fapp.setText(this.appaction);\n        } else {\n            this.fapp.setText(\"Custom\");\n        }\n        setAppVisibility();\n    }\n    private void processShortcut(Intent data) {\n        Intent i = (Intent) data.getParcelableExtra(\"android.intent.extra.shortcut.INTENT\");\n        this.appdata = getIntentUri(i);\n        if (data.hasExtra(ProviderList.EXTRA_PACKAGE_NAME)) {\n            this.pname = data.getStringExtra(ProviderList.EXTRA_PACKAGE_NAME);\n        } else {\n            try {\n                this.pname = i.getComponent().getPackageName();\n            } catch (Exception e) {\n                this.pname = \"\";\n                e.printStackTrace();\n            }\n        }\n        if (this.pname.length() &lt; 3) {\n            this.pname = \"custom\";\n        }\n        this.appaction = data.getStringExtra(\"android.intent.extra.shortcut.NAME\");\n        this.apptype = \"\";\n        vUpdateApp();\n    }\n    public static String getIntentUri(Intent i) {\n        try {\n            return (String) Intent.class.getMethod(\"toUri\", Integer.TYPE).invoke(i, Integer.valueOf(Intent.class.getField(\"URI_INTENT_SCHEME\").getInt(null)));\n        } catch (Exception e) {\n            return i.toURI();\n        }\n    }\n    /* access modifiers changed from: protected */\n    public Dialog onCreateDialog(int id) {\n        switch (id) {\n            case 3:\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(APP_TYPE_OPTIONS, this.mAppTypeDialogOnClick);\n                return adb2.create();\n            case 4:\n            default:\n                return super.onCreateDialog(id);\n            case 5:\n                AlertDialog.Builder adb4 = new AlertDialog.Builder(this);\n                adb4.setTitle(R.string.ae_stop_app_warning_title);\n                adb4.setMessage(R.string.ae_stop_app_warning_message);\n                adb4.setCancelable(false);\n                adb4.setPositiveButton(\"Select App\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass12 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 17);\n                    }\n                });\n                adb4.setNegativeButton(\"Ignore\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass13 */\n                    public void onClick(DialogInterface dialog, int which) {\n                    }\n                });\n                return adb4.create();\n            case 6:\n                ProgressDialog pd = new ProgressDialog(this);\n                pd.setIndeterminate(true);\n                pd.setMessage(\"Shortenting Url with Bit.ly...\");\n                pd.setCancelable(false);\n                return pd;\n        }\n    }\n}\n", 
    "source": "main", 
    "source_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.EditDevice"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,63][147,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"Navigate up\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t<node bounds=\"[189,101][728,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Respond to these apps\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RelativeLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,252][1038,1752]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/PackagelistView1\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[42,252][1038,399]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,273][160,378]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,260][954,391]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,260][1038,344]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,402][1038,549]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,423][160,528]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,410][954,541]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Easter Egg\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,410][1038,494]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,552][1038,699]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,573][160,678]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,560][954,691]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Keyboard (AOSP)\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,560][1038,644]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,702][1038,849]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,723][160,828]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,710][954,841]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Services Library\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,710][1038,794]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,852][1038,999]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,873][160,978]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,860][954,991]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Shared Library\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,860][1038,944]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,1002][1038,1149]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,1023][160,1128]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,1010][954,1141]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android System\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,1010][1038,1094]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,1152][1038,1299]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,1173][160,1278]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,1160][954,1291]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android System WebView\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,1160][1038,1244]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,1302][1038,1449]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"7\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,1323][160,1428]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,1310][954,1441]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"API Demos\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,1310][1038,1394]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,1452][1038,1599]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"8\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,1473][160,1578]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,1460][954,1591]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Basic Daydreams\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,1460][1038,1544]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[42,1602][1038,1749]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"9\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[55,1623][160,1728]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[173,1610][954,1741]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Blocked Numbers Storage\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[954,1610][1038,1694]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBox1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.main", 
    "methodSourceLink": [], 
    "target": "PackagesChooser", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.PackagesChooser.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class PackagesChooser extends Activity {\n    private MyApplication application;\n    private List&lt;AppInfoCache> mAppList;\n    private Runnable mFinishLoadAndSortTask = new Runnable() {\n        /* class a2dp.Vol.PackagesChooser.AnonymousClass2 */\n        public void run() {\n            PackagesChooser.this.initAssignListenersAndAdapter();\n            PackagesChooser.this.pb.setVisibility(8);\n        }\n    };\n    private List&lt;AppInfoCache> mFullAppList;\n    private final Handler mHandler = new Handler();\n    private PackageListAdapter mListAdapter;\n    private ListView mListView;\n    private Runnable mLoadAppLoadAndSortAppList = new Runnable() {\n        /* class a2dp.Vol.PackagesChooser.AnonymousClass1 */\n        public void run() {\n            PackagesChooser.this.mAppList = new ArrayList();\n            for (ApplicationInfo appInfo : PackagesChooser.this.pm.getInstalledApplications(0)) {\n                PackagesChooser.this.mAppList.add(new AppInfoCache(appInfo.loadLabel(PackagesChooser.this.pm).toString(), appInfo.packageName, appInfo.className));\n            }\n            Collections.sort(PackagesChooser.this.mAppList, new AlphaComparator());\n            PackagesChooser.this.mFullAppList = new ArrayList();\n            int i = 0;\n            for (AppInfoCache appInfo2 : PackagesChooser.this.mAppList) {\n                appInfo2.setPosition(i);\n                appInfo2.setChecked(Arrays.asList(PackagesChooser.this.packages).contains(appInfo2.getPackageName()));\n                PackagesChooser.this.mFullAppList.add(appInfo2);\n                i++;\n            }\n            PackagesChooser.this.mListAdapter = new PackageListAdapter(PackagesChooser.this.getBaseContext());\n            PackagesChooser.this.mHandler.post(PackagesChooser.this.mFinishLoadAndSortTask);\n        }\n    };\n    String packagelist;\n    private String[] packages;\n    private ProgressBar pb;\n    private PackageManager pm;\n    SharedPreferences preferences;\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.activity_packages_chooser);\n        setupActionBar();\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        this.packagelist = this.preferences.getString(\"packages\", \"com.google.android.talk,com.android.email,com.android.calendar\");\n        this.packages = this.packagelist.split(\",\");\n        this.pm = getPackageManager();\n        this.pb = (ProgressBar) findViewById(R.id.progressBar1);\n        this.pb.setIndeterminate(true);\n    }\n    private void setupActionBar() {\n        getActionBar().setDisplayHomeAsUpEnabled(true);\n    }\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.packages_chooser, menu);\n        this.mListView = (ListView) findViewById(R.id.PackagelistView1);\n        new Thread(this.mLoadAppLoadAndSortAppList).start();\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case 16908332:\n                cleanup();\n                NavUtils.navigateUpFromSameTask(this);\n                return true;\n            default:\n                return super.onOptionsItemSelected(item);\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void initAssignListenersAndAdapter() {\n        this.mListView.setAdapter((ListAdapter) this.mListAdapter);\n    }\n    public class PackageListAdapter extends ArrayAdapter&lt;AppInfoCache> {\n        Context c;\n        public PackageListAdapter(Context context) {\n            super(context, (int) R.layout.activity_packages_chooser, PackagesChooser.this.mAppList);\n            this.c = context;\n        }\n        public View getView(int position, View convertView, ViewGroup parent) {\n            View v = LayoutInflater.from(this.c).inflate(R.layout.package_list_item, parent, false);\n            final AppInfoCache ai = (AppInfoCache) getItem(position);\n            ((ImageView) v.findViewById(R.id.pi_iv_icon)).setImageDrawable(ai.getIcon());\n            ((TextView) v.findViewById(R.id.pi_tv_name)).setText(ai.getAppName());\n            final CheckBox box = (CheckBox) v.findViewById(R.id.checkBox1);\n            box.setChecked(ai.isChecked());\n            box.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n                /* class a2dp.Vol.PackagesChooser.PackageListAdapter.AnonymousClass1 */\n                public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                    ai.setChecked(box.isChecked());\n                }\n            });\n            return v;\n        }\n    }\n    /* access modifiers changed from: package-private */\n    public class AppInfoCache {\n        private String app_name;\n        private boolean checked;\n        private String class_name;\n        private String package_name;\n        private int position = -1;\n        public AppInfoCache(String aName, String pName, String cName) {\n            this.app_name = aName;\n            this.package_name = pName;\n            this.class_name = cName;\n            setChecked(false);\n        }\n        public Drawable getIcon() {\n            try {\n                return PackagesChooser.this.pm.getApplicationIcon(this.package_name);\n            } catch (PackageManager.NameNotFoundException e) {\n                return null;\n            }\n        }\n        public int getPosition() {\n            return this.position;\n        }\n        public void setPosition(int pos) {\n            this.position = pos;\n        }\n        public String getAppName() {\n            return this.app_name;\n        }\n        public String getPackageName() {\n            return this.package_name;\n        }\n        public String getClassName() {\n            return this.class_name;\n        }\n        public String toString() {\n            return this.app_name;\n        }\n        public boolean isChecked() {\n            return this.checked;\n        }\n        public void setChecked(boolean checked2) {\n            this.checked = checked2;\n        }\n    }\n    class AlphaComparator implements Comparator&lt;AppInfoCache> {\n        private final Collator sCollator = Collator.getInstance();\n        AlphaComparator() {\n        }\n        public final int compare(AppInfoCache a, AppInfoCache b) {\n            return this.sCollator.compare(a.getAppName(), b.getAppName());\n        }\n    }\n    private void cleanup() {\n        this.packagelist = \"\";\n        int i = 0;\n        if (this.mFullAppList == null) {\n            this.packagelist = \"\";\n        } else if (!this.mFullAppList.isEmpty()) {\n            for (AppInfoCache info : this.mFullAppList) {\n                if (info.isChecked()) {\n                    if (i &gt; 0) {\n                        this.packagelist += \",\";\n                    }\n                    this.packagelist += info.getPackageName();\n                }\n                i++;\n            }\n        } else {\n            this.packagelist = \"\";\n        }\n        SharedPreferences.Editor editor = this.preferences.edit();\n        editor.putString(\"packages\", this.packagelist);\n        editor.commit();\n        Intent intent = new Intent();\n        intent.setAction(\"a2dp.vol.Reload\");\n        this.application.sendBroadcast(intent);\n    }\n    public void onBackPressed() {\n        cleanup();\n        super.onBackPressed();\n    }\n}\n", 
    "source": "main", 
    "source_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.PackagesChooser"
},
{
    "target_layoutcode": "<root />", 
    "source_fullname": "a2dp.Vol.main", 
    "methodSourceLink": [], 
    "target": "NotificationCatcher", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.NotificationCatcher.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][739,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume Version: 2.12.7\" />\n\t\t\t\t\t<node bounds=\"[975,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[975,73][1080,199]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageButton\" clickable=\"true\" content-desc=\"More options\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[26,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableRow\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/TableRow02\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[26,236][422,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Locationbtn\" scrollable=\"false\" selected=\"false\" text=\"STORED LOCATION\" />\n\t\t\t\t\t\t<node bounds=\"[422,236][732,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/Button01\" scrollable=\"false\" selected=\"false\" text=\"FIND DEVICES\" />\n\t\t\t\t\t\t<node bounds=\"[732,236][1054,362]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ServButton\" scrollable=\"false\" selected=\"false\" text=\"STOP SERVICE\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"Bluetooth Devices\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"2\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ListView01\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,388][1080,514]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/text1\" scrollable=\"false\" selected=\"false\" text=\"Car Dock\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class NotificationCatcher extends NotificationListenerService {\n    private static String[] packages;\n    private MyApplication application;\n    List&lt;String> apps1 = new ArrayList();\n    private final BroadcastReceiver clear = new BroadcastReceiver() {\n        /* class a2dp.Vol.NotificationCatcher.AnonymousClass2 */\n        public void onReceive(Context arg0, Intent arg1) {\n            NotificationCatcher.this.notList.clear();\n        }\n    };\n    List&lt;notItem> notList = new ArrayList();\n    private String packagelist;\n    SharedPreferences preferences;\n    private final BroadcastReceiver reloadprefs = new BroadcastReceiver() {\n        /* class a2dp.Vol.NotificationCatcher.AnonymousClass1 */\n        public void onReceive(Context arg0, Intent arg1) {\n            NotificationCatcher.this.LoadPrefs();\n        }\n    };\n    public void onCreate() {\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        registerReceiver(this.reloadprefs, new IntentFilter(\"a2dp.vol.Reload\"));\n        registerReceiver(this.clear, new IntentFilter(\"a2dp.Vol.Clear\"));\n        LoadPrefs();\n        super.onCreate();\n    }\n    public void onDestroy() {\n        unregisterReceiver(this.reloadprefs);\n        unregisterReceiver(this.clear);\n        super.onDestroy();\n    }\n    public void onNotificationPosted(StatusBarNotification sbn, NotificationListenerService.RankingMap rankingMap) {\n        super.onNotificationPosted(sbn, rankingMap);\n    }\n    public void onNotificationPosted(StatusBarNotification sbn) {\n        super.onNotificationPosted(sbn);\n        new Readit().execute(sbn);\n    }\n    private class Readit extends AsyncTask&lt;StatusBarNotification, Integer, Long> {\n        private Readit() {\n        }\n        /* access modifiers changed from: protected */\n        public Long doInBackground(StatusBarNotification... params) {\n            ApplicationInfo appInfo;\n            CharSequence charSequence;\n            CharSequence[] lines;\n            int connected = 0;\n            try {\n                connected = service.connects.intValue();\n                if (connected &lt; 1) {\n                    return null;\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n            StatusBarNotification sbn = params[0];\n            boolean test = false;\n            String[] strArr = NotificationCatcher.packages;\n            int length = strArr.length;\n            for (int i = 0; i &lt; length; i++) {\n                if (strArr[i].equalsIgnoreCase(sbn.getPackageName())) {\n                    test = true;\n                }\n            }\n            if (test) {\n                PackageManager pm = NotificationCatcher.this.getPackageManager();\n                String pack = sbn.getPackageName();\n                try {\n                    appInfo = pm.getApplicationInfo(pack, 0);\n                } catch (PackageManager.NameNotFoundException e2) {\n                    appInfo = null;\n                }\n                if (appInfo != null) {\n                    charSequence = pm.getApplicationLabel(appInfo);\n                } else {\n                    charSequence = pack;\n                }\n                String appName = (String) charSequence;\n                Notification notification = sbn.getNotification();\n                if (notification == null) {\n                    return null;\n                }\n                Long when = Long.valueOf(notification.when);\n                notItem item = new notItem(pack, when);\n                Boolean found = false;\n                for (notItem element : NotificationCatcher.this.notList) {\n                    if (element.getNot().equals(pack)) {\n                        if (element.getNottime().longValue() + 1000 &gt;= when.longValue()) {\n                            return null;\n                        }\n                        NotificationCatcher.this.notList.set(NotificationCatcher.this.notList.indexOf(element), item);\n                        found = true;\n                    }\n                }\n                if (!found.booleanValue()) {\n                    NotificationCatcher.this.notList.add(item);\n                }\n                String str = \"\" + appName + \", \";\n                String ticker = \"\";\n                if (notification.tickerText != null) {\n                    ticker = sbn.getNotification().tickerText.toString();\n                }\n                String temp = \"\";\n                if (!NotificationCatcher.this.apps1.contains(pack)) {\n                    Bundle bun = notification.extras;\n                    if (!bun.isEmpty() && (lines = bun.getCharSequenceArray(NotificationCompat.EXTRA_TEXT_LINES)) != null && lines.length &gt; 0) {\n                        int length2 = lines.length;\n                        for (int i2 = 0; i2 &lt; length2; i2++) {\n                            CharSequence line = lines[i2];\n                            if (line != null && line.length() &gt; 1) {\n                                temp = line.toString();\n                            }\n                        }\n                    }\n                    String text = \"\";\n                    if (bun.getString(NotificationCompat.EXTRA_TEXT) != null && !bun.getString(NotificationCompat.EXTRA_TEXT).isEmpty()) {\n                        text = bun.getString(NotificationCompat.EXTRA_TEXT).toString();\n                    }\n                    if (ticker.length() &gt; 1) {\n                        str = (ticker.equalsIgnoreCase(temp) || temp.length() &lt; 1) ? str + ticker : str + ticker + \", \" + temp;\n                    } else if (!text.isEmpty()) {\n                        str = (text.equalsIgnoreCase(temp) || temp.isEmpty()) ? str + text : str + text + \", \" + temp;\n                    }\n                    if (temp.isEmpty() && ticker.isEmpty() && text.isEmpty()) {\n                        return null;\n                    }\n                } else if (ticker == null) {\n                    return null;\n                } else {\n                    str = str + ticker;\n                }\n                if (connected &gt; 0 && str.length() &gt; 0) {\n                    Intent intent = new Intent();\n                    intent.setAction(\"a2dp.vol.service.MESSAGE\");\n                    intent.putExtra(\"message\", str);\n                    NotificationCatcher.this.application.sendBroadcast(intent);\n                }\n            }\n            return null;\n        }\n    }\n    public void onNotificationRemoved(StatusBarNotification sbn) {\n        super.onNotificationRemoved(sbn);\n    }\n    public void LoadPrefs() {\n        this.packagelist = this.preferences.getString(\"packages\", \"com.google.android.talk,com.android.email,com.android.calendar\");\n        this.apps1.add(\"com.google.android.talk\");\n        this.apps1.add(\"com.skype.raider\");\n    }\n    /* access modifiers changed from: private */\n    public class notItem {\n        String not;\n        Long nottime;\n        public notItem(String not2, Long nottime2) {\n            this.not = not2;\n            this.nottime = nottime2;\n        }\n        public Long getNottime() {\n            return this.nottime;\n        }\n        public void setNottime(Long nottime2) {\n            this.nottime = nottime2;\n        }\n        public String getNot() {\n            return this.not;\n        }\n        public void setNot(String not2) {\n            this.not = not2;\n        }\n    }\n}\n", 
    "source": "main", 
    "source_actcode": "public class main extends Activity {\n    static final int CHECK_TTS = 3;\n    static final int EDITED_DATA = 4;\n    static final int ENABLE_BLUETOOTH = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    static final int RELOAD = 2;\n    static AudioManager am = null;\n    private static int resourceID = 17367043;\n    static Button serv;\n    boolean TTSignore = false;\n    private String a2dpDir = \"\";\n    String activebt = null;\n    private MyApplication application;\n    boolean carMode = false;\n    int connects;\n    boolean enableTTS = false;\n    boolean headsetPlug = false;\n    boolean homeDock = false;\n    ArrayAdapter&lt;String> ladapt;\n    String[] lstring = null;\n    ListView lvl = null;\n    private final BroadcastReceiver mReceiver5 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass11 */\n        public void onReceive(Context context2, Intent intent2) {\n            main.this.getConnects();\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    private final BroadcastReceiver mReceiver6 = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass12 */\n        public void onReceive(Context context2, Intent intent2) {\n            boolean carModeOld = main.this.carMode;\n            boolean homeDockOld = main.this.homeDock;\n            boolean headsetPlugOld = main.this.headsetPlug;\n            boolean powerOld = main.this.power;\n            try {\n                main.this.carMode = main.this.preferences.getBoolean(\"car_mode\", false);\n                main.this.homeDock = main.this.preferences.getBoolean(\"home_dock\", false);\n                main.this.headsetPlug = main.this.preferences.getBoolean(\"headset\", false);\n                main.this.power = main.this.preferences.getBoolean(\"power\", false);\n                main.this.enableTTS = main.this.preferences.getBoolean(\"enableTTS\", false);\n                if (main.this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                    main.this.a2dpDir = main.this.getFilesDir().toString();\n                } else {\n                    main.this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n                }\n                File exportDir = new File(main.this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n            } catch (Exception e2) {\n                e2.printStackTrace();\n                Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n            }\n            if ((!carModeOld && main.this.carMode) || ((!homeDockOld && main.this.homeDock) || ((!headsetPlugOld && main.this.headsetPlug) || (!powerOld && main.this.power)))) {\n                main.this.getBtDevices(0);\n            }\n            if (main.this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    main.this.startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Boolean listenerEnabled = false;\n                for (String item : NotificationManagerCompat.getEnabledListenerPackages(main.this.getBaseContext())) {\n                    if (item.equalsIgnoreCase(BuildConfig.APPLICATION_ID)) {\n                        listenerEnabled = true;\n                    }\n                }\n                if (main.this.preferences.getBoolean(\"enableGTalk\", false) && !listenerEnabled.booleanValue()) {\n                    main.this.startActivity(new Intent(\"android.settings.ACTION_NOTIFICATION_LISTENER_SETTINGS\"));\n                }\n            }\n        }\n    };\n    private DeviceDB myDB;\n    boolean power = false;\n    SharedPreferences preferences;\n    Resources res;\n    private final BroadcastReceiver sRunning = new BroadcastReceiver() {\n        /* class a2dp.Vol.main.AnonymousClass13 */\n        public void onReceive(Context arg0, Intent arg1) {\n            try {\n                if (service.run) {\n                    main.this.servrun = true;\n                    main.serv.setText(R.string.StopService);\n                    main.this.getConnects();\n                } else {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    main.this.connects = 0;\n                }\n            } catch (Exception x) {\n                x.printStackTrace();\n                main.this.servrun = false;\n                main.serv.setText(R.string.StartService);\n                main.this.connects = 0;\n                Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n            }\n            main.this.refreshList(main.this.loadFromDB());\n        }\n    };\n    boolean servrun = false;\n    boolean toasts = true;\n    Vector&lt;btDevice> vec = new Vector&lt;>();\n    public boolean onCreateOptionsMenu(Menu menu) {\n        getMenuInflater().inflate(R.menu.menu, menu);\n        return true;\n    }\n    public boolean onOptionsItemSelected(MenuItem item) {\n        switch (item.getItemId()) {\n            case R.id.prefs:\n                startActivity(new Intent(this, Preferences.class));\n                return true;\n            case R.id.DelData:\n                AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                builder.setMessage(R.string.DeleteDataMsg).setCancelable(false).setPositiveButton(17039379, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass2 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        main.this.myDB.deleteAll();\n                        main.this.refreshList(main.this.loadFromDB());\n                    }\n                }).setNegativeButton(17039369, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int id) {\n                        dialog.cancel();\n                    }\n                });\n                builder.create().show();\n                return true;\n            case R.id.Manage_data:\n                this.myDB.getDb().close();\n                startActivityForResult(new Intent(getBaseContext(), ManageData.class), 2);\n                return true;\n            case R.id.Exit:\n                stopService(new Intent(this, service.class));\n                finish();\n                return true;\n            case R.id.help:\n                startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(\"https://github.com/jroal/a2dpvolume/wiki\")));\n                return true;\n            case R.id.packages:\n                startActivity(new Intent(this, PackagesChooser.class));\n                return true;\n            default:\n                return false;\n        }\n    }\n    public void onCreate(Bundle savedInstanceState) {\n        this.res = getResources();\n        setContentView(R.layout.main);\n        String ver = null;\n        try {\n            ver = getPackageManager().getPackageInfo(new ComponentName(BuildConfig.APPLICATION_ID, \"main\").getPackageName(), 0).versionName;\n        } catch (PackageManager.NameNotFoundException e) {\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        }\n        setTitle(this.res.getString(R.string.app_name) + \" Version: \" + ver);\n        this.application = (MyApplication) getApplication();\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        try {\n            if (this.preferences.getBoolean(\"useLocalStorage\", false)) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            File exportDir = new File(this.a2dpDir);\n            if (!exportDir.exists()) {\n                exportDir.mkdirs();\n            }\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.TTSignore = this.preferences.getBoolean(\"TTSignore\", false);\n        } catch (Exception e2) {\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n        this.connects = 0;\n        am = (AudioManager) getSystemService(\"audio\");\n        Button btn = (Button) findViewById(R.id.Button01);\n        Button locbtn = (Button) findViewById(R.id.Locationbtn);\n        serv = (Button) findViewById(R.id.ServButton);\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.RUNNING\"));\n        } catch (Exception e22) {\n            e22.printStackTrace();\n        }\n        try {\n            registerReceiver(this.sRunning, new IntentFilter(\"a2dp.vol.service.STOPPED_RUNNING\"));\n        } catch (Exception e23) {\n            e23.printStackTrace();\n        }\n        registerReceiver(this.mReceiver5, new IntentFilter(\"a2dp.Vol.main.RELOAD_LIST\"));\n        registerReceiver(this.mReceiver6, new IntentFilter(\"a2dp.vol.preferences.UPDATED\"));\n        this.lstring = new String[]{this.res.getString(R.string.NoData)};\n        this.myDB = new DeviceDB(this.application);\n        if (savedInstanceState == null) {\n            int devicemin = 1;\n            if (this.carMode) {\n                devicemin = 1 + 1;\n            }\n            if (this.homeDock) {\n                devicemin++;\n            }\n            try {\n                if (this.myDB.getLength() &lt; devicemin) {\n                    getBtDevices(1);\n                }\n            } catch (Exception e1) {\n                Log.e(LOG_TAG, \"error\" + e1.getMessage());\n            }\n            serv.setText(R.string.StartService);\n            startService(new Intent(this, service.class));\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n            startService(new Intent(this, NotificationCatcher.class));\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl = (ListView) findViewById(R.id.ListView01);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        btn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass3 */\n            public void onClick(View v) {\n                main.this.getBtDevices(1);\n            }\n        });\n        this.lvl.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass4 */\n            @Override // android.widget.AdapterView.OnItemLongClickListener\n            public boolean onItemLongClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                String mesg;\n                if (main.this.vec.isEmpty()) {\n                    return false;\n                }\n                BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n                new btDevice();\n                btDevice bt = main.this.vec.get(position);\n                BluetoothDevice btd = null;\n                if (mBTA != null) {\n                    for (BluetoothDevice device : mBTA.getBondedDevices()) {\n                        if (device.getAddress().equalsIgnoreCase(bt.mac)) {\n                            btd = device;\n                        }\n                    }\n                }\n                AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                builder.setTitle(bt.toString());\n                final String car = bt.toString();\n                if (btd != null) {\n                    String mesg2 = bt.desc1 + \"\\n\" + bt.mac + \"\\n\" + main.this.res.getString(R.string.Bonded);\n                    switch (btd.getBondState()) {\n                        case ExploreByTouchHelper.INVALID_ID /*{ENCODED_INT: -2147483648}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Error);\n                            break;\n                        case 10:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.NotBonded);\n                            break;\n                        case 11:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonding);\n                            break;\n                        case MotionEventCompat.AXIS_RX /*{ENCODED_INT: 12}*/:\n                            mesg2 = mesg2 + \" = \" + main.this.res.getString(R.string.Bonded);\n                            break;\n                    }\n                    mesg = ((mesg2 + \"\\n\" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDev(btd)) + \"\\nMajor \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassDevMaj(btd)) + \"\\nService \" + main.this.res.getString(R.string.Class) + \" = \" + main.this.getBTClassServ(btd);\n                } else {\n                    mesg = (String) main.this.getText(R.string.btNotOn);\n                }\n                builder.setMessage(mesg);\n                builder.setPositiveButton(\"OK\", (DialogInterface.OnClickListener) null);\n                builder.setNeutralButton(R.string.LocationString, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.main.AnonymousClass4.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        File exportDir = new File(main.this.a2dpDir);\n                        if (exportDir.exists()) {\n                            Uri uri = Uri.parse(new String(\"file:///\" + exportDir.getPath() + \"/\" + car.replaceAll(\" \", \"_\") + \".html\").trim());\n                            Intent intent = new Intent();\n                            intent.setAction(\"android.intent.action.VIEW\");\n                            intent.setDataAndType(uri, \"text/html\");\n                            try {\n                                main.this.getPackageManager().getPackageInfo(\"com.android.chrome\", 0);\n                                intent.setClassName(\"com.android.chrome\", \"com.google.android.apps.chrome.Main\");\n                            } catch (PackageManager.NameNotFoundException e1) {\n                                intent.setClassName(\"com.android.browser\", \"com.android.browser.BrowserActivity\");\n                                e1.printStackTrace();\n                            }\n                            try {\n                                main.this.startActivity(intent);\n                            } catch (Exception e) {\n                                Toast.makeText(main.this.application, e.toString(), 1).show();\n                                e.printStackTrace();\n                            }\n                        }\n                    }\n                });\n                builder.show();\n                return true;\n            }\n        });\n        this.lvl.setOnItemClickListener(new AdapterView.OnItemClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass5 */\n            @Override // android.widget.AdapterView.OnItemClickListener\n            public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n                if (!main.this.vec.isEmpty()) {\n                    final btDevice bt = main.this.vec.get(position);\n                    final btDevice bt2 = main.this.myDB.getBTD(bt.mac);\n                    AlertDialog.Builder builder = new AlertDialog.Builder(main.this);\n                    builder.setTitle(bt.toString());\n                    builder.setMessage(bt2.desc1 + \"\\n\" + bt2.desc2 + \"\\n\" + bt2.mac);\n                    builder.setPositiveButton(17039370, (DialogInterface.OnClickListener) null);\n                    builder.setNegativeButton(R.string.Delete, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass1 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            main.this.myDB.delete(bt2);\n                            main.this.refreshList(main.this.loadFromDB());\n                        }\n                    });\n                    builder.setNeutralButton(R.string.Edit, new DialogInterface.OnClickListener() {\n                        /* class a2dp.Vol.main.AnonymousClass5.AnonymousClass2 */\n                        public void onClick(DialogInterface dialog, int which) {\n                            Intent i = new Intent(main.this, EditDevice.class);\n                            i.putExtra(\"btd\", bt.mac);\n                            main.this.startActivityForResult(i, 4);\n                        }\n                    });\n                    builder.show();\n                }\n            }\n        });\n        locbtn.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass6 */\n            public void onClick(View v) {\n                main.this.Locationbtn();\n            }\n        });\n        locbtn.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass7 */\n            public boolean onLongClick(View v) {\n                try {\n                    byte[] buff = new byte[250];\n                    FileInputStream fs = main.this.openFileInput(\"My_Last_Location2\");\n                    fs.read(buff);\n                    fs.close();\n                    String st = new String(buff).trim();\n                    Toast.makeText(main.this, st, 1).show();\n                    main.this.startActivity(new Intent(\"android.intent.action.VIEW\", Uri.parse(st)));\n                    return false;\n                } catch (FileNotFoundException e) {\n                    Toast.makeText(main.this, (int) R.string.NoData, 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e.getMessage());\n                    return false;\n                } catch (IOException e2) {\n                    Toast.makeText(main.this, \"Some IO issue\", 1).show();\n                    Log.e(main.LOG_TAG, \"error\" + e2.getMessage());\n                    return false;\n                }\n            }\n        });\n        serv.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.main.AnonymousClass8 */\n            public void onClick(View v) {\n                if (main.this.servrun) {\n                    main.this.stopService(new Intent(main.this, service.class));\n                } else {\n                    main.this.startService(new Intent(main.this, service.class));\n                }\n            }\n        });\n        new CountDownTimer(2000, 1000) {\n            /* class a2dp.Vol.main.AnonymousClass9 */\n            public void onTick(long millisUntilFinished) {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n            public void onFinish() {\n                try {\n                    if (service.run) {\n                        main.this.servrun = true;\n                        main.serv.setText(R.string.StopService);\n                        main.this.getConnects();\n                        main.this.refreshList(main.this.loadFromDB());\n                        return;\n                    }\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                } catch (Exception x) {\n                    main.this.servrun = false;\n                    main.serv.setText(R.string.StartService);\n                    Log.e(main.LOG_TAG, \"error\" + x.getMessage());\n                }\n            }\n        }.start();\n        getConnects();\n        refreshList(loadFromDB());\n        super.onCreate(savedInstanceState);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        if (this.servrun) {\n            this.connects = service.connects.intValue();\n        } else {\n            this.connects = 0;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onStop() {\n        super.onStop();\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        try {\n            unregisterReceiver(this.sRunning);\n            unregisterReceiver(this.mReceiver5);\n            unregisterReceiver(this.mReceiver6);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n        this.myDB.getDb().close();\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n    /* access modifiers changed from: protected */\n    public void onResume() {\n        getConnects();\n        refreshList(loadFromDB());\n        super.onResume();\n    }\n    /* access modifiers changed from: protected */\n    public void onRestart() {\n        super.onRestart();\n    }\n    public void Locationbtn() {\n        try {\n            byte[] buff = new byte[250];\n            FileInputStream fs = openFileInput(\"My_Last_Location\");\n            fs.read(buff);\n            fs.close();\n            String st = new String(buff).trim();\n            Intent i = new Intent(\"android.intent.action.VIEW\");\n            i.setData(Uri.parse(st));\n            startActivity(i);\n        } catch (FileNotFoundException e) {\n            Toast.makeText(this, (int) R.string.NoData, 1).show();\n            Log.e(LOG_TAG, \"error\" + e.getMessage());\n        } catch (IOException e2) {\n            Toast.makeText(this, \"Some IO issue\", 1).show();\n            Log.e(LOG_TAG, \"error\" + e2.getMessage());\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int getBtDevices(int mode) {\n        String name;\n        int i = 0;\n        this.vec.clear();\n        if (this.carMode) {\n            btDevice fbt = new btDevice();\n            String str = getString(R.string.carDockName);\n            fbt.setBluetoothDevice(str, str, \"1\", am.getStreamMaxVolume(3));\n            btDevice fbt2 = this.myDB.getBTD(fbt.mac);\n            if (fbt2.mac == null) {\n                fbt.setIcon(R.drawable.car2);\n                this.myDB.insert(fbt);\n                this.vec.add(fbt);\n            } else {\n                this.vec.add(fbt2);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.homeDock) {\n            btDevice fbt3 = new btDevice();\n            String str2 = getString(R.string.homeDockName);\n            fbt3.setBluetoothDevice(str2, str2, \"2\", am.getStreamMaxVolume(3));\n            btDevice fbt22 = this.myDB.getBTD(fbt3.mac);\n            if (fbt22.mac == null) {\n                fbt3.setGetLoc(false);\n                fbt3.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt3);\n                this.vec.add(fbt3);\n            } else {\n                this.vec.add(fbt22);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.headsetPlug) {\n            btDevice fbt4 = new btDevice();\n            String str3 = getString(R.string.audioJackName);\n            fbt4.setBluetoothDevice(str3, str3, \"3\", am.getStreamMaxVolume(3));\n            btDevice fbt23 = this.myDB.getBTD(fbt4.mac);\n            if (fbt23.mac == null) {\n                fbt4.setGetLoc(false);\n                fbt4.setIcon(R.drawable.jack);\n                this.myDB.insert(fbt4);\n                this.vec.add(fbt4);\n            } else {\n                this.vec.add(fbt23);\n            }\n            refreshList(loadFromDB());\n        }\n        if (this.power) {\n            btDevice fbt5 = new btDevice();\n            String str4 = getString(R.string.powerPlugName);\n            fbt5.setBluetoothDevice(str4, str4, \"4\", am.getStreamMaxVolume(3));\n            btDevice fbt24 = this.myDB.getBTD(fbt5.mac);\n            if (fbt24.mac == null) {\n                fbt5.setGetLoc(false);\n                fbt5.setIcon(R.drawable.usb);\n                this.myDB.insert(fbt5);\n                this.vec.add(fbt5);\n            } else {\n                this.vec.add(fbt24);\n            }\n            refreshList(loadFromDB());\n        }\n        if (mode &gt;= 1) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            if (mBTA == null) {\n                Toast.makeText(this.application, (int) R.string.NobtSupport, 1).show();\n                return 0;\n            } else if (!mBTA.isEnabled()) {\n                try {\n                    startActivityForResult(new Intent(\"android.bluetooth.adapter.action.REQUEST_ENABLE\"), 1);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                return 0;\n            } else {\n                if (mBTA != null) {\n                    Set&lt;BluetoothDevice> pairedDevices = mBTA.getBondedDevices();\n                    if (pairedDevices.size() &gt; 0) {\n                        IBluetooth ibta = getIBluetooth();\n                        for (BluetoothDevice device : pairedDevices) {\n                            if (device.getAddress() != null) {\n                                btDevice bt = new btDevice();\n                                i++;\n                                if (Build.VERSION.SDK_INT &lt; 14 || Build.VERSION.SDK_INT > 16) {\n                                    name = device.getName();\n                                } else {\n                                    try {\n                                        name = ibta.getRemoteAlias(device.getAddress());\n                                    } catch (RemoteException e2) {\n                                        name = device.getName();\n                                        e2.printStackTrace();\n                                    }\n                                    if (name == null) {\n                                        name = device.getName();\n                                    }\n                                }\n                                bt.setBluetoothDevice(device, name, am.getStreamMaxVolume(3));\n                                if (Build.VERSION.SDK_INT &gt; 15) {\n                                    bt.setSetV(false);\n                                }\n                                btDevice bt2 = this.myDB.getBTD(bt.mac);\n                                if (bt2.mac == null) {\n                                    this.myDB.insert(bt);\n                                    this.vec.add(bt);\n                                } else {\n                                    this.vec.add(bt2);\n                                }\n                            }\n                        }\n                    }\n                }\n                refreshList(loadFromDB());\n                Toast.makeText(this.application, \"Found \" + i + \" Bluetooth Devices\", 1).show();\n            }\n        }\n        return i;\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 1:\n                    if (resultCode == 0) {\n                        Toast.makeText(this.application, (int) R.string.btEnableFail, 1).show();\n                        refreshList(loadFromDB());\n                        break;\n                    } else {\n                        int test = getBtDevices(1);\n                        if (test &gt; 0) {\n                            this.lstring = new String[test];\n                            for (int i = 0; i &lt; test; i++) {\n                                this.lstring[i] = this.vec.get(i).toString();\n                            }\n                            refreshList(loadFromDB());\n                            break;\n                        }\n                    }\n                    break;\n                case 2:\n                    refreshList(loadFromDB());\n                    break;\n            }\n        }\n        if (requestCode == 4) {\n            this.enableTTS = this.preferences.getBoolean(\"enableTTS\", false);\n            if (this.enableTTS) {\n                try {\n                    Intent checkIntent = new Intent();\n                    checkIntent.setAction(\"android.speech.tts.engine.CHECK_TTS_DATA\");\n                    startActivityForResult(checkIntent, 3);\n                } catch (Exception e) {\n                    Toast.makeText(this.application, \"TTS missing fault\", 1).show();\n                }\n            }\n        }\n        if (requestCode == 3) {\n            switch (resultCode) {\n                case -3:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Missing Volume\", 0).show();\n                        return;\n                    }\n                    return;\n                case -2:\n                    if (!this.TTSignore) {\n                        AlertDialog.Builder builder = new AlertDialog.Builder(this);\n                        builder.setTitle(getString(R.string.app_name));\n                        builder.setPositiveButton(R.string.Yes, new DialogInterface.OnClickListener() {\n                            /* class a2dp.Vol.main.AnonymousClass10 */\n                            public void onClick(DialogInterface dialog, int which) {\n                                Intent installIntent = new Intent();\n                                installIntent.setAction(\"android.speech.tts.engine.INSTALL_TTS_DATA\");\n                                main.this.startActivityForResult(installIntent, 3);\n                            }\n                        });\n                        builder.setNegativeButton(R.string.No, (DialogInterface.OnClickListener) null);\n                        builder.setNeutralButton(R.string.ignoreTTSMissing, setIgnore());\n                        builder.setMessage(R.string.needTTS);\n                        builder.show();\n                        return;\n                    }\n                    return;\n                case -1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Bad Data\", 0).show();\n                        return;\n                    }\n                    return;\n                case 0:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, \"TTS Voice data fail\", 0).show();\n                        return;\n                    }\n                    return;\n                case 1:\n                    if (this.toasts) {\n                        Toast.makeText(this.application, (int) R.string.TTSready, 0).show();\n                        return;\n                    }\n                    return;\n                default:\n                    return;\n            }\n        }\n    }\n    private DialogInterface.OnClickListener setIgnore() {\n        SharedPreferences.Editor editor = this.preferences.edit();\n        this.TTSignore = true;\n        editor.putBoolean(\"TTSignore\", true);\n        editor.commit();\n        return null;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void refreshList(int test) {\n        if (test &gt; 0) {\n            this.lstring = new String[test];\n            for (int i = 0; i &lt; test; i++) {\n                this.lstring[i] = this.vec.get(i).toString();\n                if (this.connects &gt; 0 && this.servrun) {\n                    for (int j = 0; j &lt; service.btdConn.length; j++) {\n                        if (service.btdConn[j] != null && this.vec.get(i).getMac().equalsIgnoreCase(service.btdConn[j].getMac())) {\n                            StringBuilder sb = new StringBuilder();\n                            String[] strArr = this.lstring;\n                            strArr[i] = sb.append(strArr[i]).append(\" **\").toString();\n                        }\n                    }\n                }\n            }\n        } else {\n            this.lstring = new String[]{\"no data\"};\n        }\n        this.ladapt = new ArrayAdapter&lt;>(this.application, resourceID, this.lstring);\n        this.lvl.setAdapter((ListAdapter) this.ladapt);\n        this.ladapt.notifyDataSetChanged();\n        this.lvl.invalidateViews();\n        this.lvl.forceLayout();\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private int loadFromDB() {\n        this.myDB.getDb().close();\n        if (!this.myDB.getDb().isOpen()) {\n            try {\n                this.myDB = new DeviceDB(this.application);\n            } catch (Exception e) {\n                e.printStackTrace();\n                return 0;\n            }\n        }\n        try {\n            this.vec = this.myDB.selectAlldb();\n            if (this.vec.isEmpty() || this.vec == null) {\n                return 0;\n            }\n            return this.vec.size();\n        } catch (Exception e2) {\n            e2.printStackTrace();\n            return 0;\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassServ(BluetoothDevice btd) {\n        String temp = \"\";\n        if (btd == null) {\n            return temp;\n        }\n        if (btd.getBluetoothClass().hasService(2097152)) {\n            temp = \"Audio, \";\n        }\n        if (btd.getBluetoothClass().hasService(4194304)) {\n            temp = temp + \"Telophony, \";\n        }\n        if (btd.getBluetoothClass().hasService(GravityCompat.RELATIVE_LAYOUT_DIRECTION)) {\n            temp = temp + \"Information, \";\n        }\n        if (btd.getBluetoothClass().hasService(8192)) {\n            temp = temp + \"Limited Discoverability, \";\n        }\n        if (btd.getBluetoothClass().hasService(131072)) {\n            temp = temp + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().hasService(1048576)) {\n            temp = temp + \"Object Transfer, \";\n        }\n        if (btd.getBluetoothClass().hasService(65536)) {\n            temp = temp + \"Positioning, \";\n        }\n        if (btd.getBluetoothClass().hasService(262144)) {\n            temp = temp + \"Render, \";\n        }\n        if (btd.getBluetoothClass().hasService(524288)) {\n            temp = temp + \"Capture, \";\n        }\n        if (temp.length() &gt; 5) {\n            temp = temp.substring(0, temp.length() - 2);\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDev(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1056) {\n            temp2 = \"Car Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1032) {\n            temp2 = temp2 + \"Handsfree, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1048) {\n            temp2 = temp2 + \"Headphones, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1064) {\n            temp2 = temp2 + \"HiFi Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1044) {\n            temp2 = temp2 + \"Loudspeaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1052) {\n            temp2 = temp2 + \"Portable Audio, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1076) {\n            temp2 = temp2 + \"Camcorder, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1060) {\n            temp2 = temp2 + \"Set Top Box, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1084) {\n            temp2 = temp2 + \"A/V Display/Speaker, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1080) {\n            temp2 = temp2 + \"Video Monitor, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1068) {\n            temp2 = temp2 + \"VCR, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 516) {\n            temp2 = temp2 + \"Cellular Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 524) {\n            temp2 = temp2 + \"Smart Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 520) {\n            temp2 = temp2 + \"Cordless Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 532) {\n            temp2 = temp2 + \"ISDN Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 528) {\n            temp2 = temp2 + \"Phone Modem/Gateway, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Other Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1028) {\n            temp2 = temp2 + \"Wearable Headset, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 1024) {\n            temp2 = temp2 + \"Uncategorized A/V, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 512) {\n            temp2 = temp2 + \"Uncategorized Phone, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 2048) {\n            temp2 = temp2 + \"Incategorized Toy, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 260) {\n            temp2 = temp2 + \"Desktop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 272) {\n            temp2 = temp2 + \"Handheld PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 268) {\n            temp2 = temp2 + \"Laptop PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 276) {\n            temp2 = temp2 + \"Palm Sized PC/PDA, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 280) {\n            temp2 = temp2 + \"Wearable PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 264) {\n            temp2 = temp2 + \"Server PC, \";\n        }\n        if (btd.getBluetoothClass().getDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (temp2.length() &gt; 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String getBTClassDevMaj(BluetoothDevice btd) {\n        String temp;\n        String temp2 = \"\";\n        if (btd == null) {\n            return temp2;\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1024) {\n            temp2 = \"Audio Video, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 256) {\n            temp2 = temp2 + \"Computer, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2304) {\n            temp2 = temp2 + \"Health, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 0) {\n            temp2 = temp2 + \"Misc, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 768) {\n            temp2 = temp2 + \"Networking, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1280) {\n            temp2 = temp2 + \"Peripheral, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 512) {\n            temp2 = temp2 + \"Phone, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 7936) {\n            temp2 = temp2 + \"Uncategorized, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1792) {\n            temp2 = temp2 + \"Wearable, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 2048) {\n            temp2 = temp2 + \"Toy, \";\n        }\n        if (btd.getBluetoothClass().getMajorDeviceClass() == 1536) {\n            temp2 = temp2 + \"Imaging, \";\n        }\n        if (temp2.length() &gt;= 3) {\n            temp = temp2.substring(0, temp2.length() - 2);\n        } else {\n            temp = \"other\";\n        }\n        return temp;\n    }\n    private IBluetooth getIBluetooth() {\n        try {\n            IBinder b = (IBinder) Class.forName(\"android.os.ServiceManager\").getDeclaredMethod(\"getService\", String.class).invoke(null, \"bluetooth\");\n            Log.d(LOG_TAG, \"Test2: \" + b.getInterfaceDescriptor());\n            Method m = Class.forName(\"android.bluetooth.IBluetooth\").getDeclaredClasses()[0].getDeclaredMethod(\"asInterface\", IBinder.class);\n            m.setAccessible(true);\n            return (IBluetooth) m.invoke(null, b);\n        } catch (Exception e) {\n            Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            return null;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.main.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.NotificationCatcher"
},
{
    "target_layoutcode": "<root />", 
    "source_fullname": "a2dp.Vol.service", 
    "methodSourceLink": [], 
    "target": "StoreLoc", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.StoreLoc.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<root />", 
    "target_actcode": "public class StoreLoc extends Service {\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    public static final String PREFS_NAME = \"btVol\";\n    private DeviceDB DB;\n    float MAX_ACC = 20.0f;\n    long MAX_TIME = 10000;\n    String a2dpDir = \"\";\n    private MyApplication application;\n    btDevice btdConn;\n    Long dtime = null;\n    int formatFlags;\n    int formatFlags2;\n    boolean gpsEnabled = false;\n    Location l = null;\n    Location l3 = null;\n    Location l4 = null;\n    boolean local;\n    LocationListener locationListener = new LocationListener() {\n        /* class a2dp.Vol.StoreLoc.AnonymousClass2 */\n        public void onLocationChanged(Location location) {\n            StoreLoc.this.grabGPS();\n        }\n        public void onProviderEnabled(String provider) {\n        }\n        public void onProviderDisabled(String provider) {\n        }\n        public void onStatusChanged(String provider, int status, Bundle extras) {\n        }\n    };\n    private LocationManager locationManager;\n    SharedPreferences preferences;\n    private boolean toasts = true;\n    private boolean useNet = true;\n    private boolean usePass = false;\n    public IBinder onBind(Intent intent) {\n        return null;\n    }\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        try {\n            this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.usePass = this.preferences.getBoolean(\"usePassive\", false);\n            this.useNet = this.preferences.getBoolean(\"useNetwork\", true);\n            this.MAX_TIME = new Long(this.preferences.getString(\"gpsTime\", \"15000\")).longValue();\n            this.MAX_ACC = new Float(this.preferences.getString(\"gpsDistance\", \"10\")).floatValue();\n            this.local = this.preferences.getBoolean(\"useLocalStorage\", false);\n            if (this.local) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n        } catch (NumberFormatException e) {\n            this.MAX_ACC = 10.0f;\n            this.MAX_TIME = 15000;\n            Toast.makeText(this, \"prefs failed to load. \" + e.getMessage(), 1).show();\n            e.printStackTrace();\n            Log.e(LOG_TAG, \"prefs failed to load \" + e.getMessage());\n        }\n        this.l = null;\n        this.l3 = null;\n        this.l4 = null;\n        try {\n            this.btdConn = this.DB.getBTD(intent.getStringExtra(\"device\"));\n        } catch (Exception e2) {\n            Toast.makeText(this, \"Location service failed to start. \" + e2.getMessage(), 1).show();\n            stopSelf();\n            e2.printStackTrace();\n        }\n        this.locationManager = (LocationManager) getSystemService(\"location\");\n        this.dtime = Long.valueOf(System.currentTimeMillis());\n        registerListeners();\n        if (this.MAX_TIME &gt; 0) {\n            new CountDownTimer(this.MAX_TIME, 5000) {\n                /* class a2dp.Vol.StoreLoc.AnonymousClass1 */\n                public void onTick(long millisUntilFinished) {\n                    if (StoreLoc.this.toasts) {\n                        Toast.makeText(StoreLoc.this.application, \"Time left: \" + ((20 + millisUntilFinished) / 1000), 1).show();\n                    }\n                }\n                public void onFinish() {\n                    StoreLoc.this.clearLoc(true);\n                }\n            }.start();\n        }\n        return super.onStartCommand(intent, flags, startId);\n    }\n    public void onCreate() {\n        this.application = (MyApplication) getApplication();\n        this.DB = new DeviceDB(this.application);\n        this.formatFlags = 524288;\n        this.formatFlags |= 16;\n        this.formatFlags |= 1;\n        this.formatFlags |= 4;\n    }\n    public void onDestroy() {\n        this.DB.getDb().close();\n        if (this.locationListener != null) {\n            try {\n                if (ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_FINE_LOCATION\") == 0 || ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_COARSE_LOCATION\") == 0) {\n                    this.locationManager.removeUpdates(this.locationListener);\n                } else {\n                    return;\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    @Override // java.lang.Object\n    public void finalize() throws Throwable {\n        this.DB.getDb().close();\n        if (this.locationListener != null) {\n            try {\n                if (ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_FINE_LOCATION\") == 0 || ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_COARSE_LOCATION\") == 0) {\n                    this.locationManager.removeUpdates(this.locationListener);\n                } else {\n                    return;\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        super.finalize();\n    }\n    /* access modifiers changed from: package-private */\n    public void grabGPS() {\n        String urlStr;\n        String urlStr2;\n        String car = \"My Car\";\n        LocationManager lm = (LocationManager) getSystemService(\"location\");\n        List&lt;String> providers = lm.getProviders(true);\n        long deltat = 9999999;\n        float oldacc = 1.0E8f;\n        float bestacc = 1.0E8f;\n        if (this.l4 != null && this.l4.hasAccuracy()) {\n            bestacc = this.l4.getAccuracy();\n        }\n        if (this.l3 != null && this.l3.hasAccuracy()) {\n            oldacc = this.l3.getAccuracy();\n        }\n        if (this.l != null) {\n            long olddt = System.currentTimeMillis() - this.l.getTime();\n        }\n        try {\n            if (!providers.isEmpty()) {\n                for (int i = providers.size() - 1; i &gt;= 0; i--) {\n                    if (ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_FINE_LOCATION\") == 0 || ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_COARSE_LOCATION\") == 0) {\n                        Location l2 = lm.getLastKnownLocation(providers.get(i));\n                        if (l2 != null) {\n                            if (l2.hasAccuracy()) {\n                                float acc = l2.getAccuracy();\n                                if (acc &lt; oldacc) {\n                                    this.l3 = l2;\n                                    oldacc = acc;\n                                }\n                                if (acc &lt; bestacc && l2.getTime() > this.dtime.longValue() - this.MAX_TIME) {\n                                    this.l4 = l2;\n                                    bestacc = acc;\n                                }\n                            }\n                            deltat = System.currentTimeMillis() - l2.getTime();\n                            if (deltat &lt; deltat) {\n                                this.l = l2;\n                            }\n                        }\n                    } else {\n                        return;\n                    }\n                }\n                if (!(this.locationListener == null || this.l4 == null)) {\n                    float x = this.l4.getAccuracy();\n                    if (x &lt; this.MAX_ACC && x > 0.0f && System.currentTimeMillis() - this.l4.getTime() &lt; this.MAX_TIME) {\n                        clearLoc(true);\n                    }\n                }\n                DecimalFormat df = new DecimalFormat(\"#.#\");\n                if (this.btdConn != null) {\n                    car = this.btdConn.getDesc2();\n                }\n                if (this.l4 != null) {\n                    String locTime = DateUtils.formatDateTime(this.application, this.l4.getTime(), this.formatFlags);\n                    try {\n                        urlStr2 = URLEncoder.encode(this.l4.getLatitude() + \",\" + this.l4.getLongitude() + \"(\" + car + \" \" + locTime + \" acc=\" + df.format((double) this.l4.getAccuracy()) + \")\", \"UTF-8\");\n                    } catch (UnsupportedEncodingException e1) {\n                        urlStr2 = URLEncoder.encode(this.l4.getLatitude() + \",\" + this.l4.getLongitude() + \"(\" + car + \" \" + locTime + \" acc=\" + df.format((double) this.l4.getAccuracy()) + \")\");\n                        e1.printStackTrace();\n                    }\n                    try {\n                        FileOutputStream fos = openFileOutput(\"My_Last_Location\", 1);\n                        fos.write((\"http://maps.google.com/maps?q=\" + urlStr2).getBytes());\n                        fos.close();\n                    } catch (FileNotFoundException e) {\n                        Toast.makeText(this.application, \"FileNotFound\", 1).show();\n                        e.printStackTrace();\n                    } catch (IOException e2) {\n                        Toast.makeText(this.application, \"IOException\", 1).show();\n                        e2.printStackTrace();\n                    }\n                }\n                if (this.l3 != null) {\n                    String locTime2 = DateUtils.formatDateTime(this.application, this.l3.getTime(), this.formatFlags);\n                    try {\n                        urlStr = URLEncoder.encode(this.l3.getLatitude() + \",\" + this.l3.getLongitude() + \"(\" + car + \" \" + locTime2 + \" acc=\" + df.format((double) this.l3.getAccuracy()) + \")\", \"UTF-8\");\n                    } catch (UnsupportedEncodingException e12) {\n                        urlStr = URLEncoder.encode(this.l3.getLatitude() + \",\" + this.l3.getLongitude() + \"(\" + car + \" \" + locTime2 + \" acc=\" + df.format((double) this.l3.getAccuracy()) + \")\");\n                        e12.printStackTrace();\n                    }\n                    try {\n                        FileOutputStream fos2 = openFileOutput(\"My_Last_Location2\", 1);\n                        fos2.write((\"http://maps.google.com/maps?q=\" + urlStr).getBytes());\n                        fos2.close();\n                    } catch (FileNotFoundException e3) {\n                        Toast.makeText(this.application, \"FileNotFound\", 1).show();\n                        e3.printStackTrace();\n                    } catch (IOException e4) {\n                        Toast.makeText(this.application, \"IOException\", 1).show();\n                        e4.printStackTrace();\n                    }\n                }\n            }\n        } catch (Exception e5) {\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void clearLoc(boolean doGps) {\n        String temp;\n        String temp2;\n        String temp3;\n        String urlStr;\n        String urlStr2;\n        String urlStr3;\n        if (ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_FINE_LOCATION\") == 0 || ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_COARSE_LOCATION\") == 0) {\n            this.locationManager.removeUpdates(this.locationListener);\n            String car = \"My Car\";\n            DecimalFormat df = new DecimalFormat(\"#.#\");\n            if (this.btdConn != null) {\n                car = this.btdConn.getDesc2();\n            }\n            try {\n                File exportDir = new File(this.a2dpDir);\n                if (!exportDir.exists()) {\n                    exportDir.mkdirs();\n                }\n                File file = new File(exportDir, car.replaceAll(\" \", \"_\") + \".html\");\n                if (this.l4 != null) {\n                    String locTime = DateUtils.formatDateTime(this.application, this.l4.getTime(), this.formatFlags);\n                    try {\n                        urlStr3 = URLEncoder.encode(this.l4.getLatitude() + \",\" + this.l4.getLongitude() + \"(\" + car + \" \" + locTime + \" acc=\" + df.format((double) this.l4.getAccuracy()) + \")\", \"UTF-8\");\n                    } catch (Exception e) {\n                        urlStr3 = URLEncoder.encode(this.l4.getLatitude() + \",\" + this.l4.getLongitude() + \"(\" + car + \" \" + locTime + \" acc=\" + df.format((double) this.l4.getAccuracy()) + \")\");\n                        e.printStackTrace();\n                    }\n                    temp = \"&lt;hr />&lt;bold>&lt;a href=\\\"http://maps.google.com/maps?q=\" + urlStr3 + \"\\\">\" + car + \"&lt;/a>&lt;/bold> Best Location&lt;br>Time: \" + locTime + \"&lt;br>Location type: \" + this.l4.getProvider() + \"&lt;br>Accuracy: \" + this.l4.getAccuracy() + \" meters&lt;br>Elevation: \" + this.l4.getAltitude() + \" meters&lt;br>Lattitude: \" + this.l4.getLatitude() + \"&lt;br>Longitude: \" + this.l4.getLongitude();\n                } else {\n                    temp = \"No Best Location Captured \" + DateUtils.formatDateTime(this.application, this.dtime.longValue(), this.formatFlags) + \"&lt;br>\";\n                }\n                if (this.l3 != null) {\n                    String locTime2 = DateUtils.formatDateTime(this.application, this.l3.getTime(), this.formatFlags);\n                    try {\n                        urlStr2 = URLEncoder.encode(this.l3.getLatitude() + \",\" + this.l3.getLongitude() + \"(\" + car + \" \" + locTime2 + \" acc=\" + df.format((double) this.l3.getAccuracy()) + \")\", \"UTF-8\");\n                    } catch (Exception e2) {\n                        urlStr2 = URLEncoder.encode(this.l3.getLatitude() + \",\" + this.l3.getLongitude() + \"(\" + car + \" \" + locTime2 + \" acc=\" + df.format((double) this.l3.getAccuracy()) + \")\");\n                        e2.printStackTrace();\n                    }\n                    temp2 = temp + \"&lt;hr />&lt;bold>&lt;a href=\\\"http://maps.google.com/maps?q=\" + urlStr2 + \"\\\">\" + car + \"&lt;/a>&lt;/bold> Most Accurate Location&lt;br>Time: \" + locTime2 + \"&lt;br>Location type: \" + this.l3.getProvider() + \"&lt;br>Accuracy: \" + this.l3.getAccuracy() + \" meters&lt;br>Elevation: \" + this.l3.getAltitude() + \" meters&lt;br>Lattitude: \" + this.l3.getLatitude() + \"&lt;br>Longitude: \" + this.l3.getLongitude();\n                } else {\n                    temp2 = temp + \"No Most Accurate Location Captured \" + DateUtils.formatDateTime(this.application, this.dtime.longValue(), this.formatFlags) + \"&lt;br>\";\n                }\n                if (this.l != null) {\n                    String locTime3 = DateUtils.formatDateTime(this.application, this.l.getTime(), this.formatFlags);\n                    try {\n                        urlStr = URLEncoder.encode(this.l.getLatitude() + \",\" + this.l.getLongitude() + \"(\" + car + \" \" + locTime3 + \" acc=\" + df.format((double) this.l.getAccuracy()) + \")\", \"UTF-8\");\n                    } catch (Exception e3) {\n                        urlStr = URLEncoder.encode(this.l.getLatitude() + \",\" + this.l.getLongitude() + \"(\" + car + \" \" + locTime3 + \" acc=\" + df.format((double) this.l.getAccuracy()) + \")\");\n                        e3.printStackTrace();\n                    }\n                    temp3 = temp2 + \"&lt;hr />&lt;bold>&lt;a href=\\\"http://maps.google.com/maps?q=\" + urlStr + \"\\\">\" + car + \"&lt;/a>&lt;/bold> Most Recent Location&lt;br>Time: \" + locTime3 + \"&lt;br>Location type: \" + this.l.getProvider() + \"&lt;br>Accuracy: \" + this.l.getAccuracy() + \" meters&lt;br>Elevation: \" + this.l.getAltitude() + \" meters&lt;br>Lattitude: \" + this.l.getLatitude() + \"&lt;br>Longitude: \" + this.l.getLongitude();\n                } else {\n                    temp3 = temp2 + \"No Most Recent Location Captured \" + DateUtils.formatDateTime(this.application, this.dtime.longValue(), this.formatFlags) + \"&lt;br>\";\n                }\n                if (!this.gpsEnabled) {\n                    temp3 = temp3 + \"&lt;br>GPS was not enabled\";\n                }\n                if (this.local) {\n                    FileOutputStream fos = openFileOutput(file.getName(), 1);\n                    fos.write(temp3.getBytes());\n                    fos.close();\n                } else {\n                    FileOutputStream fos2 = new FileOutputStream(file);\n                    fos2.write(temp3.getBytes());\n                    fos2.close();\n                }\n            } catch (FileNotFoundException e4) {\n                Toast.makeText(this.application, \"FileNotFound\", 1).show();\n                e4.printStackTrace();\n                Log.e(LOG_TAG, \"Error \" + e4.getMessage());\n            } catch (IOException e5) {\n                Toast.makeText(this.application, \"IOException\", 1).show();\n                e5.printStackTrace();\n                Log.e(LOG_TAG, \"Error \" + e5.getMessage());\n            }\n            this.l = null;\n            this.l3 = null;\n            this.l4 = null;\n            this.btdConn = null;\n            stopSelf();\n        }\n    }\n    private void registerListeners() {\n        if (!this.locationManager.isProviderEnabled(\"gps\")) {\n            this.gpsEnabled = false;\n        } else if (ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_FINE_LOCATION\") == 0 || ActivityCompat.checkSelfPermission(this, \"android.permission.ACCESS_COARSE_LOCATION\") == 0) {\n            this.locationManager.requestLocationUpdates(\"gps\", 0, 0.0f, this.locationListener);\n            this.gpsEnabled = true;\n        } else {\n            return;\n        }\n        if (this.useNet && this.locationManager.isProviderEnabled(\"network\")) {\n            this.locationManager.requestLocationUpdates(\"network\", 0, 0.0f, this.locationListener);\n        }\n        if (this.usePass && this.locationManager.isProviderEnabled(\"passive\")) {\n            this.locationManager.requestLocationUpdates(\"passive\", 0, 0.0f, this.locationListener);\n        }\n    }\n}\n", 
    "source": "service", 
    "source_actcode": "public class service extends Service implements AudioManager.OnAudioFocusChangeListener {\n    private static final String A2DP_Vol = \"A2DP_Vol\";\n    private static final int ALARM_STREAM = 2;\n    static String DeviceToConnect = null;\n    private static final String FIX_STREAM = \"fix_stream\";\n    private static final int IN_CALL_STREAM = 1;\n    private static final String LOG_TAG = \"A2DP_Volume\";\n    private static final int MUSIC_STREAM = 0;\n    private static final String OLD_PH_VOL = \"old_phone_vol\";\n    private static final String OLD_VOLUME = \"old_vol\";\n    private static Integer OldVol = 5;\n    private static Integer OldVol2 = 5;\n    private static Integer Oldsilent = null;\n    public static final String PREFS_NAME = \"btVol\";\n    static AudioManager am2 = null;\n    private static MyApplication application;\n    public static btDevice[] btdConn = new btDevice[5];\n    public static Integer connects = 0;\n    private static boolean hideVolUi = false;\n    static IBluetoothA2dp ibta2;\n    public static ServiceConnection mConnection = new ServiceConnection() {\n        /* class a2dp.Vol.service.AnonymousClass11 */\n        public void onServiceConnected(ComponentName name, IBinder service) {\n            service.mIsBound = true;\n            service.ibta2 = IBluetoothA2dp.Stub.asInterface(service);\n            BluetoothDevice device = null;\n            for (BluetoothDevice dev : BluetoothAdapter.getDefaultAdapter().getBondedDevices()) {\n                if (dev.getAddress().equalsIgnoreCase(service.DeviceToConnect)) {\n                    device = dev;\n                }\n            }\n            if (device != null) {\n                try {\n                    service.ibta2.connect(device);\n                } catch (RemoteException e) {\n                    e.printStackTrace();\n                }\n            }\n        }\n        public void onServiceDisconnected(ComponentName name) {\n            service.mIsBound = false;\n            service.doUnbind(service.application);\n        }\n    };\n    static boolean mIsBound = false;\n    public static boolean mTtsReady = false;\n    private static boolean mvolsLeft = false;\n    private static String notify_pref = \"always\";\n    private static boolean pvolsLeft = false;\n    private static boolean ramp_vol = false;\n    public static boolean run = false;\n    public static boolean talk = false;\n    private DeviceDB DB;\n    float MAX_ACC = 10.0f;\n    private int MAX_MESSAGE_LENGTH = 350;\n    long MAX_TIME = 20000;\n    private long SMS_delay = 3000;\n    private final BroadcastReceiver SMScatcher = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass12 */\n        public void onReceive(Context context, Intent intent) {\n            Bundle bundle;\n            if (intent.getAction().equals(\"android.provider.Telephony.SMS_RECEIVED\") && service.this.tm.getCallState() == 0 && (bundle = intent.getExtras()) != null) {\n                Object[] pdusObj = (Object[]) bundle.get(\"pdus\");\n                SmsMessage[] messages = new SmsMessage[pdusObj.length];\n                for (int i = 0; i &lt; pdusObj.length; i++) {\n                    messages[i] = SmsMessage.createFromPdu((byte[]) pdusObj[i]);\n                }\n                StringBuilder sb = new StringBuilder();\n                for (SmsMessage currentMessage : messages) {\n                    sb.append(MessageFormat.format(service.this.getString(R.string.msgTemplate), service.this.GetName(currentMessage.getDisplayOriginatingAddress()), currentMessage.getDisplayMessageBody())).append(' ');\n                }\n                service.this.TextReader(sb.toString().trim());\n            }\n        }\n    };\n    private int SMSstream = 0;\n    String a2dpDir = \"\";\n    private boolean bluetoothWasOff = false;\n    private final BroadcastReceiver btOFFReciever = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass3 */\n        public void onReceive(Context context, Intent intent) {\n            BluetoothAdapter mBTA = BluetoothAdapter.getDefaultAdapter();\n            String mac = \"\";\n            if (mBTA.getState() == 10 || mBTA.getState() == 13) {\n                for (int j = 0; j &lt; service.btdConn.length; j++) {\n                    if (service.btdConn[j] != null && service.btdConn[j].getMac().length() &gt; 2) {\n                        mac = service.btdConn[j].getMac();\n                        service.btdConn[j] = null;\n                    }\n                }\n                service.this.getConnects();\n                if (mac != \"\") {\n                    if (service.this.notify) {\n                        service.this.updateNot(false, null);\n                    }\n                    if (!service.mvolsLeft) {\n                        service.setVolume(service.OldVol2.intValue(), service.application);\n                    }\n                    if (!service.pvolsLeft) {\n                        service.setPVolume(service.OldVol.intValue());\n                    }\n                    service.this.dowifi(service.this.oldwifistate);\n                }\n                if (service.mTtsReady) {\n                    try {\n                        if (!service.this.clearedTts) {\n                            service.this.clearTts();\n                        }\n                        service.this.mTts.shutdown();\n                        service.mTtsReady = false;\n                        service.this.unregisterReceiver(service.this.SMScatcher);\n                    } catch (Exception e) {\n                        e.printStackTrace();\n                    }\n                }\n                Intent itent = new Intent();\n                itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n                itent.putExtra(\"disconnect\", mac);\n                service.application.sendBroadcast(itent);\n            }\n        }\n    };\n    private boolean carMode = true;\n    private boolean clearedTts = true;\n    private int connectedIcon;\n    private volatile boolean connecting = false;\n    private volatile boolean disconnecting = false;\n    private boolean enableGTalk = false;\n    private boolean enableSMS = false;\n    private final BroadcastReceiver headSetReceiver = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass4 */\n        public void onReceive(Context arg0, Intent intent) {\n            int state = intent.getIntExtra(\"state\", -1);\n            try {\n                btDevice bt2 = service.this.DB.getBTD(\"3\");\n                if (bt2 != null && \"3\".equalsIgnoreCase(bt2.getMac())) {\n                    if (state == 0 && service.connects.intValue() &gt; 0) {\n                        service.this.disconnecting = true;\n                        service.this.DoDisconnected(bt2);\n                    } else if (state == 1) {\n                        service.this.connecting = true;\n                        service.this.DoConnected(bt2);\n                    }\n                }\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n    };\n    private boolean headsetPlug = false;\n    private boolean homeDock = false;\n    public TextToSpeech.OnInitListener listenerStarted = new TextToSpeech.OnInitListener() {\n        /* class a2dp.Vol.service.AnonymousClass14 */\n        public void onInit(int status) {\n            if (status == 0) {\n                service.mTtsReady = true;\n                service.this.mTts.setOnUtteranceProgressListener(service.this.ul);\n            }\n        }\n    };\n    boolean local;\n    LocationManager locmanager;\n    private NotificationManager mNotificationManager = null;\n    private PackageManager mPackageManager;\n    private final BroadcastReceiver mReceiver = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass5 */\n        public void onReceive(Context context, Intent intent) {\n            BluetoothDevice bt;\n            btDevice bt2;\n            if (!service.this.connecting) {\n                service.this.connecting = true;\n                try {\n                    bt = (BluetoothDevice) intent.getExtras().get(\"android.bluetooth.device.extra.DEVICE\");\n                } catch (Exception e1) {\n                    bt = null;\n                    e1.printStackTrace();\n                }\n                if (bt != null) {\n                    try {\n                        bt2 = service.this.DB.getBTD(bt.getAddress());\n                    } catch (Exception e) {\n                        bt2 = null;\n                    }\n                } else {\n                    try {\n                        if (intent.getAction().equalsIgnoreCase(\"android.app.action.ENTER_CAR_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"1\");\n                        } else if (intent.getAction().equalsIgnoreCase(\"android.app.action.ENTER_DESK_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"2\");\n                        } else if (intent.getAction().equalsIgnoreCase(\"android.intent.action.ACTION_POWER_CONNECTED\")) {\n                            bt2 = service.this.DB.getBTD(\"4\");\n                        } else {\n                            bt2 = null;\n                        }\n                    } catch (Exception e2) {\n                        bt2 = null;\n                        Log.e(service.LOG_TAG, \"Error\" + e2.toString());\n                    }\n                }\n                if (bt2 == null || bt2.getMac() == null) {\n                    service.this.connecting = false;\n                } else {\n                    service.this.DoConnected(bt2);\n                }\n            }\n        }\n    };\n    private final BroadcastReceiver mReceiver2 = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass8 */\n        public void onReceive(Context context2, Intent intent2) {\n            BluetoothDevice bt;\n            btDevice bt2;\n            if (!service.this.disconnecting) {\n                service.this.disconnecting = true;\n                try {\n                    bt = (BluetoothDevice) intent2.getExtras().get(\"android.bluetooth.device.extra.DEVICE\");\n                } catch (Exception e1) {\n                    bt = null;\n                    e1.printStackTrace();\n                }\n                if (bt != null) {\n                    try {\n                        bt2 = service.this.DB.getBTD(bt.getAddress());\n                    } catch (Exception e) {\n                        bt2 = null;\n                        Log.e(service.LOG_TAG, \"Error\" + e.toString());\n                    }\n                } else {\n                    try {\n                        if (intent2.getAction().equalsIgnoreCase(\"android.app.action.EXIT_CAR_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"1\");\n                        } else if (intent2.getAction().equalsIgnoreCase(\"android.app.action.EXIT_DESK_MODE\")) {\n                            bt2 = service.this.DB.getBTD(\"2\");\n                        } else if (intent2.getAction().equalsIgnoreCase(\"android.intent.action.ACTION_POWER_DISCONNECTED\")) {\n                            bt2 = service.this.DB.getBTD(\"4\");\n                        } else {\n                            bt2 = null;\n                        }\n                    } catch (Exception e2) {\n                        bt2 = null;\n                        Log.e(service.LOG_TAG, e2.toString());\n                    }\n                }\n                if (bt2 == null || bt2.getMac() == null) {\n                    service.this.disconnecting = false;\n                } else {\n                    service.this.DoDisconnected(bt2);\n                }\n            }\n        }\n    };\n    private TextToSpeech mTts;\n    private final BroadcastReceiver messageClear = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass2 */\n        public void onReceive(Context arg0, Intent arg1) {\n            service.this.clearTts();\n        }\n    };\n    private boolean musicWasPlaying = false;\n    HashMap&lt;String, String> myHash;\n    private boolean notify = true;\n    boolean oldgpsstate = true;\n    boolean oldwifistate = true;\n    Boolean permLocation = true;\n    Boolean permPhone = true;\n    Boolean permReadContacts = true;\n    Boolean permSMS = true;\n    Boolean permStorage = true;\n    private boolean power = false;\n    SharedPreferences preferences;\n    public BroadcastReceiver sco_change = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass16 */\n        public void onReceive(Context arg0, Intent arg1) {\n            if (arg1.getIntExtra(\"android.media.extra.SCO_AUDIO_STATE\", 0) == 0 && !service.this.clearedTts) {\n                if (!service.mTtsReady) {\n                    service.this.mTts = new TextToSpeech(service.application, service.this.listenerStarted);\n                }\n                HashMap&lt;String, String> myHash2 = new HashMap&lt;>();\n                myHash2.put(\"utteranceId\", service.FIX_STREAM);\n                service.am2.requestAudioFocus(service.this, 3, 2);\n                myHash2.put(\"streamType\", String.valueOf(3));\n                if (service.mTtsReady) {\n                }\n                service.am2.abandonAudioFocus(service.this);\n                service.am2.setMode(0);\n                if (service.this.musicWasPlaying) {\n                    new CountDownTimer(1000, 6000) {\n                        /* class a2dp.Vol.service.AnonymousClass16.AnonymousClass1 */\n                        public void onFinish() {\n                            Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                            i.putExtra(\"command\", \"play\");\n                            service.this.sendBroadcast(i);\n                        }\n                        public void onTick(long millisUntilFinished) {\n                            Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                            downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, TransportMediator.KEYCODE_MEDIA_PLAY));\n                            service.this.sendOrderedBroadcast(downIntent2, null);\n                        }\n                    }.start();\n                }\n                service.this.clearedTts = true;\n            }\n        }\n    };\n    private boolean speakerPhoneWasOn = true;\n    private TelephonyManager tm;\n    private final BroadcastReceiver tmessage = new BroadcastReceiver() {\n        /* class a2dp.Vol.service.AnonymousClass1 */\n        public void onReceive(Context context, Intent intent) {\n            service.this.TextReader(intent.getStringExtra(\"message\"));\n        }\n    };\n    boolean tmessageRegistered = false;\n    private boolean toasts = true;\n    public UtteranceProgressListener ul = new UtteranceProgressListener() {\n        /* class a2dp.Vol.service.AnonymousClass15 */\n        public void onDone(String uttId) {\n            int result = 0;\n            if (service.A2DP_Vol.equalsIgnoreCase(uttId)) {\n                switch (service.this.SMSstream) {\n                    case 0:\n                        result = service.am2.abandonAudioFocus(service.this);\n                        break;\n                    case 1:\n                        if (!service.this.clearedTts) {\n                            Intent c = new Intent();\n                            c.setAction(\"a2dp.vol.service.CLEAR\");\n                            service.application.sendBroadcast(c);\n                        }\n                        result = service.am2.abandonAudioFocus(service.this);\n                        break;\n                    case 2:\n                        if (!service.this.clearedTts) {\n                            Intent c2 = new Intent();\n                            c2.setAction(\"a2dp.vol.service.CLEAR\");\n                            service.application.sendBroadcast(c2);\n                        }\n                        result = service.am2.abandonAudioFocus(service.this);\n                        break;\n                }\n                if (result == 0) {\n                    service.am2.abandonAudioFocus(service.this);\n                }\n                service.am2.setMode(0);\n            }\n            if (service.FIX_STREAM.equalsIgnoreCase(uttId)) {\n                service.am2.abandonAudioFocus(service.this);\n            }\n            service.am2.setMode(0);\n        }\n        public void onError(String utteranceId) {\n        }\n        public void onStart(String utteranceId) {\n        }\n    };\n    private long vol_delay = 5000;\n    WifiManager wifiManager;\n    public int onStartCommand(Intent intent, int flags, int startId) {\n        this.tm = (TelephonyManager) getSystemService(\"phone\");\n        return 1;\n    }\n    public IBinder onBind(Intent arg0) {\n        return null;\n    }\n    public void onCreate() {\n        application = (MyApplication) getApplication();\n        try {\n            this.preferences = PreferenceManager.getDefaultSharedPreferences(application);\n            this.carMode = this.preferences.getBoolean(\"car_mode\", true);\n            this.homeDock = this.preferences.getBoolean(\"home_dock\", false);\n            this.headsetPlug = this.preferences.getBoolean(\"headset\", false);\n            this.power = this.preferences.getBoolean(\"power\", false);\n            this.toasts = this.preferences.getBoolean(\"toasts\", true);\n            this.enableSMS = this.preferences.getBoolean(\"enableTTS\", false);\n            this.enableGTalk = this.preferences.getBoolean(\"enableGTalk\", true);\n            notify_pref = this.preferences.getString(\"notify_pref\", \"always\");\n            hideVolUi = this.preferences.getBoolean(\"hideVolUi\", false);\n            this.MAX_TIME = Long.valueOf(this.preferences.getString(\"gpsTime\", \"15000\")).longValue();\n            this.MAX_ACC = Float.valueOf(this.preferences.getString(\"gpsDistance\", \"10\")).floatValue();\n            this.local = this.preferences.getBoolean(\"useLocalStorage\", false);\n            if (this.local) {\n                this.a2dpDir = getFilesDir().toString();\n            } else {\n                this.a2dpDir = Environment.getExternalStorageDirectory() + \"/A2DPVol\";\n            }\n            OldVol2 = Integer.valueOf(this.preferences.getInt(OLD_VOLUME, 10));\n            OldVol = Integer.valueOf(this.preferences.getInt(OLD_PH_VOL, 5));\n            Oldsilent = Integer.valueOf(this.preferences.getInt(\"oldsilent\", 10));\n        } catch (NumberFormatException e) {\n            this.MAX_ACC = 10.0f;\n            this.MAX_TIME = 15000;\n            Toast.makeText(this, \"prefs failed to load \", 1).show();\n            e.printStackTrace();\n            Log.e(LOG_TAG, \"prefs failed to load \" + e.getMessage());\n        }\n        registerRecievers();\n        am2 = (AudioManager) getSystemService(\"audio\");\n        this.DB = new DeviceDB(application);\n        this.wifiManager = (WifiManager) getBaseContext().getSystemService(\"wifi\");\n        this.locmanager = (LocationManager) getBaseContext().getSystemService(\"location\");\n        if (notify_pref.equalsIgnoreCase(\"always\") || notify_pref.equalsIgnoreCase(\"connected_only\")) {\n            this.notify = true;\n        } else {\n            this.notify = false;\n        }\n        if (this.notify) {\n            this.mNotificationManager = (NotificationManager) getSystemService(\"notification\");\n            Notification not = new Notification.Builder(application).setContentTitle(getResources().getString(R.string.app_name)).setContentIntent(PendingIntent.getActivity(this, 0, new Intent(this, main.class), 0)).setSmallIcon(R.drawable.ic_launcher).setContentText(getResources().getString(R.string.ServRunning)).setPriority(-2).build();\n            if (notify_pref.equalsIgnoreCase(\"always\")) {\n                this.mNotificationManager.notify(1, not);\n                startForeground(1, not);\n            }\n        }\n        run = true;\n        if (this.toasts) {\n            Toast.makeText(this, (int) R.string.ServiceStarted, 1).show();\n        }\n        Intent i = new Intent();\n        i.setAction(\"a2dp.vol.service.RUNNING\");\n        application.sendBroadcast(i);\n        this.tm = (TelephonyManager) getSystemService(\"phone\");\n        this.mPackageManager = getPackageManager();\n    }\n    private void registerRecievers() {\n        IntentFilter filter = new IntentFilter(\"android.bluetooth.device.action.ACL_CONNECTED\");\n        IntentFilter filter2 = new IntentFilter(\"android.bluetooth.device.action.ACL_DISCONNECTED\");\n        registerReceiver(this.btOFFReciever, new IntentFilter(\"android.bluetooth.adapter.action.STATE_CHANGED\"));\n        registerReceiver(this.messageClear, new IntentFilter(\"a2dp.vol.service.CLEAR\"));\n        if (this.carMode) {\n            filter2.addAction(UiModeManager.ACTION_EXIT_CAR_MODE);\n            filter.addAction(UiModeManager.ACTION_ENTER_CAR_MODE);\n        }\n        if (this.homeDock) {\n            filter2.addAction(UiModeManager.ACTION_EXIT_DESK_MODE);\n            filter.addAction(UiModeManager.ACTION_ENTER_DESK_MODE);\n        }\n        if (this.power) {\n            filter2.addAction(\"android.intent.action.ACTION_POWER_DISCONNECTED\");\n            filter.addAction(\"android.intent.action.ACTION_POWER_CONNECTED\");\n        }\n        if (this.headsetPlug) {\n            registerReceiver(this.headSetReceiver, new IntentFilter(\"android.intent.action.HEADSET_PLUG\"));\n        }\n        registerReceiver(this.mReceiver, filter);\n        registerReceiver(this.mReceiver2, filter2);\n    }\n    public void onDestroy() {\n        run = false;\n        stopService(new Intent(application, StoreLoc.class));\n        try {\n            unregisterReceiver(this.mReceiver);\n            unregisterReceiver(this.mReceiver2);\n            unregisterReceiver(this.btOFFReciever);\n            if (this.headsetPlug) {\n                unregisterReceiver(this.headSetReceiver);\n            }\n            if (mTtsReady) {\n                try {\n                    if (!this.clearedTts) {\n                        clearTts();\n                    }\n                    this.mTts.shutdown();\n                    mTtsReady = false;\n                    unregisterReceiver(this.SMScatcher);\n                    unregisterReceiver(this.sco_change);\n                    unregisterReceiver(this.tmessage);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n            }\n            this.DB.getDb().close();\n            unregisterReceiver(this.messageClear);\n        } catch (Exception e2) {\n            e2.printStackTrace();\n        }\n        Intent i = new Intent();\n        i.setAction(\"a2dp.vol.service.STOPPED_RUNNING\");\n        application.sendBroadcast(i);\n        if (this.toasts) {\n            Toast.makeText(this, (int) R.string.ServiceStopped, 1).show();\n        }\n        if (mIsBound) {\n        }\n        stopForeground(true);\n    }\n    public void onStart() {\n        run = true;\n        this.connecting = false;\n        this.disconnecting = false;\n        if (this.notify) {\n            updateNot(false, null);\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void DoConnected(btDevice bt2) {\n        boolean done = false;\n        int l = 0;\n        for (int k = 0; k &lt; btdConn.length; k++) {\n            if (btdConn[k] != null && bt2.getMac().equalsIgnoreCase(btdConn[k].getMac())) {\n                l = k;\n                done = true;\n            }\n        }\n        if (!done) {\n            do {\n                if (btdConn[l] == null) {\n                    btdConn[l] = bt2;\n                    done = true;\n                }\n                l++;\n                if (l &gt;= btdConn.length) {\n                    done = true;\n                    continue;\n                }\n            } while (!done);\n        }\n        getConnects();\n        if (connects.intValue() &lt;= 1) {\n            getOldvol();\n            getOldPvol();\n            this.oldwifistate = this.wifiManager.isWifiEnabled();\n            this.oldgpsstate = this.locmanager.isProviderEnabled(\"gps\");\n        }\n        this.connectedIcon = bt2.getIcon();\n        this.SMSstream = bt2.getSmsstream();\n        this.vol_delay = (long) (bt2.getVoldelay() * 1000);\n        this.SMS_delay = (long) (bt2.getSmsdelay() * 1000);\n        ramp_vol = bt2.isVolramp();\n        if (bt2.wifi) {\n            try {\n                this.oldwifistate = this.wifiManager.isWifiEnabled();\n                dowifi(false);\n            } catch (Exception e) {\n                e.printStackTrace();\n                Log.e(LOG_TAG, \"Error \" + e.getMessage());\n            }\n        }\n        if (bt2.getBdevice() != null && bt2.getBdevice().length() == 17) {\n            DeviceToConnect = bt2.getBdevice();\n            getIBluetoothA2dp(application);\n        }\n        if (this.notify) {\n            updateNot(true, bt2.toString());\n        }\n        if (this.toasts) {\n            Toast.makeText(application, bt2.toString(), 1).show();\n        }\n        if (bt2.hasIntent()) {\n            if (this.tm == null) {\n                runApp(bt2);\n            } else if (this.tm.getCallState() == 0) {\n                runApp(bt2);\n            }\n        }\n        if (this.enableGTalk && bt2.isEnableTTS()) {\n            this.mTts = new TextToSpeech(application, this.listenerStarted);\n            application.registerReceiver(this.tmessage, new IntentFilter(\"a2dp.vol.service.MESSAGE\"));\n            this.tmessageRegistered = true;\n            registerReceiver(this.sco_change, new IntentFilter(\"android.media.ACTION_SCO_AUDIO_STATE_UPDATED\"));\n            talk = true;\n        }\n        if (bt2.isEnableTTS() && this.enableSMS) {\n            application.registerReceiver(this.SMScatcher, new IntentFilter(\"android.provider.Telephony.SMS_RECEIVED\"));\n        }\n        Intent itent = new Intent();\n        itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n        itent.putExtra(\"connect\", bt2.getMac());\n        application.sendBroadcast(itent);\n        this.connecting = false;\n        application.sendBroadcast(new Intent(\"a2dp.Vol.Clear\"));\n        if (bt2.isSetpv()) {\n            final int vol1 = bt2.getPhonev();\n            new CountDownTimer(this.vol_delay + 500, this.vol_delay + 500) {\n                /* class a2dp.Vol.service.AnonymousClass6 */\n                public void onFinish() {\n                    service.setPVolume(vol1);\n                }\n                public void onTick(long arg0) {\n                }\n            }.start();\n        }\n        if (bt2.isSilent()) {\n            am2.setStreamVolume(5, 0, 0);\n        }\n        if (bt2.isSetV()) {\n            final int vol = bt2.getDefVol();\n            new CountDownTimer(this.vol_delay, this.vol_delay) {\n                /* class a2dp.Vol.service.AnonymousClass7 */\n                public void onFinish() {\n                    service.setVolume(vol, service.application);\n                }\n                public void onTick(long arg0) {\n                }\n            }.start();\n        }\n        if (bt2.isCarmode()) {\n            set_car_mode(true);\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void DoDisconnected(btDevice bt2) {\n        BluetoothAdapter mBTA;\n        int SavVol = am2.getStreamVolume(3);\n        if (bt2.hasIntent()) {\n            if (am2.isMusicActive()) {\n                Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                i.putExtra(\"command\", \"pause\");\n                sendBroadcast(i);\n                Intent j = new Intent(\"android.intent.action.HEADSET_PLUG\");\n                j.putExtra(\"state\", 0);\n                try {\n                    sendBroadcast(j);\n                } catch (Exception e) {\n                    e.printStackTrace();\n                }\n                Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, 86));\n                sendOrderedBroadcast(downIntent2, null);\n            }\n            if (bt2.getPname().length() &gt; 3 && bt2.isAppkill()) {\n                Intent startMain = new Intent(\"android.intent.action.MAIN\");\n                startMain.addCategory(\"android.intent.category.HOME\");\n                startMain.setFlags(268435456);\n                startActivity(startMain);\n                final String kpackage = bt2.getPname();\n                new CountDownTimer(3000, 3000) {\n                    /* class a2dp.Vol.service.AnonymousClass9 */\n                    public void onFinish() {\n                        if (service.am2.isMusicActive()) {\n                            Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                            i.putExtra(\"command\", \"pause\");\n                            service.this.sendBroadcast(i);\n                            Intent j = new Intent(\"android.intent.action.HEADSET_PLUG\");\n                            j.putExtra(\"state\", 0);\n                            try {\n                                service.this.sendBroadcast(j);\n                            } catch (Exception e) {\n                                e.printStackTrace();\n                            }\n                            Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                            downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, 86));\n                            service.this.sendOrderedBroadcast(downIntent2, null);\n                        }\n                        try {\n                            service.this.stopApp(kpackage);\n                        } catch (Exception e2) {\n                            e2.printStackTrace();\n                            Log.e(service.LOG_TAG, \"Error \" + e2.getMessage());\n                        }\n                    }\n                    public void onTick(long arg0) {\n                        if (service.am2.isMusicActive()) {\n                            Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                            i.putExtra(\"command\", \"pause\");\n                            service.this.sendBroadcast(i);\n                            Intent downIntent2 = new Intent(\"android.intent.action.MEDIA_BUTTON\", (Uri) null);\n                            downIntent2.putExtra(\"android.intent.extra.KEY_EVENT\", new KeyEvent(0, 86));\n                            service.this.sendOrderedBroadcast(downIntent2, null);\n                        }\n                        try {\n                            service.this.stopApp(kpackage);\n                        } catch (Exception e) {\n                            e.printStackTrace();\n                            Log.e(service.LOG_TAG, \"Error \" + e.getMessage());\n                        }\n                    }\n                }.start();\n            }\n        }\n        if (bt2 != null && bt2.isGetLoc()) {\n            Intent dolock = new Intent(this, StoreLoc.class);\n            dolock.putExtra(\"device\", bt2.getMac());\n            try {\n                startService(dolock);\n            } catch (Exception e2) {\n                e2.printStackTrace();\n            }\n        }\n        if (bt2.wifi) {\n            dowifi(this.oldwifistate);\n        }\n        for (int k = 0; k &lt; btdConn.length; k++) {\n            if (btdConn[k] != null && bt2.getMac().equalsIgnoreCase(btdConn[k].getMac())) {\n                btdConn[k] = null;\n            }\n        }\n        getConnects();\n        if (((bt2 != null && bt2.isSetV()) || bt2 == null) && !mvolsLeft) {\n            setVolume(OldVol2.intValue(), application);\n        }\n        if (((bt2 != null && bt2.isSetpv()) || bt2 == null) && !pvolsLeft) {\n            setPVolume(OldVol.intValue());\n        }\n        if (this.notify && bt2.mac != null) {\n            updateNot(false, null);\n        }\n        if (mTtsReady && (bt2.isEnableTTS() || this.enableGTalk || connects.intValue() &lt; 1)) {\n            try {\n                if (!this.clearedTts) {\n                    clearTts();\n                }\n                this.mTts.shutdown();\n                mTtsReady = false;\n                if (this.enableGTalk) {\n                    unregisterReceiver(this.sco_change);\n                    talk = false;\n                }\n                if (this.enableSMS) {\n                    application.unregisterReceiver(this.SMScatcher);\n                }\n            } catch (Exception e3) {\n                e3.printStackTrace();\n            }\n        }\n        if (this.tmessageRegistered) {\n            try {\n                application.unregisterReceiver(this.tmessage);\n                this.tmessageRegistered = false;\n            } catch (Exception e4) {\n                e4.printStackTrace();\n            }\n        }\n        if (bt2.isSilent()) {\n            am2.setStreamVolume(5, Oldsilent.intValue(), 0);\n        }\n        if (!(bt2.getBdevice() == null || bt2.getBdevice().length() != 17 || (mBTA = BluetoothAdapter.getDefaultAdapter()) == null)) {\n            if (mBTA.isEnabled() && this.bluetoothWasOff) {\n                mBTA.disable();\n            }\n            doUnbind(application);\n        }\n        if (bt2.isAutovol()) {\n            bt2.setDefVol(SavVol);\n            this.DB.update(bt2);\n        }\n        if (bt2.isCarmode()) {\n            set_car_mode(false);\n        }\n        Intent itent = new Intent();\n        itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n        itent.putExtra(\"disconnect\", bt2.getMac());\n        application.sendBroadcast(itent);\n        this.disconnecting = false;\n    }\n    public static void setVolume(final int inputVol, Context sender) {\n        int ui;\n        int curvol = am2.getStreamVolume(3);\n        if (inputVol &lt; 0) {\n            inputVol = 0;\n        }\n        if (inputVol &gt; am2.getStreamMaxVolume(3)) {\n            inputVol = am2.getStreamMaxVolume(3);\n        }\n        if (!ramp_vol || inputVol &lt;= curvol) {\n            if (hideVolUi) {\n                ui = 0;\n            } else {\n                ui = 1;\n            }\n            am2.setStreamVolume(3, inputVol, ui);\n            return;\n        }\n        new CountDownTimer((long) ((inputVol - curvol) * 1000), 1000) {\n            /* class a2dp.Vol.service.AnonymousClass10 */\n            public void onFinish() {\n                int ui;\n                if (service.hideVolUi) {\n                    ui = 0;\n                } else {\n                    ui = 1;\n                }\n                service.am2.setStreamVolume(3, inputVol, ui);\n            }\n            public void onTick(long millisUntilFinished) {\n                int ui;\n                if (service.hideVolUi) {\n                    ui = 0;\n                } else {\n                    ui = 1;\n                }\n                int cvol = service.am2.getStreamVolume(3);\n                int newvol = cvol;\n                if (cvol + 1 &lt; inputVol) {\n                    newvol++;\n                }\n                service.am2.setStreamVolume(3, newvol, ui);\n            }\n        }.start();\n    }\n    private void getOldvol() {\n        OldVol2 = Integer.valueOf(am2.getStreamVolume(3));\n        SharedPreferences.Editor editor = this.preferences.edit();\n        editor.putInt(OLD_VOLUME, OldVol2.intValue());\n        editor.commit();\n    }\n    private void getOldPvol() {\n        OldVol = Integer.valueOf(am2.getStreamVolume(0));\n        Oldsilent = Integer.valueOf(am2.getStreamVolume(5));\n        SharedPreferences.Editor editor = this.preferences.edit();\n        editor.putInt(OLD_PH_VOL, OldVol.intValue());\n        editor.putInt(\"oldsilent\", Oldsilent.intValue());\n        editor.commit();\n    }\n    public static int setPVolume(int inputVol) {\n        if (inputVol &lt; 0) {\n            inputVol = 0;\n        }\n        if (inputVol &gt; am2.getStreamMaxVolume(0)) {\n            inputVol = am2.getStreamMaxVolume(0);\n        }\n        if (hideVolUi) {\n            am2.setStreamVolume(0, inputVol, 1);\n        } else {\n            am2.setStreamVolume(0, inputVol, 0);\n        }\n        return am2.getStreamVolume(0);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void updateNot(boolean connect, String car) {\n        String temp;\n        if (car != null) {\n            temp = getResources().getString(R.string.connectedTo) + \" \" + car;\n        } else if (connects.intValue() &gt; 0) {\n            String tmp = null;\n            for (int k = 0; k &lt; btdConn.length; k++) {\n                if (btdConn[k] != null) {\n                    tmp = btdConn[k].toString();\n                }\n            }\n            temp = getResources().getString(R.string.connectedTo) + \" \" + tmp;\n            connect = true;\n        } else {\n            temp = getResources().getString(R.string.ServRunning);\n        }\n        if (connect) {\n            this.mNotificationManager.notify(1, new NotificationCompat.Builder(application).setContentTitle(getResources().getString(R.string.app_name)).setContentIntent(PendingIntent.getActivity(this, 0, new Intent(this, main.class), 0)).setSmallIcon(this.connectedIcon).setContentText(temp).setPriority(-2).build());\n            return;\n        }\n        this.mNotificationManager.cancel(1);\n        if (notify_pref.equalsIgnoreCase(\"always\")) {\n            this.mNotificationManager.notify(1, new Notification.Builder(application).setContentTitle(getResources().getString(R.string.app_name)).setContentIntent(PendingIntent.getActivity(this, 0, new Intent(this, main.class), 0)).setSmallIcon(R.drawable.ic_launcher).setContentText(temp).setPriority(-2).build());\n        }\n    }\n    private boolean runApp(btDevice bt) {\n        Intent i;\n        String pname = bt.getPname();\n        String cAction = bt.getAppaction();\n        String cData = bt.getAppdata();\n        String cType = bt.getApptype();\n        if (bt.isApprestart() && pname != null && pname.length() &gt; 3) {\n            try {\n                ((ActivityManager) getSystemService(\"activity\")).killBackgroundProcesses(pname);\n            } catch (Exception e) {\n                e.printStackTrace();\n            }\n        }\n        if (pname == null || pname.equals(\"\")) {\n            return false;\n        }\n        if (cData.length() &gt; 1) {\n            try {\n                i = Intent.getIntent(cData);\n            } catch (URISyntaxException e2) {\n                e2.printStackTrace();\n                return false;\n            }\n        } else if (!cAction.equals(\"\")) {\n            i = new Intent();\n            i.setAction(cAction);\n            if (!cData.equals(\"\")) {\n                i.setData(Uri.parse(cData));\n            }\n            if (!cType.equals(\"\")) {\n                i.setType(cType);\n            }\n        } else {\n            try {\n                i = this.mPackageManager.getLaunchIntentForPackage(pname);\n            } catch (Exception e3) {\n                e3.printStackTrace();\n                return false;\n            }\n        }\n        try {\n            i.setFlags(268435456);\n        } catch (Exception e1) {\n            e1.printStackTrace();\n        }\n        try {\n            startActivity(i);\n            return true;\n        } catch (Exception e4) {\n            Toast t = Toast.makeText(getApplicationContext(), (int) R.string.app_not_found, 0);\n            if (this.notify) {\n                t.show();\n            }\n            e4.printStackTrace();\n            return false;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void stopApp(String packageName) {\n        if (getPackageManager().getLaunchIntentForPackage(packageName) != null) {\n            try {\n                ActivityManager act1 = (ActivityManager) getSystemService(\"activity\");\n                act1.killBackgroundProcesses(packageName);\n                for (ActivityManager.RunningAppProcessInfo info : act1.getRunningAppProcesses()) {\n                    for (int i = 0; i &lt; info.pkgList.length; i++) {\n                        if (info.pkgList[i].contains(packageName)) {\n                            Process.killProcess(info.pid);\n                        }\n                    }\n                }\n            } catch (ActivityNotFoundException err) {\n                err.printStackTrace();\n                Toast t = Toast.makeText(getApplicationContext(), (int) R.string.app_not_found, 0);\n                if (this.notify) {\n                    t.show();\n                }\n            }\n        }\n    }\n    public void getIBluetoothA2dp(Context context) {\n        Intent i = new Intent(IBluetoothA2dp.class.getName());\n        i.setPackage(getPackageManager().resolveService(i, 64).serviceInfo.packageName);\n        if (!context.bindService(i, mConnection, 1)) {\n            Toast.makeText(context, \"start service connection failed\", 0).show();\n        }\n    }\n    static void doUnbind(Context context) {\n        if (mIsBound) {\n            context.unbindService(mConnection);\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void dowifi(boolean s) {\n        try {\n            this.wifiManager.setWifiEnabled(s);\n        } catch (Exception e) {\n            Toast.makeText(application, \"Unable to switch wifi: \" + e.toString(), 1).show();\n            e.printStackTrace();\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void getConnects() {\n        connects = 0;\n        mvolsLeft = false;\n        pvolsLeft = false;\n        for (int i = 0; i &lt; btdConn.length; i++) {\n            if (btdConn[i] != null) {\n                Integer num = connects;\n                connects = Integer.valueOf(connects.intValue() + 1);\n                if (btdConn[i].isSetV()) {\n                    mvolsLeft = true;\n                }\n                if (btdConn[i].isSetpv()) {\n                    pvolsLeft = true;\n                }\n            }\n        }\n    }\n    public void TextReader(String rawinput) {\n        if (mTtsReady) {\n            this.myHash = new HashMap&lt;>();\n            if (rawinput == null) {\n                Toast.makeText(application, \"No input\", 1).show();\n                return;\n            }\n            final String input = rawinput.replaceAll(\"http.*? \", \", URL, \");\n            this.myHash.put(\"utteranceId\", A2DP_Vol);\n            if (input.length() &gt; this.MAX_MESSAGE_LENGTH) {\n                input = input.substring(0, this.MAX_MESSAGE_LENGTH) + \" , , , message truncated\";\n            }\n            this.musicWasPlaying = am2.isMusicActive();\n            switch (this.SMSstream) {\n                case 0:\n                    am2.requestAudioFocus(this, 3, 2);\n                    this.myHash.put(\"streamType\", String.valueOf(3));\n                    this.clearedTts = false;\n                    break;\n                case 1:\n                    if (am2.isBluetoothScoAvailableOffCall()) {\n                        am2.startBluetoothSco();\n                    }\n                    if (this.musicWasPlaying) {\n                        Intent i = new Intent(\"com.android.music.musicservicecommand\");\n                        i.putExtra(\"command\", \"pause\");\n                        sendBroadcast(i);\n                    }\n                    am2.requestAudioFocus(this, 0, 1);\n                    this.myHash.put(\"streamType\", String.valueOf(0));\n                    this.clearedTts = false;\n                    break;\n                case 2:\n                    am2.requestAudioFocus(this, 4, 2);\n                    this.myHash.put(\"streamType\", String.valueOf(4));\n                    this.clearedTts = false;\n                    break;\n            }\n            if (this.toasts) {\n                Toast.makeText(application, input, 1).show();\n            }\n            if (this.tm.getCallState() == 0) {\n                new CountDownTimer(this.SMS_delay, this.SMS_delay / 2) {\n                    /* class a2dp.Vol.service.AnonymousClass13 */\n                    public void onFinish() {\n                        try {\n                            service.this.mTts.speak(input, 1, service.this.myHash);\n                        } catch (Exception e) {\n                            Toast.makeText(service.application, (int) R.string.TTSNotReady, 1).show();\n                            e.printStackTrace();\n                        }\n                    }\n                    public void onTick(long arg0) {\n                    }\n                }.start();\n            }\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void clearTts() {\n        if (am2.isBluetoothScoAvailableOffCall()) {\n            am2.stopBluetoothSco();\n        }\n    }\n    public void onAudioFocusChange(int focusChange) {\n        switch (focusChange) {\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private String GetName(String number) {\n        if (ContextCompat.checkSelfPermission(application, \"android.permission.READ_CONTACTS\") == 0) {\n            this.permReadContacts = true;\n        } else {\n            this.permReadContacts = false;\n        }\n        if (this.permReadContacts.booleanValue()) {\n            Cursor c = getContentResolver().query(Uri.withAppendedPath(ContactsContract.PhoneLookup.CONTENT_FILTER_URI, Uri.encode(number)), new String[]{\"display_name\"}, null, null, null);\n            if (c.moveToFirst()) {\n                return c.getString(c.getColumnIndex(\"display_name\"));\n            }\n        }\n        return number;\n    }\n    private void set_car_mode(boolean mode) {\n        try {\n            UiModeManager mm = (UiModeManager) getSystemService(\"uimode\");\n            if (mode) {\n                mm.enableCarMode(1);\n            } else {\n                mm.disableCarMode(0);\n            }\n        } catch (Exception e) {\n            Toast.makeText(this, e.getMessage(), 1).show();\n            e.printStackTrace();\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.service.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.StoreLoc"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][421,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Custom Intent...\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,725]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,328]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,211][263,315]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Action:\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[263,210][1080,328]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ci_et_action\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,328][1080,331]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t<node bounds=\"[0,331][1080,449]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,332][263,436]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Data:\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[263,331][1080,449]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ci_et_data\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,449][1080,452]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t<node bounds=\"[0,452][1080,570]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,453][263,557]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Type:\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[263,452][1080,570]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ci_et_type\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,570][1080,573]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t<node bounds=\"[0,573][1080,725]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[135,586][398,712]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"false\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ci_btn_ok\" scrollable=\"false\" selected=\"false\" text=\"OK\" />\n\t\t\t\t\t\t<node bounds=\"[424,586][655,712]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ci_btn_test\" scrollable=\"false\" selected=\"false\" text=\"TEST\" />\n\t\t\t\t\t\t<node bounds=\"[681,586][944,712]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/ci_btn_cancel\" scrollable=\"false\" selected=\"false\" text=\"CANCEL\" />\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.EditDevice", 
    "methodSourceLink": [], 
    "target": "CustomIntentMaker", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.CustomIntentMaker.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][369,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ScrollView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/scrollView1\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/tableLayout1\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,210][1080,261]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView2\" scrollable=\"false\" selected=\"false\" text=\"Enter a name for this device\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,261][1080,379]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editDesc2\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,379][1080,463]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkCaptLoc\" scrollable=\"false\" selected=\"false\" text=\"Capture location on disconnect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,463][1080,547]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkwifi\" scrollable=\"false\" selected=\"false\" text=\"Disconnect WIFI when bluetooth connects?\" />\n\t\t\t\t\t\t<node bounds=\"[0,547][1080,631]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/silentBox\" scrollable=\"false\" selected=\"false\" text=\"Silence notifications while connected?\" />\n\t\t\t\t\t\t<node bounds=\"[0,631][1080,715]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/enableTTSBox\" scrollable=\"false\" selected=\"false\" text=\"Enable Reading Text Messages?\" />\n\t\t\t\t\t\t<node bounds=\"[0,715][1080,799]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetVol\" scrollable=\"false\" selected=\"false\" text=\"Set media volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,799][1080,883]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"7\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetpv\" scrollable=\"false\" selected=\"false\" text=\"Set in-call phone volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,930][1080,1056]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"8\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseAppButton\" scrollable=\"false\" selected=\"false\" text=\"START APP ON CONNECT\" />\n\t\t\t\t\t\t<node bounds=\"[0,1056][1080,1140]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"9\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBoxLaunchCar\" scrollable=\"false\" selected=\"false\" text=\"Launch Car Mode\" />\n\t\t\t\t\t\t<node bounds=\"[0,1169][1080,1295]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"10\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseBTbutton\" scrollable=\"false\" selected=\"false\" text=\"ALSO CONNECT TO BLUETOOTH DEVICE\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,1295][1080,1413]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"11\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editBtConnect\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,1442][1080,1493]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"12\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView4\" scrollable=\"false\" selected=\"false\" text=\"Connected Icon\" />\n\t\t\t\t\t\t<node bounds=\"[0,1546][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RadioGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"13\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/radioGroupIcon\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[105,1546][378,1735]\" checkable=\"true\" checked=\"true\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio0\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[699,1735][975,1794]\" checkable=\"true\" checked=\"false\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class CustomIntentMaker extends Activity {\n    private Button mBtnCancel;\n    private View.OnClickListener mBtnCancelOnClick = new View.OnClickListener() {\n        /* class a2dp.Vol.CustomIntentMaker.AnonymousClass2 */\n        public void onClick(View v) {\n            CustomIntentMaker.this.setResult(0);\n            CustomIntentMaker.this.finish();\n        }\n    };\n    private Button mBtnOk;\n    private View.OnClickListener mBtnOkOnClick = new View.OnClickListener() {\n        /* class a2dp.Vol.CustomIntentMaker.AnonymousClass1 */\n        public void onClick(View v) {\n            CustomIntentMaker.this.setResult(-1, new Intent());\n            CustomIntentMaker.this.finish();\n        }\n    };\n    private Button mBtnTest;\n    private View.OnClickListener mBtnTestOnClick = new View.OnClickListener() {\n        /* class a2dp.Vol.CustomIntentMaker.AnonymousClass3 */\n        public void onClick(View v) {\n            Intent i;\n            String action = CustomIntentMaker.this.mEtAction.getText().toString();\n            String data = CustomIntentMaker.this.mEtData.getText().toString();\n            String type = CustomIntentMaker.this.mEtType.getText().toString();\n            if (action.length() &gt;= 3 || data.length() &gt;= 3 || type.length() &gt;= 3) {\n                if (CustomIntentMaker.isShortcutIntent(data)) {\n                    try {\n                        i = Intent.getIntent(data);\n                    } catch (URISyntaxException e) {\n                        i = new Intent();\n                        e.printStackTrace();\n                    }\n                } else {\n                    i = new Intent();\n                    if (action != null && !action.equals(\"\")) {\n                        i.setAction(action);\n                    }\n                    if (!data.equals(\"\")) {\n                        try {\n                            i.setData(Uri.parse(data));\n                        } catch (Exception e2) {\n                            e2.printStackTrace();\n                            return;\n                        }\n                    }\n                    if (!type.equals(\"\")) {\n                        i.setType(type);\n                    }\n                }\n                if (\"android.intent.action.CALL\".equals(i.getAction())) {\n                    AudioManager am = (AudioManager) CustomIntentMaker.this.getBaseContext().getSystemService(\"audio\");\n                    am.setMode(2);\n                    am.setSpeakerphoneOn(true);\n                    am.setStreamVolume(0, am.getStreamMaxVolume(0), 1);\n                }\n                try {\n                    CustomIntentMaker.this.startActivity(i);\n                    CustomIntentMaker.this.mBtnOk.setEnabled(true);\n                } catch (Exception e3) {\n                    e3.printStackTrace();\n                }\n            }\n        }\n    };\n    private EditText mEtAction;\n    private EditText mEtData;\n    private EditText mEtType;\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.custom_intent);\n        setTitle(\"Custom Intent...\");\n        initViews();\n        assignListeners();\n        this.mBtnOk.setEnabled(false);\n    }\n    private void initViews() {\n        this.mEtAction = (EditText) findViewById(R.id.ci_et_action);\n        this.mEtData = (EditText) findViewById(R.id.ci_et_data);\n        this.mEtType = (EditText) findViewById(R.id.ci_et_type);\n        this.mBtnOk = (Button) findViewById(R.id.ci_btn_ok);\n        this.mBtnCancel = (Button) findViewById(R.id.ci_btn_cancel);\n        this.mBtnTest = (Button) findViewById(R.id.ci_btn_test);\n    }\n    private void assignListeners() {\n        this.mBtnOk.setOnClickListener(this.mBtnOkOnClick);\n        this.mBtnCancel.setOnClickListener(this.mBtnCancelOnClick);\n        this.mBtnTest.setOnClickListener(this.mBtnTestOnClick);\n    }\n    public static boolean isShortcutIntent(String data) {\n        String lcase = data.toLowerCase();\n        return lcase.startsWith(\"intent:\") || lcase.contains(\"#intent\");\n    }\n}\n", 
    "source": "EditDevice", 
    "source_actcode": "public class EditDevice extends Activity {\n    private static final int ACTION_ADD_PACKAGE = 17;\n    private static final int ACTION_CHOOSE_APP = 2;\n    private static final int ACTION_CHOOSE_APP_CUSTOM = 16;\n    private static final int ACTION_CHOOSE_FROM_PROVIDER = 11;\n    private static final int ACTION_CREATE_HOME_SCREEN_SHORTCUT = 14;\n    private static final int ACTION_CUSTOM_INTENT = 6;\n    private static final int ALARM_STREAM = 2;\n    private static final String[] APP_TYPE_OPTIONS = {\"Choose App\", \"Create Shortcut\", \"Home Screen Shortcut\", \"Pandora Radio Station\", \"Custom Intent\", \"Clear App Selection\"};\n    private static final int DIALOG_BITLY = 6;\n    private static final int DIALOG_PICK_APP_TYPE = 3;\n    private static final int DIALOG_WARN_STOP_APP = 5;\n    private static final int FETCH_HOME_SCREEN_SHORTCUT = 15;\n    private static final int IN_CALL_STREAM = 1;\n    private static final int MUSIC_STREAM = 0;\n    private boolean TTsEnabled;\n    private String appaction;\n    private String appdata;\n    private boolean appkill;\n    private MyApplication application;\n    private boolean apprestart;\n    private String apptype;\n    public String btd;\n    private Button cb;\n    private Button connbt;\n    private btDevice device;\n    private boolean enablegps;\n    private EditText fapp;\n    private CheckBox fappkill;\n    private CheckBox fapprestart;\n    private CheckBox fautoVol;\n    private EditText fbt;\n    private CheckBox fcarmodeBox;\n    private EditText fdesc2;\n    private CheckBox fenableGPS;\n    private CheckBox fenableTTS;\n    private CheckBox fgloc;\n    private SeekBar fphonev;\n    private CheckBox frampVol;\n    private CheckBox fsetpv;\n    private CheckBox fsetvol;\n    private CheckBox fsilent;\n    private CheckBox fsleepBox;\n    private SeekBar fsmsdelaybar;\n    private TextView fsmsdelaybox;\n    private SeekBar fvol;\n    private SeekBar fvoldelaybar;\n    private TextView fvoldelaybox;\n    private CheckBox fwifi;\n    private RadioGroup icongroup;\n    private RadioButton iconradio0;\n    private RadioButton iconradio1;\n    private RadioButton iconradio2;\n    private RadioButton iconradio3;\n    private RadioButton iconradio4;\n    private LinearLayout l1;\n    private LinearLayout l2;\n    private DialogInterface.OnClickListener mAppTypeDialogOnClick = new DialogInterface.OnClickListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass11 */\n        public void onClick(DialogInterface dialog, int which) {\n            switch (which) {\n                case 0:\n                    EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 2);\n                    return;\n                case 1:\n                    Intent i = new Intent(\"android.intent.action.PICK_ACTIVITY\");\n                    i.putExtra(\"android.intent.extra.INTENT\", new Intent(\"android.intent.action.CREATE_SHORTCUT\"));\n                    i.putExtra(\"android.intent.extra.TITLE\", \"Create a Shortcut\");\n                    EditDevice.this.startActivityForResult(i, 14);\n                    return;\n                case 2:\n                    Intent i2 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i2.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_HOMESCREEN);\n                    EditDevice.this.startActivityForResult(i2, 11);\n                    return;\n                case 3:\n                    Intent i3 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i3.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_PANDORA);\n                    EditDevice.this.startActivityForResult(i3, 11);\n                    return;\n                case 4:\n                    Intent i4 = new Intent(EditDevice.this.getBaseContext(), CustomIntentMaker.class);\n                    i4.putExtra(\"alarm_custom_action\", EditDevice.this.appaction);\n                    i4.putExtra(\"alarm_custom_data\", EditDevice.this.appdata);\n                    i4.putExtra(\"alarm_custom_type\", EditDevice.this.apptype);\n                    i4.putExtra(\"alarm_package_name\", EditDevice.this.pname);\n                    EditDevice.this.startActivityForResult(i4, 6);\n                    return;\n                case 5:\n                    EditDevice.this.pname = \"\";\n                    EditDevice.this.appaction = \"\";\n                    EditDevice.this.appdata = \"\";\n                    EditDevice.this.apptype = \"\";\n                    EditDevice.this.vUpdateApp();\n                    return;\n                default:\n                    return;\n            }\n        }\n    };\n    private TextView mediadelay;\n    private DeviceDB myDB;\n    private String pname;\n    SharedPreferences preferences;\n    private Button sb;\n    SeekBar.OnSeekBarChangeListener smsdelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass9 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fsmsdelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    private Button startapp;\n    private RadioGroup streamgroup;\n    private RadioButton streamradio0;\n    private RadioButton streamradio1;\n    private RadioButton streamradio2;\n    private TextView ttsdelay;\n    private TextView tv2;\n    private TextView tvincallVol;\n    private TextView tvmediavol;\n    private TextView tvstream;\n    SeekBar.OnSeekBarChangeListener voldelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass10 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fvoldelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    public void onBackPressed() {\n        Save();\n        closedb();\n        finish();\n        super.onBackPressed();\n    }\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.edit_item);\n        this.application = (MyApplication) getApplication();\n        this.myDB = new DeviceDB(this.application);\n        AudioManager am = (AudioManager) getSystemService(\"audio\");\n        this.sb = (Button) findViewById(R.id.EditDevSavebutton);\n        this.cb = (Button) findViewById(R.id.EditDevCancelbutton);\n        this.startapp = (Button) findViewById(R.id.chooseAppButton);\n        this.connbt = (Button) findViewById(R.id.chooseBTbutton);\n        this.fdesc2 = (EditText) findViewById(R.id.editDesc2);\n        this.fgloc = (CheckBox) findViewById(R.id.checkCaptLoc);\n        this.fsetvol = (CheckBox) findViewById(R.id.checkSetVol);\n        this.fvol = (SeekBar) findViewById(R.id.seekBarVol);\n        this.fapp = (EditText) findViewById(R.id.editApp);\n        this.fapprestart = (CheckBox) findViewById(R.id.appRestartCheckbox);\n        this.fappkill = (CheckBox) findViewById(R.id.appKillCheckbox);\n        this.fbt = (EditText) findViewById(R.id.editBtConnect);\n        this.fwifi = (CheckBox) findViewById(R.id.checkwifi);\n        this.fenableTTS = (CheckBox) findViewById(R.id.enableTTSBox);\n        this.fsetpv = (CheckBox) findViewById(R.id.checkSetpv);\n        this.fsilent = (CheckBox) findViewById(R.id.silentBox);\n        this.fphonev = (SeekBar) findViewById(R.id.seekPhoneVol);\n        this.fsmsdelaybar = (SeekBar) findViewById(R.id.SMSdelayseekBar);\n        this.fsmsdelaybox = (TextView) findViewById(R.id.SMSdelaytextView);\n        this.fvoldelaybar = (SeekBar) findViewById(R.id.VolDelaySeekBar);\n        this.fvoldelaybox = (TextView) findViewById(R.id.VolDelayTextView);\n        this.tv2 = (TextView) findViewById(R.id.textView2);\n        this.frampVol = (CheckBox) findViewById(R.id.rampBox);\n        this.fautoVol = (CheckBox) findViewById(R.id.autoVolcheckBox);\n        this.icongroup = (RadioGroup) findViewById(R.id.radioGroupIcon);\n        this.iconradio0 = (RadioButton) findViewById(R.id.iconradio0);\n        this.iconradio1 = (RadioButton) findViewById(R.id.iconradio1);\n        this.iconradio2 = (RadioButton) findViewById(R.id.iconradio2);\n        this.iconradio3 = (RadioButton) findViewById(R.id.iconradio3);\n        this.iconradio4 = (RadioButton) findViewById(R.id.iconradio4);\n        this.streamgroup = (RadioGroup) findViewById(R.id.radioGroupStream);\n        this.streamradio0 = (RadioButton) findViewById(R.id.streamradio0);\n        this.streamradio1 = (RadioButton) findViewById(R.id.streamradio1);\n        this.streamradio2 = (RadioButton) findViewById(R.id.streamradio2);\n        this.l1 = (LinearLayout) findViewById(R.id.LinearLayout1);\n        this.l2 = (LinearLayout) findViewById(R.id.LinearLayout2);\n        this.ttsdelay = (TextView) findViewById(R.id.textViewTTSDelay);\n        this.mediadelay = (TextView) findViewById(R.id.textViewMediaDelay);\n        this.tvstream = (TextView) findViewById(R.id.textViewStream);\n        this.tvmediavol = (TextView) findViewById(R.id.textViewMediaVolume);\n        this.tvincallVol = (TextView) findViewById(R.id.textViewInCallVol);\n        this.fsleepBox = (CheckBox) findViewById(R.id.checkBoxSleep);\n        this.fcarmodeBox = (CheckBox) findViewById(R.id.checkBoxLaunchCar);\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        this.TTsEnabled = this.preferences.getBoolean(\"enableTTS\", false);\n        this.btd = getIntent().getStringExtra(\"btd\");\n        this.device = this.myDB.getBTD(this.btd);\n        this.fdesc2.setText(this.device.desc2);\n        this.fgloc.setChecked(this.device.isGetLoc());\n        this.fsetvol.setChecked(this.device.isSetV());\n        this.fvol.setMax(am.getStreamMaxVolume(3));\n        this.fvol.setProgress(this.device.defVol);\n        this.fapp.setText(this.device.getPname());\n        this.fbt.setText(this.device.getBdevice());\n        this.fwifi.setChecked(this.device.isWifi());\n        if (this.device == null) {\n            this.connbt.setEnabled(false);\n        }\n        this.pname = this.device.getPname();\n        this.appaction = this.device.getAppaction();\n        this.appdata = this.device.getAppdata();\n        this.apptype = this.device.getApptype();\n        this.apprestart = this.device.isApprestart();\n        this.appkill = this.device.isAppkill();\n        this.fapprestart.setChecked(this.apprestart);\n        this.fappkill.setChecked(this.appkill);\n        this.fenableTTS.setChecked(this.device.isEnableTTS());\n        this.fsetpv.setChecked(this.device.isSetpv());\n        this.fphonev.setMax(am.getStreamMaxVolume(0));\n        this.fphonev.setProgress(this.device.getPhonev());\n        this.fsmsdelaybar.setMax(20);\n        this.fsmsdelaybar.setOnSeekBarChangeListener(this.smsdelaySeekBarProgress);\n        this.fsmsdelaybox.setText(this.device.smsdelay + \"s\");\n        this.fsmsdelaybar.setProgress(this.device.getSmsdelay());\n        this.fvoldelaybar.setMax(20);\n        this.fvoldelaybar.setOnSeekBarChangeListener(this.voldelaySeekBarProgress);\n        this.fvoldelaybox.setText(this.device.voldelay + \"s\");\n        this.fvoldelaybar.setProgress(this.device.getVoldelay());\n        this.frampVol.setChecked(this.device.isVolramp());\n        this.fautoVol.setChecked(this.device.isAutovol());\n        this.fsilent.setChecked(this.device.isSilent());\n        this.fsleepBox.setChecked(this.device.isSleep());\n        this.fcarmodeBox.setChecked(this.device.isCarmode());\n        switch (this.device.getIcon()) {\n            case R.drawable.car2:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.headset:\n                this.iconradio1.setChecked(true);\n                break;\n            case R.drawable.ic_launcher:\n            default:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.icon5:\n                this.iconradio4.setChecked(true);\n                break;\n            case R.drawable.jack:\n                this.iconradio2.setChecked(true);\n                break;\n            case R.drawable.usb:\n                this.iconradio3.setChecked(true);\n                break;\n        }\n        switch (this.device.getSmsstream()) {\n            case 0:\n                this.streamradio0.setChecked(true);\n                break;\n            case 1:\n                this.streamradio1.setChecked(true);\n                break;\n            case 2:\n                this.streamradio2.setChecked(true);\n                break;\n            default:\n                this.streamradio0.setChecked(true);\n                break;\n        }\n        setTTSVisibility();\n        this.fenableTTS.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass1 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setTTSVisibility();\n            }\n        });\n        setMediaVisibility();\n        this.fsetvol.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass2 */\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                EditDevice.this.setMediaVisibility();\n            }\n        });\n        setInCallVisibility();\n        this.fsetpv.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass3 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setInCallVisibility();\n            }\n        });\n        setAppVisibility();\n        this.tv2.requestFocus();\n        vUpdateApp();\n        this.sb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass4 */\n            public void onClick(View v) {\n                EditDevice.this.Save();\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.cb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass5 */\n            public void onClick(View arg0) {\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.startapp.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass6 */\n            public boolean onLongClick(View arg0) {\n                PackageManager pm = EditDevice.this.getPackageManager();\n                List&lt;ApplicationInfo> packages = pm.getInstalledApplications(0);\n                String[] lstring = new String[packages.size()];\n                int i = 0;\n                for (int n = 0; n &lt; packages.size(); n++) {\n                    Intent itent = pm.getLaunchIntentForPackage(packages.get(n).packageName);\n                    if (packages.get(n).icon &gt; 0 && packages.get(n).enabled && itent != null) {\n                        lstring[i] = packages.get(n).packageName;\n                        i++;\n                    }\n                }\n                final String[] ls2 = new String[i];\n                for (int j = 0; j &lt; i; j++) {\n                    ls2[j] = lstring[j];\n                }\n                Arrays.sort(ls2);\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Pick a package\");\n                builder.setItems(ls2, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass6.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        EditDevice.this.fapp.setText(ls2[item]);\n                    }\n                });\n                builder.create().show();\n                return false;\n            }\n        });\n        this.startapp.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass7 */\n            public void onClick(View arg0) {\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(EditDevice.this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(EditDevice.APP_TYPE_OPTIONS, EditDevice.this.mAppTypeDialogOnClick);\n                adb2.create();\n                adb2.show();\n            }\n        });\n        this.connbt.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass8 */\n            public void onClick(View v) {\n                if (!EditDevice.this.myDB.getDb().isOpen() && !EditDevice.this.myDB.getDb().isDbLockedByCurrentThread()) {\n                    EditDevice.this.myDB = new DeviceDB(EditDevice.this.application);\n                }\n                final Vector&lt;btDevice> vec = EditDevice.this.myDB.selectAlldb();\n                int j = vec.size();\n                int i = 0;\n                while (i &lt; j) {\n                    if (vec.get(i).mac.length() &lt; 17) {\n                        vec.remove(i);\n                        j--;\n                        i--;\n                    }\n                    i++;\n                }\n                vec.trimToSize();\n                String[] lstring = new String[(vec.size() + 1)];\n                for (int i2 = 0; i2 &lt; vec.size(); i2++) {\n                    lstring[i2] = vec.get(i2).desc2;\n                }\n                lstring[vec.size()] = \"none\";\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Bluetooth Device\");\n                builder.setItems(lstring, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass8.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        if (item &lt; vec.size()) {\n                            EditDevice.this.fbt.setText(((btDevice) vec.get(item)).mac);\n                        } else {\n                            EditDevice.this.fbt.setText(\"\");\n                        }\n                    }\n                });\n                builder.create().show();\n            }\n        });\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setMediaVisibility() {\n        if (this.fsetvol.isChecked()) {\n            this.tvmediavol.setVisibility(0);\n            this.fvol.setVisibility(0);\n            this.fautoVol.setVisibility(0);\n            this.frampVol.setVisibility(0);\n            this.l2.setVisibility(0);\n            this.mediadelay.setVisibility(0);\n            return;\n        }\n        this.tvmediavol.setVisibility(8);\n        this.fvol.setVisibility(8);\n        this.fautoVol.setVisibility(8);\n        this.frampVol.setVisibility(8);\n        this.l2.setVisibility(8);\n        this.mediadelay.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setTTSVisibility() {\n        if (this.fenableTTS.isChecked()) {\n            this.l1.setVisibility(0);\n            this.ttsdelay.setVisibility(0);\n            this.tvstream.setVisibility(0);\n            this.streamgroup.setVisibility(0);\n            return;\n        }\n        this.l1.setVisibility(8);\n        this.ttsdelay.setVisibility(8);\n        this.tvstream.setVisibility(8);\n        this.streamgroup.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setInCallVisibility() {\n        if (this.fsetpv.isChecked()) {\n            this.tvincallVol.setVisibility(0);\n            this.fphonev.setVisibility(0);\n            return;\n        }\n        this.tvincallVol.setVisibility(8);\n        this.fphonev.setVisibility(8);\n    }\n    private void setAppVisibility() {\n        if (this.fapp.getText().length() &gt; 0) {\n            this.fapp.setVisibility(0);\n            this.fapprestart.setVisibility(0);\n            this.fappkill.setVisibility(0);\n            this.fsleepBox.setVisibility(8);\n            return;\n        }\n        this.fapp.setVisibility(8);\n        this.fapprestart.setVisibility(8);\n        this.fappkill.setVisibility(8);\n        this.fsleepBox.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void Save() {\n        if (this.fdesc2.length() &lt; 1) {\n            this.device.setDesc2(this.device.desc1);\n        } else {\n            this.device.setDesc2(this.fdesc2.getText().toString());\n        }\n        this.device.setSetV(this.fsetvol.isChecked());\n        this.device.setDefVol(this.fvol.getProgress());\n        this.device.setGetLoc(this.fgloc.isChecked());\n        this.device.setPname(this.pname);\n        this.device.setBdevice(this.fbt.getText().toString());\n        this.device.setWifi(this.fwifi.isChecked());\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.apprestart = this.fapprestart.isChecked();\n        this.device.setApprestart(this.apprestart);\n        this.appkill = this.fappkill.isChecked();\n        this.device.setAppkill(this.appkill);\n        this.enablegps = this.fenableTTS.isChecked();\n        this.device.setEnableTTS(this.enablegps);\n        this.device.setSetpv(this.fsetpv.isChecked());\n        this.device.setPhonev(this.fphonev.getProgress());\n        this.device.setSmsdelay(this.fsmsdelaybar.getProgress());\n        this.device.setVoldelay(this.fvoldelaybar.getProgress());\n        this.device.setVolramp(this.frampVol.isChecked());\n        this.device.setAutovol(this.fautoVol.isChecked());\n        this.device.setSilent(this.fsilent.isChecked());\n        this.device.setSleep(this.fsleepBox.isChecked());\n        this.device.setCarmode(this.fcarmodeBox.isChecked());\n        switch (this.icongroup.getCheckedRadioButtonId()) {\n            case R.id.iconradio0:\n                this.device.setIcon(R.drawable.car2);\n                break;\n            case R.id.iconradio1:\n                this.device.setIcon(R.drawable.headset);\n                break;\n            case R.id.iconradio2:\n                this.device.setIcon(R.drawable.jack);\n                break;\n            case R.id.iconradio3:\n                this.device.setIcon(R.drawable.usb);\n                break;\n            case R.id.iconradio4:\n                this.device.setIcon(R.drawable.icon5);\n                break;\n        }\n        switch (this.streamgroup.getCheckedRadioButtonId()) {\n            case R.id.streamradio0:\n                this.device.setSmsstream(0);\n                break;\n            case R.id.streamradio1:\n                this.device.setSmsstream(1);\n                break;\n            case R.id.streamradio2:\n                this.device.setSmsstream(2);\n                break;\n        }\n        if (!this.TTsEnabled && this.fenableTTS.isChecked()) {\n            SharedPreferences.Editor editor = this.preferences.edit();\n            editor.putBoolean(\"enableTTS\", true);\n            editor.commit();\n        }\n        this.sb.setText(\"Saving\");\n        try {\n            this.myDB.update(this.device);\n            Intent itent = new Intent();\n            itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n            itent.putExtra(\"device\", \"\");\n            this.application.sendBroadcast(itent);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void closedb() {\n        this.myDB.getDb().close();\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 2:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    this.appaction = \"\";\n                    this.apptype = \"\";\n                    this.appdata = \"\";\n                    vUpdateApp();\n                    break;\n                case 6:\n                    this.pname = \"\";\n                    this.appaction = data.getStringExtra(\"alarm_custom_action\");\n                    this.appdata = data.getStringExtra(\"alarm_custom_data\");\n                    this.apptype = data.getStringExtra(\"alarm_custom_type\");\n                    if (this.appdata.length() &gt; 3) {\n                        try {\n                            this.pname = Intent.getIntent(this.pname).getComponent().getPackageName();\n                        } catch (URISyntaxException e) {\n                            this.pname = \"custom\";\n                            e.printStackTrace();\n                        }\n                    }\n                    if (this.pname.equals(\"\")) {\n                        this.pname = \"custom\";\n                    }\n                    vUpdateApp();\n                    break;\n                case 11:\n                    processShortcut(data);\n                    break;\n                case 14:\n                    startActivityForResult(data, 15);\n                    break;\n                case 15:\n                    processShortcut(data);\n                    if (this.pname.length() &lt; 3 || this.pname.equalsIgnoreCase(\"Custom\")) {\n                        showDialog(5);\n                        break;\n                    }\n                case 16:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n                case 17:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void vUpdateApp() {\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.device.setPname(this.pname);\n        if (!this.device.hasIntent()) {\n            this.fapp.setText(\"\");\n        } else if (this.pname != null && this.pname.length() &gt; 3) {\n            this.fapp.setText(this.pname);\n        } else if (this.appdata != null) {\n            this.fapp.setText(this.appdata);\n        } else if (this.appaction != null) {\n            this.fapp.setText(this.appaction);\n        } else {\n            this.fapp.setText(\"Custom\");\n        }\n        setAppVisibility();\n    }\n    private void processShortcut(Intent data) {\n        Intent i = (Intent) data.getParcelableExtra(\"android.intent.extra.shortcut.INTENT\");\n        this.appdata = getIntentUri(i);\n        if (data.hasExtra(ProviderList.EXTRA_PACKAGE_NAME)) {\n            this.pname = data.getStringExtra(ProviderList.EXTRA_PACKAGE_NAME);\n        } else {\n            try {\n                this.pname = i.getComponent().getPackageName();\n            } catch (Exception e) {\n                this.pname = \"\";\n                e.printStackTrace();\n            }\n        }\n        if (this.pname.length() &lt; 3) {\n            this.pname = \"custom\";\n        }\n        this.appaction = data.getStringExtra(\"android.intent.extra.shortcut.NAME\");\n        this.apptype = \"\";\n        vUpdateApp();\n    }\n    public static String getIntentUri(Intent i) {\n        try {\n            return (String) Intent.class.getMethod(\"toUri\", Integer.TYPE).invoke(i, Integer.valueOf(Intent.class.getField(\"URI_INTENT_SCHEME\").getInt(null)));\n        } catch (Exception e) {\n            return i.toURI();\n        }\n    }\n    /* access modifiers changed from: protected */\n    public Dialog onCreateDialog(int id) {\n        switch (id) {\n            case 3:\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(APP_TYPE_OPTIONS, this.mAppTypeDialogOnClick);\n                return adb2.create();\n            case 4:\n            default:\n                return super.onCreateDialog(id);\n            case 5:\n                AlertDialog.Builder adb4 = new AlertDialog.Builder(this);\n                adb4.setTitle(R.string.ae_stop_app_warning_title);\n                adb4.setMessage(R.string.ae_stop_app_warning_message);\n                adb4.setCancelable(false);\n                adb4.setPositiveButton(\"Select App\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass12 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 17);\n                    }\n                });\n                adb4.setNegativeButton(\"Ignore\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass13 */\n                    public void onClick(DialogInterface dialog, int which) {\n                    }\n                });\n                return adb4.create();\n            case 6:\n                ProgressDialog pd = new ProgressDialog(this);\n                pd.setIndeterminate(true);\n                pd.setMessage(\"Shortenting Url with Bit.ly...\");\n                pd.setCancelable(false);\n                return pd;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.EditDevice.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.CustomIntentMaker"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][694,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Select a Pandora Favorite...\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[53,263][1027,601]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/empty\" scrollable=\"false\" selected=\"false\" text=\"It looks like you don't have any Pandora Radio stations set up. This usually means either Pandora is not installed or you haven't logged into it yet. Please try starting Pandora manually and make sure your stations show up, then try again.\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.EditDevice", 
    "methodSourceLink": [], 
    "target": "ProviderList", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.ProviderList.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][369,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ScrollView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/scrollView1\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/tableLayout1\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,210][1080,261]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView2\" scrollable=\"false\" selected=\"false\" text=\"Enter a name for this device\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,261][1080,379]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editDesc2\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,379][1080,463]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkCaptLoc\" scrollable=\"false\" selected=\"false\" text=\"Capture location on disconnect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,463][1080,547]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkwifi\" scrollable=\"false\" selected=\"false\" text=\"Disconnect WIFI when bluetooth connects?\" />\n\t\t\t\t\t\t<node bounds=\"[0,547][1080,631]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/silentBox\" scrollable=\"false\" selected=\"false\" text=\"Silence notifications while connected?\" />\n\t\t\t\t\t\t<node bounds=\"[0,631][1080,715]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/enableTTSBox\" scrollable=\"false\" selected=\"false\" text=\"Enable Reading Text Messages?\" />\n\t\t\t\t\t\t<node bounds=\"[0,715][1080,799]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetVol\" scrollable=\"false\" selected=\"false\" text=\"Set media volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,799][1080,883]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"7\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetpv\" scrollable=\"false\" selected=\"false\" text=\"Set in-call phone volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,930][1080,1056]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"8\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseAppButton\" scrollable=\"false\" selected=\"false\" text=\"START APP ON CONNECT\" />\n\t\t\t\t\t\t<node bounds=\"[0,1056][1080,1140]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"9\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBoxLaunchCar\" scrollable=\"false\" selected=\"false\" text=\"Launch Car Mode\" />\n\t\t\t\t\t\t<node bounds=\"[0,1169][1080,1295]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"10\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseBTbutton\" scrollable=\"false\" selected=\"false\" text=\"ALSO CONNECT TO BLUETOOTH DEVICE\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,1295][1080,1413]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"11\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editBtConnect\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,1442][1080,1493]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"12\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView4\" scrollable=\"false\" selected=\"false\" text=\"Connected Icon\" />\n\t\t\t\t\t\t<node bounds=\"[0,1546][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RadioGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"13\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/radioGroupIcon\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[105,1546][378,1735]\" checkable=\"true\" checked=\"true\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio0\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[699,1735][975,1794]\" checkable=\"true\" checked=\"false\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class ProviderList extends ListActivity {\n    public static String EXTRA_PACKAGE_NAME = \"extra_package_name\";\n    public static String EXTRA_PROVIDER = \"extra_provider\";\n    public static final String KEY_ID = \"_id\";\n    public static final int MI_TYPE_APPEND_VIEW = 2;\n    public static final int MI_TYPE_CUSTOM = 3;\n    public static final int MI_TYPE_STANDARD = 1;\n    public static int PROVIDER_GOOGLE_LISTEN = 3;\n    public static int PROVIDER_HOMESCREEN = 1;\n    public static int PROVIDER_HOMESCREEN2 = 2;\n    public static int PROVIDER_HTC_SENSE = 4;\n    public static int PROVIDER_PANDORA = 0;\n    public static final String[] P_CUSTOM_DATA_STRINGS = {null, null, null, \"http://listen.googlelabs.com/listen?id=@@\", null};\n    public static final String[] P_DATA_KEYS = {\"stationToken\", \"intent\", \"intent\", \"guid\", \"intent\"};\n    public static final String[] P_EMPTY_LIST_MSGS = {\"It looks like you don't have any Pandora Radio stations set up. This usually means either Pandora is not installed or you haven't logged into it yet. Please try starting Pandora manually and make sure your stations show up, then try again.\", \"It looks like there was an error reading the shortcuts from your home screen (or you don't have any installed).\", \"It looks like there was an error reading the shortcuts from your home screen (or you don't have any installed).\", \"It looks like you don't have any subscriptions set up in Google's Listen. Please close AppAlarm and make sure your subscriptions show up in Listen.\", \"It looks like there was an error reading the shortcuts from your home screen (or you don't have any installed).\"};\n    public static final int[] P_MI_TYPES = {2, 1, 1, 3, 1};\n    public static final String[] P_PACKAGE_NAMES = {\"com.pandora.android\", \"com.android.launcher\", \"com.android.launcher2\", \"com.google.android.apps.listen\", \"com.htc.launcher\"};\n    public static final String[] P_TITLE_KEYS = {\"stationName\", \"title\", \"title\", \"title\", \"title\"};\n    public static final String[] P_URI_STRINGS = {\"content://com.pandora.provider/stations\", \"content://com.android.launcher.settings/favorites\", \"content://com.android.launcher2.settings/favorites\", \"content://com.google.android.apps.listen.PodcastProvider/item\", \"content://com.htc.launcher.settings/favorites\"};\n    public static final String[] P_WHERE_KEYS = {null, \"intent!=\\\"\\\"\", \"intent!=\\\"\\\"\", null, \"intent!=\\\"\\\"\"};\n    public static final String[] P_WINDOW_TITLES = {\"Select a Pandora Favorite...\", \"Select a Shortcut from your Home Screen...\", \"Select a Shortcut from your Home Screen...\", \"Select a Feed from Google's Listen\", \"Select a Shortcut from your Home Screen...\"};\n    private CursorAdapter mListAdapter;\n    private int mProvider;\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        setContentView(R.layout.pandora_station_list);\n        super.onCreate(savedInstanceState);\n        this.mProvider = getIntent().getIntExtra(EXTRA_PROVIDER, 0);\n        setTitle(P_WINDOW_TITLES[this.mProvider]);\n        ((TextView) getListView().getEmptyView()).setText(P_EMPTY_LIST_MSGS[this.mProvider]);\n        loadList();\n    }\n    private void loadList() {\n        try {\n            Cursor c = managedQuery(Uri.parse(P_URI_STRINGS[this.mProvider]), new String[]{KEY_ID, P_TITLE_KEYS[this.mProvider]}, P_WHERE_KEYS[this.mProvider], null, P_TITLE_KEYS[this.mProvider]);\n            if (c == null) {\n                try {\n                    if (this.mProvider == PROVIDER_HOMESCREEN) {\n                        Log.d(\"AppAlarm\", \"Error reading from Launcher1, trying Launcher2\");\n                        this.mProvider = PROVIDER_HOMESCREEN2;\n                        loadList();\n                    } else if (this.mProvider == PROVIDER_HOMESCREEN2) {\n                        Log.d(\"AppAlarm\", \"Error reading from Launcher2, trying Sense\");\n                        this.mProvider = PROVIDER_HTC_SENSE;\n                        loadList();\n                    }\n                } catch (Exception e) {\n                    e = e;\n                    e.printStackTrace();\n                }\n            } else {\n                this.mListAdapter = new SimpleCursorAdapter(this, R.layout.pandora_station_item, c, new String[]{P_TITLE_KEYS[this.mProvider]}, new int[]{R.id.psi_tv_station_name});\n                setListAdapter(this.mListAdapter);\n            }\n        } catch (Exception e2) {\n            e = e2;\n            e.printStackTrace();\n        }\n    }\n    public void onConfigurationChanged(Configuration newConfig) {\n        setContentView(R.layout.pandora_station_list);\n        super.onConfigurationChanged(newConfig);\n        try {\n            setListAdapter(this.mListAdapter);\n        } catch (Exception e) {\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onListItemClick(ListView l, View v, int position, long id) {\n        super.onListItemClick(l, v, position, id);\n        Cursor c = getContentResolver().query(Uri.parse(P_URI_STRINGS[this.mProvider]), new String[]{P_TITLE_KEYS[this.mProvider], P_DATA_KEYS[this.mProvider]}, \"_id=\" + id, null, null);\n        c.moveToFirst();\n        String title = c.getString(c.getColumnIndexOrThrow(P_TITLE_KEYS[this.mProvider]));\n        String data = c.getString(c.getColumnIndexOrThrow(P_DATA_KEYS[this.mProvider]));\n        c.close();\n        Intent rtrIntent = new Intent();\n        rtrIntent.putExtra(\"android.intent.extra.shortcut.NAME\", title);\n        if (!(this.mProvider == PROVIDER_HOMESCREEN || this.mProvider == PROVIDER_HOMESCREEN2 || this.mProvider == PROVIDER_HTC_SENSE)) {\n            rtrIntent.putExtra(EXTRA_PACKAGE_NAME, P_PACKAGE_NAMES[this.mProvider]);\n        }\n        rtrIntent.putExtra(\"android.intent.extra.shortcut.INTENT\", getSelectedIntent(data));\n        setResult(-1, rtrIntent);\n        finish();\n    }\n    private Intent getSelectedIntent(String data) {\n        switch (P_MI_TYPES[this.mProvider]) {\n            case 1:\n                try {\n                    return Intent.getIntent(data);\n                } catch (URISyntaxException e) {\n                    return null;\n                }\n            case 2:\n                Intent nI = new Intent(\"android.intent.action.VIEW\");\n                nI.setData(Uri.withAppendedPath(Uri.parse(P_URI_STRINGS[this.mProvider]), data));\n                return nI;\n            case 3:\n                Intent nI2 = new Intent(\"android.intent.action.VIEW\");\n                String newData = null;\n                try {\n                    newData = P_CUSTOM_DATA_STRINGS[this.mProvider].replaceAll(\"@@\", URLEncoder.encode(data, \"UTF-8\"));\n                } catch (UnsupportedEncodingException e2) {\n                    e2.printStackTrace();\n                }\n                Toast.makeText(getBaseContext(), newData, 1).show();\n                nI2.setData(Uri.parse(newData));\n                return nI2;\n            default:\n                return null;\n        }\n    }\n}\n", 
    "source": "EditDevice", 
    "source_actcode": "public class EditDevice extends Activity {\n    private static final int ACTION_ADD_PACKAGE = 17;\n    private static final int ACTION_CHOOSE_APP = 2;\n    private static final int ACTION_CHOOSE_APP_CUSTOM = 16;\n    private static final int ACTION_CHOOSE_FROM_PROVIDER = 11;\n    private static final int ACTION_CREATE_HOME_SCREEN_SHORTCUT = 14;\n    private static final int ACTION_CUSTOM_INTENT = 6;\n    private static final int ALARM_STREAM = 2;\n    private static final String[] APP_TYPE_OPTIONS = {\"Choose App\", \"Create Shortcut\", \"Home Screen Shortcut\", \"Pandora Radio Station\", \"Custom Intent\", \"Clear App Selection\"};\n    private static final int DIALOG_BITLY = 6;\n    private static final int DIALOG_PICK_APP_TYPE = 3;\n    private static final int DIALOG_WARN_STOP_APP = 5;\n    private static final int FETCH_HOME_SCREEN_SHORTCUT = 15;\n    private static final int IN_CALL_STREAM = 1;\n    private static final int MUSIC_STREAM = 0;\n    private boolean TTsEnabled;\n    private String appaction;\n    private String appdata;\n    private boolean appkill;\n    private MyApplication application;\n    private boolean apprestart;\n    private String apptype;\n    public String btd;\n    private Button cb;\n    private Button connbt;\n    private btDevice device;\n    private boolean enablegps;\n    private EditText fapp;\n    private CheckBox fappkill;\n    private CheckBox fapprestart;\n    private CheckBox fautoVol;\n    private EditText fbt;\n    private CheckBox fcarmodeBox;\n    private EditText fdesc2;\n    private CheckBox fenableGPS;\n    private CheckBox fenableTTS;\n    private CheckBox fgloc;\n    private SeekBar fphonev;\n    private CheckBox frampVol;\n    private CheckBox fsetpv;\n    private CheckBox fsetvol;\n    private CheckBox fsilent;\n    private CheckBox fsleepBox;\n    private SeekBar fsmsdelaybar;\n    private TextView fsmsdelaybox;\n    private SeekBar fvol;\n    private SeekBar fvoldelaybar;\n    private TextView fvoldelaybox;\n    private CheckBox fwifi;\n    private RadioGroup icongroup;\n    private RadioButton iconradio0;\n    private RadioButton iconradio1;\n    private RadioButton iconradio2;\n    private RadioButton iconradio3;\n    private RadioButton iconradio4;\n    private LinearLayout l1;\n    private LinearLayout l2;\n    private DialogInterface.OnClickListener mAppTypeDialogOnClick = new DialogInterface.OnClickListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass11 */\n        public void onClick(DialogInterface dialog, int which) {\n            switch (which) {\n                case 0:\n                    EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 2);\n                    return;\n                case 1:\n                    Intent i = new Intent(\"android.intent.action.PICK_ACTIVITY\");\n                    i.putExtra(\"android.intent.extra.INTENT\", new Intent(\"android.intent.action.CREATE_SHORTCUT\"));\n                    i.putExtra(\"android.intent.extra.TITLE\", \"Create a Shortcut\");\n                    EditDevice.this.startActivityForResult(i, 14);\n                    return;\n                case 2:\n                    Intent i2 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i2.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_HOMESCREEN);\n                    EditDevice.this.startActivityForResult(i2, 11);\n                    return;\n                case 3:\n                    Intent i3 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i3.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_PANDORA);\n                    EditDevice.this.startActivityForResult(i3, 11);\n                    return;\n                case 4:\n                    Intent i4 = new Intent(EditDevice.this.getBaseContext(), CustomIntentMaker.class);\n                    i4.putExtra(\"alarm_custom_action\", EditDevice.this.appaction);\n                    i4.putExtra(\"alarm_custom_data\", EditDevice.this.appdata);\n                    i4.putExtra(\"alarm_custom_type\", EditDevice.this.apptype);\n                    i4.putExtra(\"alarm_package_name\", EditDevice.this.pname);\n                    EditDevice.this.startActivityForResult(i4, 6);\n                    return;\n                case 5:\n                    EditDevice.this.pname = \"\";\n                    EditDevice.this.appaction = \"\";\n                    EditDevice.this.appdata = \"\";\n                    EditDevice.this.apptype = \"\";\n                    EditDevice.this.vUpdateApp();\n                    return;\n                default:\n                    return;\n            }\n        }\n    };\n    private TextView mediadelay;\n    private DeviceDB myDB;\n    private String pname;\n    SharedPreferences preferences;\n    private Button sb;\n    SeekBar.OnSeekBarChangeListener smsdelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass9 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fsmsdelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    private Button startapp;\n    private RadioGroup streamgroup;\n    private RadioButton streamradio0;\n    private RadioButton streamradio1;\n    private RadioButton streamradio2;\n    private TextView ttsdelay;\n    private TextView tv2;\n    private TextView tvincallVol;\n    private TextView tvmediavol;\n    private TextView tvstream;\n    SeekBar.OnSeekBarChangeListener voldelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass10 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fvoldelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    public void onBackPressed() {\n        Save();\n        closedb();\n        finish();\n        super.onBackPressed();\n    }\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.edit_item);\n        this.application = (MyApplication) getApplication();\n        this.myDB = new DeviceDB(this.application);\n        AudioManager am = (AudioManager) getSystemService(\"audio\");\n        this.sb = (Button) findViewById(R.id.EditDevSavebutton);\n        this.cb = (Button) findViewById(R.id.EditDevCancelbutton);\n        this.startapp = (Button) findViewById(R.id.chooseAppButton);\n        this.connbt = (Button) findViewById(R.id.chooseBTbutton);\n        this.fdesc2 = (EditText) findViewById(R.id.editDesc2);\n        this.fgloc = (CheckBox) findViewById(R.id.checkCaptLoc);\n        this.fsetvol = (CheckBox) findViewById(R.id.checkSetVol);\n        this.fvol = (SeekBar) findViewById(R.id.seekBarVol);\n        this.fapp = (EditText) findViewById(R.id.editApp);\n        this.fapprestart = (CheckBox) findViewById(R.id.appRestartCheckbox);\n        this.fappkill = (CheckBox) findViewById(R.id.appKillCheckbox);\n        this.fbt = (EditText) findViewById(R.id.editBtConnect);\n        this.fwifi = (CheckBox) findViewById(R.id.checkwifi);\n        this.fenableTTS = (CheckBox) findViewById(R.id.enableTTSBox);\n        this.fsetpv = (CheckBox) findViewById(R.id.checkSetpv);\n        this.fsilent = (CheckBox) findViewById(R.id.silentBox);\n        this.fphonev = (SeekBar) findViewById(R.id.seekPhoneVol);\n        this.fsmsdelaybar = (SeekBar) findViewById(R.id.SMSdelayseekBar);\n        this.fsmsdelaybox = (TextView) findViewById(R.id.SMSdelaytextView);\n        this.fvoldelaybar = (SeekBar) findViewById(R.id.VolDelaySeekBar);\n        this.fvoldelaybox = (TextView) findViewById(R.id.VolDelayTextView);\n        this.tv2 = (TextView) findViewById(R.id.textView2);\n        this.frampVol = (CheckBox) findViewById(R.id.rampBox);\n        this.fautoVol = (CheckBox) findViewById(R.id.autoVolcheckBox);\n        this.icongroup = (RadioGroup) findViewById(R.id.radioGroupIcon);\n        this.iconradio0 = (RadioButton) findViewById(R.id.iconradio0);\n        this.iconradio1 = (RadioButton) findViewById(R.id.iconradio1);\n        this.iconradio2 = (RadioButton) findViewById(R.id.iconradio2);\n        this.iconradio3 = (RadioButton) findViewById(R.id.iconradio3);\n        this.iconradio4 = (RadioButton) findViewById(R.id.iconradio4);\n        this.streamgroup = (RadioGroup) findViewById(R.id.radioGroupStream);\n        this.streamradio0 = (RadioButton) findViewById(R.id.streamradio0);\n        this.streamradio1 = (RadioButton) findViewById(R.id.streamradio1);\n        this.streamradio2 = (RadioButton) findViewById(R.id.streamradio2);\n        this.l1 = (LinearLayout) findViewById(R.id.LinearLayout1);\n        this.l2 = (LinearLayout) findViewById(R.id.LinearLayout2);\n        this.ttsdelay = (TextView) findViewById(R.id.textViewTTSDelay);\n        this.mediadelay = (TextView) findViewById(R.id.textViewMediaDelay);\n        this.tvstream = (TextView) findViewById(R.id.textViewStream);\n        this.tvmediavol = (TextView) findViewById(R.id.textViewMediaVolume);\n        this.tvincallVol = (TextView) findViewById(R.id.textViewInCallVol);\n        this.fsleepBox = (CheckBox) findViewById(R.id.checkBoxSleep);\n        this.fcarmodeBox = (CheckBox) findViewById(R.id.checkBoxLaunchCar);\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        this.TTsEnabled = this.preferences.getBoolean(\"enableTTS\", false);\n        this.btd = getIntent().getStringExtra(\"btd\");\n        this.device = this.myDB.getBTD(this.btd);\n        this.fdesc2.setText(this.device.desc2);\n        this.fgloc.setChecked(this.device.isGetLoc());\n        this.fsetvol.setChecked(this.device.isSetV());\n        this.fvol.setMax(am.getStreamMaxVolume(3));\n        this.fvol.setProgress(this.device.defVol);\n        this.fapp.setText(this.device.getPname());\n        this.fbt.setText(this.device.getBdevice());\n        this.fwifi.setChecked(this.device.isWifi());\n        if (this.device == null) {\n            this.connbt.setEnabled(false);\n        }\n        this.pname = this.device.getPname();\n        this.appaction = this.device.getAppaction();\n        this.appdata = this.device.getAppdata();\n        this.apptype = this.device.getApptype();\n        this.apprestart = this.device.isApprestart();\n        this.appkill = this.device.isAppkill();\n        this.fapprestart.setChecked(this.apprestart);\n        this.fappkill.setChecked(this.appkill);\n        this.fenableTTS.setChecked(this.device.isEnableTTS());\n        this.fsetpv.setChecked(this.device.isSetpv());\n        this.fphonev.setMax(am.getStreamMaxVolume(0));\n        this.fphonev.setProgress(this.device.getPhonev());\n        this.fsmsdelaybar.setMax(20);\n        this.fsmsdelaybar.setOnSeekBarChangeListener(this.smsdelaySeekBarProgress);\n        this.fsmsdelaybox.setText(this.device.smsdelay + \"s\");\n        this.fsmsdelaybar.setProgress(this.device.getSmsdelay());\n        this.fvoldelaybar.setMax(20);\n        this.fvoldelaybar.setOnSeekBarChangeListener(this.voldelaySeekBarProgress);\n        this.fvoldelaybox.setText(this.device.voldelay + \"s\");\n        this.fvoldelaybar.setProgress(this.device.getVoldelay());\n        this.frampVol.setChecked(this.device.isVolramp());\n        this.fautoVol.setChecked(this.device.isAutovol());\n        this.fsilent.setChecked(this.device.isSilent());\n        this.fsleepBox.setChecked(this.device.isSleep());\n        this.fcarmodeBox.setChecked(this.device.isCarmode());\n        switch (this.device.getIcon()) {\n            case R.drawable.car2:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.headset:\n                this.iconradio1.setChecked(true);\n                break;\n            case R.drawable.ic_launcher:\n            default:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.icon5:\n                this.iconradio4.setChecked(true);\n                break;\n            case R.drawable.jack:\n                this.iconradio2.setChecked(true);\n                break;\n            case R.drawable.usb:\n                this.iconradio3.setChecked(true);\n                break;\n        }\n        switch (this.device.getSmsstream()) {\n            case 0:\n                this.streamradio0.setChecked(true);\n                break;\n            case 1:\n                this.streamradio1.setChecked(true);\n                break;\n            case 2:\n                this.streamradio2.setChecked(true);\n                break;\n            default:\n                this.streamradio0.setChecked(true);\n                break;\n        }\n        setTTSVisibility();\n        this.fenableTTS.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass1 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setTTSVisibility();\n            }\n        });\n        setMediaVisibility();\n        this.fsetvol.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass2 */\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                EditDevice.this.setMediaVisibility();\n            }\n        });\n        setInCallVisibility();\n        this.fsetpv.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass3 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setInCallVisibility();\n            }\n        });\n        setAppVisibility();\n        this.tv2.requestFocus();\n        vUpdateApp();\n        this.sb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass4 */\n            public void onClick(View v) {\n                EditDevice.this.Save();\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.cb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass5 */\n            public void onClick(View arg0) {\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.startapp.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass6 */\n            public boolean onLongClick(View arg0) {\n                PackageManager pm = EditDevice.this.getPackageManager();\n                List&lt;ApplicationInfo> packages = pm.getInstalledApplications(0);\n                String[] lstring = new String[packages.size()];\n                int i = 0;\n                for (int n = 0; n &lt; packages.size(); n++) {\n                    Intent itent = pm.getLaunchIntentForPackage(packages.get(n).packageName);\n                    if (packages.get(n).icon &gt; 0 && packages.get(n).enabled && itent != null) {\n                        lstring[i] = packages.get(n).packageName;\n                        i++;\n                    }\n                }\n                final String[] ls2 = new String[i];\n                for (int j = 0; j &lt; i; j++) {\n                    ls2[j] = lstring[j];\n                }\n                Arrays.sort(ls2);\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Pick a package\");\n                builder.setItems(ls2, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass6.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        EditDevice.this.fapp.setText(ls2[item]);\n                    }\n                });\n                builder.create().show();\n                return false;\n            }\n        });\n        this.startapp.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass7 */\n            public void onClick(View arg0) {\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(EditDevice.this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(EditDevice.APP_TYPE_OPTIONS, EditDevice.this.mAppTypeDialogOnClick);\n                adb2.create();\n                adb2.show();\n            }\n        });\n        this.connbt.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass8 */\n            public void onClick(View v) {\n                if (!EditDevice.this.myDB.getDb().isOpen() && !EditDevice.this.myDB.getDb().isDbLockedByCurrentThread()) {\n                    EditDevice.this.myDB = new DeviceDB(EditDevice.this.application);\n                }\n                final Vector&lt;btDevice> vec = EditDevice.this.myDB.selectAlldb();\n                int j = vec.size();\n                int i = 0;\n                while (i &lt; j) {\n                    if (vec.get(i).mac.length() &lt; 17) {\n                        vec.remove(i);\n                        j--;\n                        i--;\n                    }\n                    i++;\n                }\n                vec.trimToSize();\n                String[] lstring = new String[(vec.size() + 1)];\n                for (int i2 = 0; i2 &lt; vec.size(); i2++) {\n                    lstring[i2] = vec.get(i2).desc2;\n                }\n                lstring[vec.size()] = \"none\";\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Bluetooth Device\");\n                builder.setItems(lstring, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass8.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        if (item &lt; vec.size()) {\n                            EditDevice.this.fbt.setText(((btDevice) vec.get(item)).mac);\n                        } else {\n                            EditDevice.this.fbt.setText(\"\");\n                        }\n                    }\n                });\n                builder.create().show();\n            }\n        });\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setMediaVisibility() {\n        if (this.fsetvol.isChecked()) {\n            this.tvmediavol.setVisibility(0);\n            this.fvol.setVisibility(0);\n            this.fautoVol.setVisibility(0);\n            this.frampVol.setVisibility(0);\n            this.l2.setVisibility(0);\n            this.mediadelay.setVisibility(0);\n            return;\n        }\n        this.tvmediavol.setVisibility(8);\n        this.fvol.setVisibility(8);\n        this.fautoVol.setVisibility(8);\n        this.frampVol.setVisibility(8);\n        this.l2.setVisibility(8);\n        this.mediadelay.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setTTSVisibility() {\n        if (this.fenableTTS.isChecked()) {\n            this.l1.setVisibility(0);\n            this.ttsdelay.setVisibility(0);\n            this.tvstream.setVisibility(0);\n            this.streamgroup.setVisibility(0);\n            return;\n        }\n        this.l1.setVisibility(8);\n        this.ttsdelay.setVisibility(8);\n        this.tvstream.setVisibility(8);\n        this.streamgroup.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setInCallVisibility() {\n        if (this.fsetpv.isChecked()) {\n            this.tvincallVol.setVisibility(0);\n            this.fphonev.setVisibility(0);\n            return;\n        }\n        this.tvincallVol.setVisibility(8);\n        this.fphonev.setVisibility(8);\n    }\n    private void setAppVisibility() {\n        if (this.fapp.getText().length() &gt; 0) {\n            this.fapp.setVisibility(0);\n            this.fapprestart.setVisibility(0);\n            this.fappkill.setVisibility(0);\n            this.fsleepBox.setVisibility(8);\n            return;\n        }\n        this.fapp.setVisibility(8);\n        this.fapprestart.setVisibility(8);\n        this.fappkill.setVisibility(8);\n        this.fsleepBox.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void Save() {\n        if (this.fdesc2.length() &lt; 1) {\n            this.device.setDesc2(this.device.desc1);\n        } else {\n            this.device.setDesc2(this.fdesc2.getText().toString());\n        }\n        this.device.setSetV(this.fsetvol.isChecked());\n        this.device.setDefVol(this.fvol.getProgress());\n        this.device.setGetLoc(this.fgloc.isChecked());\n        this.device.setPname(this.pname);\n        this.device.setBdevice(this.fbt.getText().toString());\n        this.device.setWifi(this.fwifi.isChecked());\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.apprestart = this.fapprestart.isChecked();\n        this.device.setApprestart(this.apprestart);\n        this.appkill = this.fappkill.isChecked();\n        this.device.setAppkill(this.appkill);\n        this.enablegps = this.fenableTTS.isChecked();\n        this.device.setEnableTTS(this.enablegps);\n        this.device.setSetpv(this.fsetpv.isChecked());\n        this.device.setPhonev(this.fphonev.getProgress());\n        this.device.setSmsdelay(this.fsmsdelaybar.getProgress());\n        this.device.setVoldelay(this.fvoldelaybar.getProgress());\n        this.device.setVolramp(this.frampVol.isChecked());\n        this.device.setAutovol(this.fautoVol.isChecked());\n        this.device.setSilent(this.fsilent.isChecked());\n        this.device.setSleep(this.fsleepBox.isChecked());\n        this.device.setCarmode(this.fcarmodeBox.isChecked());\n        switch (this.icongroup.getCheckedRadioButtonId()) {\n            case R.id.iconradio0:\n                this.device.setIcon(R.drawable.car2);\n                break;\n            case R.id.iconradio1:\n                this.device.setIcon(R.drawable.headset);\n                break;\n            case R.id.iconradio2:\n                this.device.setIcon(R.drawable.jack);\n                break;\n            case R.id.iconradio3:\n                this.device.setIcon(R.drawable.usb);\n                break;\n            case R.id.iconradio4:\n                this.device.setIcon(R.drawable.icon5);\n                break;\n        }\n        switch (this.streamgroup.getCheckedRadioButtonId()) {\n            case R.id.streamradio0:\n                this.device.setSmsstream(0);\n                break;\n            case R.id.streamradio1:\n                this.device.setSmsstream(1);\n                break;\n            case R.id.streamradio2:\n                this.device.setSmsstream(2);\n                break;\n        }\n        if (!this.TTsEnabled && this.fenableTTS.isChecked()) {\n            SharedPreferences.Editor editor = this.preferences.edit();\n            editor.putBoolean(\"enableTTS\", true);\n            editor.commit();\n        }\n        this.sb.setText(\"Saving\");\n        try {\n            this.myDB.update(this.device);\n            Intent itent = new Intent();\n            itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n            itent.putExtra(\"device\", \"\");\n            this.application.sendBroadcast(itent);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void closedb() {\n        this.myDB.getDb().close();\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 2:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    this.appaction = \"\";\n                    this.apptype = \"\";\n                    this.appdata = \"\";\n                    vUpdateApp();\n                    break;\n                case 6:\n                    this.pname = \"\";\n                    this.appaction = data.getStringExtra(\"alarm_custom_action\");\n                    this.appdata = data.getStringExtra(\"alarm_custom_data\");\n                    this.apptype = data.getStringExtra(\"alarm_custom_type\");\n                    if (this.appdata.length() &gt; 3) {\n                        try {\n                            this.pname = Intent.getIntent(this.pname).getComponent().getPackageName();\n                        } catch (URISyntaxException e) {\n                            this.pname = \"custom\";\n                            e.printStackTrace();\n                        }\n                    }\n                    if (this.pname.equals(\"\")) {\n                        this.pname = \"custom\";\n                    }\n                    vUpdateApp();\n                    break;\n                case 11:\n                    processShortcut(data);\n                    break;\n                case 14:\n                    startActivityForResult(data, 15);\n                    break;\n                case 15:\n                    processShortcut(data);\n                    if (this.pname.length() &lt; 3 || this.pname.equalsIgnoreCase(\"Custom\")) {\n                        showDialog(5);\n                        break;\n                    }\n                case 16:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n                case 17:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void vUpdateApp() {\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.device.setPname(this.pname);\n        if (!this.device.hasIntent()) {\n            this.fapp.setText(\"\");\n        } else if (this.pname != null && this.pname.length() &gt; 3) {\n            this.fapp.setText(this.pname);\n        } else if (this.appdata != null) {\n            this.fapp.setText(this.appdata);\n        } else if (this.appaction != null) {\n            this.fapp.setText(this.appaction);\n        } else {\n            this.fapp.setText(\"Custom\");\n        }\n        setAppVisibility();\n    }\n    private void processShortcut(Intent data) {\n        Intent i = (Intent) data.getParcelableExtra(\"android.intent.extra.shortcut.INTENT\");\n        this.appdata = getIntentUri(i);\n        if (data.hasExtra(ProviderList.EXTRA_PACKAGE_NAME)) {\n            this.pname = data.getStringExtra(ProviderList.EXTRA_PACKAGE_NAME);\n        } else {\n            try {\n                this.pname = i.getComponent().getPackageName();\n            } catch (Exception e) {\n                this.pname = \"\";\n                e.printStackTrace();\n            }\n        }\n        if (this.pname.length() &lt; 3) {\n            this.pname = \"custom\";\n        }\n        this.appaction = data.getStringExtra(\"android.intent.extra.shortcut.NAME\");\n        this.apptype = \"\";\n        vUpdateApp();\n    }\n    public static String getIntentUri(Intent i) {\n        try {\n            return (String) Intent.class.getMethod(\"toUri\", Integer.TYPE).invoke(i, Integer.valueOf(Intent.class.getField(\"URI_INTENT_SCHEME\").getInt(null)));\n        } catch (Exception e) {\n            return i.toURI();\n        }\n    }\n    /* access modifiers changed from: protected */\n    public Dialog onCreateDialog(int id) {\n        switch (id) {\n            case 3:\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(APP_TYPE_OPTIONS, this.mAppTypeDialogOnClick);\n                return adb2.create();\n            case 4:\n            default:\n                return super.onCreateDialog(id);\n            case 5:\n                AlertDialog.Builder adb4 = new AlertDialog.Builder(this);\n                adb4.setTitle(R.string.ae_stop_app_warning_title);\n                adb4.setMessage(R.string.ae_stop_app_warning_message);\n                adb4.setCancelable(false);\n                adb4.setPositiveButton(\"Select App\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass12 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 17);\n                    }\n                });\n                adb4.setNegativeButton(\"Ignore\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass13 */\n                    public void onClick(DialogInterface dialog, int which) {\n                    }\n                });\n                return adb4.create();\n            case 6:\n                ProgressDialog pd = new ProgressDialog(this);\n                pd.setIndeterminate(true);\n                pd.setMessage(\"Shortenting Url with Bit.ly...\");\n                pd.setCancelable(false);\n                return pd;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.EditDevice.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.ProviderList"
},
{
    "target_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][408,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"Select an app...\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1019]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1019]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,354]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[13,223][589,341]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/m_et_search\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[602,219][833,345]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/m_btn_search\" scrollable=\"false\" selected=\"false\" text=\"SEARCH\" />\n\t\t\t\t\t\t<node bounds=\"[841,219][1072,345]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/m_btn_clear\" scrollable=\"false\" selected=\"false\" text=\"CLEAR\" />\n\t\t\t\t\t</node>\n\t\t\t\t\t<node bounds=\"[0,354][1080,1019]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ListView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/m_lv_packages\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,354][1080,501]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[13,375][118,480]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[131,362][1080,493]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[0,504][1080,651]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[13,525][118,630]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[131,512][1080,643]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Easter Egg\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[0,654][1080,801]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[13,675][118,780]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[131,662][1080,793]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Keyboard (AOSP)\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[0,804][1080,951]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[13,825][118,930]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[131,812][1080,943]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Services Library\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t\t<node bounds=\"[0,954][1080,1019]\" checkable=\"false\" checked=\"false\" class=\"android.widget.LinearLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node bounds=\"[13,975][118,1019]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ImageView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_iv_icon\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node bounds=\"[131,962][1080,1019]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/pi_tv_name\" scrollable=\"false\" selected=\"false\" text=\"Android Shared Library\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "source_fullname": "a2dp.Vol.EditDevice", 
    "methodSourceLink": [], 
    "target": "AppChooser", 
    "targetimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.AppChooser.png", 
    "methodTargetLink": [], 
    "source_layoutcode": "<hierarchy rotation=\"0\">\n\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t<node bounds=\"[0,0][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/decor_content_parent\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar_container\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,63][1080,210]\" checkable=\"false\" checked=\"false\" class=\"android.view.ViewGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/action_bar\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[42,101][369,172]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"\" scrollable=\"false\" selected=\"false\" text=\"A2DP Volume\" />\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.FrameLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/content\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.ScrollView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/scrollView1\" scrollable=\"true\" selected=\"false\" text=\"\">\n\t\t\t\t\t<node bounds=\"[0,210][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TableLayout\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/tableLayout1\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t<node bounds=\"[0,210][1080,261]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"true\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView2\" scrollable=\"false\" selected=\"false\" text=\"Enter a name for this device\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,261][1080,379]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editDesc2\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,379][1080,463]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkCaptLoc\" scrollable=\"false\" selected=\"false\" text=\"Capture location on disconnect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,463][1080,547]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"3\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkwifi\" scrollable=\"false\" selected=\"false\" text=\"Disconnect WIFI when bluetooth connects?\" />\n\t\t\t\t\t\t<node bounds=\"[0,547][1080,631]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"4\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/silentBox\" scrollable=\"false\" selected=\"false\" text=\"Silence notifications while connected?\" />\n\t\t\t\t\t\t<node bounds=\"[0,631][1080,715]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"5\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/enableTTSBox\" scrollable=\"false\" selected=\"false\" text=\"Enable Reading Text Messages?\" />\n\t\t\t\t\t\t<node bounds=\"[0,715][1080,799]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"6\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetVol\" scrollable=\"false\" selected=\"false\" text=\"Set media volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,799][1080,883]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"7\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkSetpv\" scrollable=\"false\" selected=\"false\" text=\"Set in-call phone volume on connect?\" />\n\t\t\t\t\t\t<node bounds=\"[0,930][1080,1056]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"8\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseAppButton\" scrollable=\"false\" selected=\"false\" text=\"START APP ON CONNECT\" />\n\t\t\t\t\t\t<node bounds=\"[0,1056][1080,1140]\" checkable=\"true\" checked=\"false\" class=\"android.widget.CheckBox\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"9\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/checkBoxLaunchCar\" scrollable=\"false\" selected=\"false\" text=\"Launch Car Mode\" />\n\t\t\t\t\t\t<node bounds=\"[0,1169][1080,1295]\" checkable=\"false\" checked=\"false\" class=\"android.widget.Button\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"10\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/chooseBTbutton\" scrollable=\"false\" selected=\"false\" text=\"ALSO CONNECT TO BLUETOOTH DEVICE\" />\n\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[0,1295][1080,1413]\" checkable=\"false\" checked=\"false\" class=\"android.widget.EditText\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"11\" long-clickable=\"true\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/editBtConnect\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t<node bounds=\"[0,1442][1080,1493]\" checkable=\"false\" checked=\"false\" class=\"android.widget.TextView\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"12\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/textView4\" scrollable=\"false\" selected=\"false\" text=\"Connected Icon\" />\n\t\t\t\t\t\t<node bounds=\"[0,1546][1080,1794]\" checkable=\"false\" checked=\"false\" class=\"android.widget.RadioGroup\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"13\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/radioGroupIcon\" scrollable=\"false\" selected=\"false\" text=\"\">\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[105,1546][378,1735]\" checkable=\"true\" checked=\"true\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"0\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio0\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t\t<node NAF=\"true\" bounds=\"[699,1735][975,1794]\" checkable=\"true\" checked=\"false\" class=\"android.widget.RadioButton\" clickable=\"true\" content-desc=\"\" enabled=\"true\" focusable=\"true\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"a2dp.Vol:id/iconradio1\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t\t\t\t\t</node>\n\t\t\t\t\t</node>\n\t\t\t\t</node>\n\t\t\t</node>\n\t\t</node>\n\t\t<node bounds=\"[0,0][1080,63]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"1\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/statusBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t\t<node bounds=\"[0,0][0,0]\" checkable=\"false\" checked=\"false\" class=\"android.view.View\" clickable=\"false\" content-desc=\"\" enabled=\"true\" focusable=\"false\" focused=\"false\" index=\"2\" long-clickable=\"false\" package=\"a2dp.Vol\" password=\"false\" resource-id=\"android:id/navigationBarBackground\" scrollable=\"false\" selected=\"false\" text=\"\" />\n\t</node>\n</hierarchy>\n", 
    "target_actcode": "public class AppChooser extends Activity {\n    public static final String EXTRA_PACKAGE_NAME = \"package_name\";\n    private List&lt;AppInfoCache> mAppList;\n    private Button mBtnClear;\n    private Button mBtnSearch;\n    public View.OnClickListener mClearBtnListenerListner = new View.OnClickListener() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass2 */\n        public void onClick(View v) {\n            AppChooser.this.mEtFilter.setText(\"\");\n            AppChooser.this.doListFilter();\n        }\n    };\n    private EditText mEtFilter;\n    private String mFilterText;\n    private Runnable mFinishLoadAndSortTask = new Runnable() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass7 */\n        public void run() {\n            AppChooser.this.initAssignListenersAndAdapter();\n            AppChooser.this.mLoadingDialog.dismiss();\n        }\n    };\n    private List&lt;AppInfoCache> mFullAppList;\n    private final Handler mHandler = new Handler();\n    private PackageListAdapter mListAdapter;\n    public AdapterView.OnItemClickListener mListItemClickAdapter = new AdapterView.OnItemClickListener() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass5 */\n        @Override // android.widget.AdapterView.OnItemClickListener\n        public void onItemClick(AdapterView&lt;?> adapterView, View view, int position, long id) {\n            Intent i = new Intent();\n            i.putExtra(AppChooser.EXTRA_PACKAGE_NAME, ((AppInfoCache) AppChooser.this.mAppList.get(position)).getPackageName());\n            AppChooser.this.setResult(-1, i);\n            AppChooser.this.finish();\n        }\n    };\n    private ListView mListView;\n    private Runnable mLoadAppLoadAndSortAppList = new Runnable() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass6 */\n        public void run() {\n            AppChooser.this.mAppList = new ArrayList();\n            for (ApplicationInfo appInfo : AppChooser.this.pm.getInstalledApplications(0)) {\n                AppChooser.this.mAppList.add(new AppInfoCache(appInfo.loadLabel(AppChooser.this.pm).toString(), appInfo.packageName, appInfo.className));\n            }\n            Collections.sort(AppChooser.this.mAppList, new AlphaComparator());\n            AppChooser.this.mFullAppList = new ArrayList();\n            int i = 0;\n            for (AppInfoCache appInfo2 : AppChooser.this.mAppList) {\n                appInfo2.setPosition(i);\n                AppChooser.this.mFullAppList.add(appInfo2);\n                i++;\n            }\n            AppChooser.this.mListAdapter = new PackageListAdapter(AppChooser.this.getBaseContext());\n            AppChooser.this.mHandler.post(AppChooser.this.mFinishLoadAndSortTask);\n        }\n    };\n    private ProgressDialog mLoadingDialog;\n    public TextView.OnEditorActionListener mSearchActionListener = new TextView.OnEditorActionListener() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass3 */\n        public boolean onEditorAction(TextView v, int actionId, KeyEvent event) {\n            AppChooser.this.doListFilter();\n            return false;\n        }\n    };\n    public View.OnKeyListener mSearchBoxKeyListener = new View.OnKeyListener() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass4 */\n        public boolean onKey(View arg0, int keycode, KeyEvent arg2) {\n            if (keycode != 66) {\n                return false;\n            }\n            AppChooser.this.doListFilter();\n            return true;\n        }\n    };\n    public View.OnClickListener mSearchBtnListenerListner = new View.OnClickListener() {\n        /* class a2dp.Vol.AppChooser.AnonymousClass1 */\n        public void onClick(View v) {\n            AppChooser.this.doListFilter();\n        }\n    };\n    private PackageManager pm;\n    public void doListFilter() {\n        this.mFilterText = this.mEtFilter.getText().toString().toLowerCase();\n        this.mAppList.clear();\n        if (this.mFilterText.contentEquals(\"\")) {\n            for (AppInfoCache appInfo : this.mFullAppList) {\n                this.mAppList.add(appInfo);\n            }\n        } else {\n            for (AppInfoCache appInfo2 : this.mFullAppList) {\n                if (appInfo2.getAppName().toLowerCase().contains(this.mFilterText)) {\n                    this.mAppList.add(appInfo2);\n                }\n            }\n        }\n        this.mListAdapter.notifyDataSetChanged();\n    }\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.app_list);\n        setTitle(\"Select an app...\");\n        initAttachViewsToVars();\n        this.pm = getPackageManager();\n        this.mLoadingDialog = new ProgressDialog(this);\n        this.mLoadingDialog.setIndeterminate(true);\n        this.mLoadingDialog.setMessage(\"Loading App List...\");\n        this.mLoadingDialog.setCancelable(false);\n        this.mLoadingDialog.show();\n        new Thread(this.mLoadAppLoadAndSortAppList).start();\n    }\n    public void onConfigurationChanged(Configuration newConfig) {\n        setContentView(R.layout.app_list);\n        initAttachViewsToVars();\n        initAssignListenersAndAdapter();\n        super.onConfigurationChanged(newConfig);\n    }\n    private void initAttachViewsToVars() {\n        this.mListView = (ListView) findViewById(R.id.m_lv_packages);\n        this.mEtFilter = (EditText) findViewById(R.id.m_et_search);\n        this.mBtnSearch = (Button) findViewById(R.id.m_btn_search);\n        this.mBtnClear = (Button) findViewById(R.id.m_btn_clear);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void initAssignListenersAndAdapter() {\n        this.mEtFilter.setText(this.mFilterText);\n        this.mEtFilter.setOnEditorActionListener(this.mSearchActionListener);\n        this.mEtFilter.setOnKeyListener(this.mSearchBoxKeyListener);\n        this.mListView.setAdapter((ListAdapter) this.mListAdapter);\n        this.mListView.setOnItemClickListener(this.mListItemClickAdapter);\n        this.mBtnSearch.setOnClickListener(this.mSearchBtnListenerListner);\n        this.mBtnClear.setOnClickListener(this.mClearBtnListenerListner);\n    }\n    public class PackageListAdapter extends ArrayAdapter&lt;AppInfoCache> {\n        Context c;\n        public PackageListAdapter(Context context) {\n            super(context, (int) R.layout.app_list_item, AppChooser.this.mAppList);\n            this.c = context;\n        }\n        public View getView(int position, View convertView, ViewGroup parent) {\n            View v = LayoutInflater.from(this.c).inflate(R.layout.app_list_item, parent, false);\n            AppInfoCache ai = (AppInfoCache) getItem(position);\n            ((ImageView) v.findViewById(R.id.pi_iv_icon)).setImageDrawable(ai.getIcon());\n            ((TextView) v.findViewById(R.id.pi_tv_name)).setText(ai.getAppName());\n            return v;\n        }\n    }\n    class AlphaComparator implements Comparator&lt;AppInfoCache> {\n        private final Collator sCollator = Collator.getInstance();\n        AlphaComparator() {\n        }\n        public final int compare(AppInfoCache a, AppInfoCache b) {\n            return this.sCollator.compare(a.getAppName(), b.getAppName());\n        }\n    }\n    /* access modifiers changed from: package-private */\n    public class AppInfoCache {\n        private String app_name;\n        private String class_name;\n        private String package_name;\n        private int position = -1;\n        public AppInfoCache(String aName, String pName, String cName) {\n            this.app_name = aName;\n            this.package_name = pName;\n            this.class_name = cName;\n        }\n        public Drawable getIcon() {\n            try {\n                return AppChooser.this.pm.getApplicationIcon(this.package_name);\n            } catch (PackageManager.NameNotFoundException e) {\n                return null;\n            }\n        }\n        public int getPosition() {\n            return this.position;\n        }\n        public void setPosition(int pos) {\n            this.position = pos;\n        }\n        public String getAppName() {\n            return this.app_name;\n        }\n        public String getPackageName() {\n            return this.package_name;\n        }\n        public String getClassName() {\n            return this.class_name;\n        }\n        public String toString() {\n            return this.app_name;\n        }\n    }\n    /* access modifiers changed from: protected */\n    public void onDestroy() {\n        super.onDestroy();\n    }\n    /* access modifiers changed from: protected */\n    public void onPause() {\n        super.onPause();\n    }\n}\n", 
    "source": "EditDevice", 
    "source_actcode": "public class EditDevice extends Activity {\n    private static final int ACTION_ADD_PACKAGE = 17;\n    private static final int ACTION_CHOOSE_APP = 2;\n    private static final int ACTION_CHOOSE_APP_CUSTOM = 16;\n    private static final int ACTION_CHOOSE_FROM_PROVIDER = 11;\n    private static final int ACTION_CREATE_HOME_SCREEN_SHORTCUT = 14;\n    private static final int ACTION_CUSTOM_INTENT = 6;\n    private static final int ALARM_STREAM = 2;\n    private static final String[] APP_TYPE_OPTIONS = {\"Choose App\", \"Create Shortcut\", \"Home Screen Shortcut\", \"Pandora Radio Station\", \"Custom Intent\", \"Clear App Selection\"};\n    private static final int DIALOG_BITLY = 6;\n    private static final int DIALOG_PICK_APP_TYPE = 3;\n    private static final int DIALOG_WARN_STOP_APP = 5;\n    private static final int FETCH_HOME_SCREEN_SHORTCUT = 15;\n    private static final int IN_CALL_STREAM = 1;\n    private static final int MUSIC_STREAM = 0;\n    private boolean TTsEnabled;\n    private String appaction;\n    private String appdata;\n    private boolean appkill;\n    private MyApplication application;\n    private boolean apprestart;\n    private String apptype;\n    public String btd;\n    private Button cb;\n    private Button connbt;\n    private btDevice device;\n    private boolean enablegps;\n    private EditText fapp;\n    private CheckBox fappkill;\n    private CheckBox fapprestart;\n    private CheckBox fautoVol;\n    private EditText fbt;\n    private CheckBox fcarmodeBox;\n    private EditText fdesc2;\n    private CheckBox fenableGPS;\n    private CheckBox fenableTTS;\n    private CheckBox fgloc;\n    private SeekBar fphonev;\n    private CheckBox frampVol;\n    private CheckBox fsetpv;\n    private CheckBox fsetvol;\n    private CheckBox fsilent;\n    private CheckBox fsleepBox;\n    private SeekBar fsmsdelaybar;\n    private TextView fsmsdelaybox;\n    private SeekBar fvol;\n    private SeekBar fvoldelaybar;\n    private TextView fvoldelaybox;\n    private CheckBox fwifi;\n    private RadioGroup icongroup;\n    private RadioButton iconradio0;\n    private RadioButton iconradio1;\n    private RadioButton iconradio2;\n    private RadioButton iconradio3;\n    private RadioButton iconradio4;\n    private LinearLayout l1;\n    private LinearLayout l2;\n    private DialogInterface.OnClickListener mAppTypeDialogOnClick = new DialogInterface.OnClickListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass11 */\n        public void onClick(DialogInterface dialog, int which) {\n            switch (which) {\n                case 0:\n                    EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 2);\n                    return;\n                case 1:\n                    Intent i = new Intent(\"android.intent.action.PICK_ACTIVITY\");\n                    i.putExtra(\"android.intent.extra.INTENT\", new Intent(\"android.intent.action.CREATE_SHORTCUT\"));\n                    i.putExtra(\"android.intent.extra.TITLE\", \"Create a Shortcut\");\n                    EditDevice.this.startActivityForResult(i, 14);\n                    return;\n                case 2:\n                    Intent i2 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i2.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_HOMESCREEN);\n                    EditDevice.this.startActivityForResult(i2, 11);\n                    return;\n                case 3:\n                    Intent i3 = new Intent(EditDevice.this.getBaseContext(), ProviderList.class);\n                    i3.putExtra(ProviderList.EXTRA_PROVIDER, ProviderList.PROVIDER_PANDORA);\n                    EditDevice.this.startActivityForResult(i3, 11);\n                    return;\n                case 4:\n                    Intent i4 = new Intent(EditDevice.this.getBaseContext(), CustomIntentMaker.class);\n                    i4.putExtra(\"alarm_custom_action\", EditDevice.this.appaction);\n                    i4.putExtra(\"alarm_custom_data\", EditDevice.this.appdata);\n                    i4.putExtra(\"alarm_custom_type\", EditDevice.this.apptype);\n                    i4.putExtra(\"alarm_package_name\", EditDevice.this.pname);\n                    EditDevice.this.startActivityForResult(i4, 6);\n                    return;\n                case 5:\n                    EditDevice.this.pname = \"\";\n                    EditDevice.this.appaction = \"\";\n                    EditDevice.this.appdata = \"\";\n                    EditDevice.this.apptype = \"\";\n                    EditDevice.this.vUpdateApp();\n                    return;\n                default:\n                    return;\n            }\n        }\n    };\n    private TextView mediadelay;\n    private DeviceDB myDB;\n    private String pname;\n    SharedPreferences preferences;\n    private Button sb;\n    SeekBar.OnSeekBarChangeListener smsdelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass9 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fsmsdelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    private Button startapp;\n    private RadioGroup streamgroup;\n    private RadioButton streamradio0;\n    private RadioButton streamradio1;\n    private RadioButton streamradio2;\n    private TextView ttsdelay;\n    private TextView tv2;\n    private TextView tvincallVol;\n    private TextView tvmediavol;\n    private TextView tvstream;\n    SeekBar.OnSeekBarChangeListener voldelaySeekBarProgress = new SeekBar.OnSeekBarChangeListener() {\n        /* class a2dp.Vol.EditDevice.AnonymousClass10 */\n        public void onProgressChanged(SeekBar arg0, int progress, boolean arg2) {\n            EditDevice.this.fvoldelaybox.setText(progress + \"s\");\n        }\n        public void onStartTrackingTouch(SeekBar arg0) {\n        }\n        public void onStopTrackingTouch(SeekBar arg0) {\n        }\n    };\n    public void onBackPressed() {\n        Save();\n        closedb();\n        finish();\n        super.onBackPressed();\n    }\n    /* access modifiers changed from: protected */\n    public void onCreate(Bundle savedInstanceState) {\n        super.onCreate(savedInstanceState);\n        setContentView(R.layout.edit_item);\n        this.application = (MyApplication) getApplication();\n        this.myDB = new DeviceDB(this.application);\n        AudioManager am = (AudioManager) getSystemService(\"audio\");\n        this.sb = (Button) findViewById(R.id.EditDevSavebutton);\n        this.cb = (Button) findViewById(R.id.EditDevCancelbutton);\n        this.startapp = (Button) findViewById(R.id.chooseAppButton);\n        this.connbt = (Button) findViewById(R.id.chooseBTbutton);\n        this.fdesc2 = (EditText) findViewById(R.id.editDesc2);\n        this.fgloc = (CheckBox) findViewById(R.id.checkCaptLoc);\n        this.fsetvol = (CheckBox) findViewById(R.id.checkSetVol);\n        this.fvol = (SeekBar) findViewById(R.id.seekBarVol);\n        this.fapp = (EditText) findViewById(R.id.editApp);\n        this.fapprestart = (CheckBox) findViewById(R.id.appRestartCheckbox);\n        this.fappkill = (CheckBox) findViewById(R.id.appKillCheckbox);\n        this.fbt = (EditText) findViewById(R.id.editBtConnect);\n        this.fwifi = (CheckBox) findViewById(R.id.checkwifi);\n        this.fenableTTS = (CheckBox) findViewById(R.id.enableTTSBox);\n        this.fsetpv = (CheckBox) findViewById(R.id.checkSetpv);\n        this.fsilent = (CheckBox) findViewById(R.id.silentBox);\n        this.fphonev = (SeekBar) findViewById(R.id.seekPhoneVol);\n        this.fsmsdelaybar = (SeekBar) findViewById(R.id.SMSdelayseekBar);\n        this.fsmsdelaybox = (TextView) findViewById(R.id.SMSdelaytextView);\n        this.fvoldelaybar = (SeekBar) findViewById(R.id.VolDelaySeekBar);\n        this.fvoldelaybox = (TextView) findViewById(R.id.VolDelayTextView);\n        this.tv2 = (TextView) findViewById(R.id.textView2);\n        this.frampVol = (CheckBox) findViewById(R.id.rampBox);\n        this.fautoVol = (CheckBox) findViewById(R.id.autoVolcheckBox);\n        this.icongroup = (RadioGroup) findViewById(R.id.radioGroupIcon);\n        this.iconradio0 = (RadioButton) findViewById(R.id.iconradio0);\n        this.iconradio1 = (RadioButton) findViewById(R.id.iconradio1);\n        this.iconradio2 = (RadioButton) findViewById(R.id.iconradio2);\n        this.iconradio3 = (RadioButton) findViewById(R.id.iconradio3);\n        this.iconradio4 = (RadioButton) findViewById(R.id.iconradio4);\n        this.streamgroup = (RadioGroup) findViewById(R.id.radioGroupStream);\n        this.streamradio0 = (RadioButton) findViewById(R.id.streamradio0);\n        this.streamradio1 = (RadioButton) findViewById(R.id.streamradio1);\n        this.streamradio2 = (RadioButton) findViewById(R.id.streamradio2);\n        this.l1 = (LinearLayout) findViewById(R.id.LinearLayout1);\n        this.l2 = (LinearLayout) findViewById(R.id.LinearLayout2);\n        this.ttsdelay = (TextView) findViewById(R.id.textViewTTSDelay);\n        this.mediadelay = (TextView) findViewById(R.id.textViewMediaDelay);\n        this.tvstream = (TextView) findViewById(R.id.textViewStream);\n        this.tvmediavol = (TextView) findViewById(R.id.textViewMediaVolume);\n        this.tvincallVol = (TextView) findViewById(R.id.textViewInCallVol);\n        this.fsleepBox = (CheckBox) findViewById(R.id.checkBoxSleep);\n        this.fcarmodeBox = (CheckBox) findViewById(R.id.checkBoxLaunchCar);\n        this.preferences = PreferenceManager.getDefaultSharedPreferences(this.application);\n        this.TTsEnabled = this.preferences.getBoolean(\"enableTTS\", false);\n        this.btd = getIntent().getStringExtra(\"btd\");\n        this.device = this.myDB.getBTD(this.btd);\n        this.fdesc2.setText(this.device.desc2);\n        this.fgloc.setChecked(this.device.isGetLoc());\n        this.fsetvol.setChecked(this.device.isSetV());\n        this.fvol.setMax(am.getStreamMaxVolume(3));\n        this.fvol.setProgress(this.device.defVol);\n        this.fapp.setText(this.device.getPname());\n        this.fbt.setText(this.device.getBdevice());\n        this.fwifi.setChecked(this.device.isWifi());\n        if (this.device == null) {\n            this.connbt.setEnabled(false);\n        }\n        this.pname = this.device.getPname();\n        this.appaction = this.device.getAppaction();\n        this.appdata = this.device.getAppdata();\n        this.apptype = this.device.getApptype();\n        this.apprestart = this.device.isApprestart();\n        this.appkill = this.device.isAppkill();\n        this.fapprestart.setChecked(this.apprestart);\n        this.fappkill.setChecked(this.appkill);\n        this.fenableTTS.setChecked(this.device.isEnableTTS());\n        this.fsetpv.setChecked(this.device.isSetpv());\n        this.fphonev.setMax(am.getStreamMaxVolume(0));\n        this.fphonev.setProgress(this.device.getPhonev());\n        this.fsmsdelaybar.setMax(20);\n        this.fsmsdelaybar.setOnSeekBarChangeListener(this.smsdelaySeekBarProgress);\n        this.fsmsdelaybox.setText(this.device.smsdelay + \"s\");\n        this.fsmsdelaybar.setProgress(this.device.getSmsdelay());\n        this.fvoldelaybar.setMax(20);\n        this.fvoldelaybar.setOnSeekBarChangeListener(this.voldelaySeekBarProgress);\n        this.fvoldelaybox.setText(this.device.voldelay + \"s\");\n        this.fvoldelaybar.setProgress(this.device.getVoldelay());\n        this.frampVol.setChecked(this.device.isVolramp());\n        this.fautoVol.setChecked(this.device.isAutovol());\n        this.fsilent.setChecked(this.device.isSilent());\n        this.fsleepBox.setChecked(this.device.isSleep());\n        this.fcarmodeBox.setChecked(this.device.isCarmode());\n        switch (this.device.getIcon()) {\n            case R.drawable.car2:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.headset:\n                this.iconradio1.setChecked(true);\n                break;\n            case R.drawable.ic_launcher:\n            default:\n                this.iconradio0.setChecked(true);\n                break;\n            case R.drawable.icon5:\n                this.iconradio4.setChecked(true);\n                break;\n            case R.drawable.jack:\n                this.iconradio2.setChecked(true);\n                break;\n            case R.drawable.usb:\n                this.iconradio3.setChecked(true);\n                break;\n        }\n        switch (this.device.getSmsstream()) {\n            case 0:\n                this.streamradio0.setChecked(true);\n                break;\n            case 1:\n                this.streamradio1.setChecked(true);\n                break;\n            case 2:\n                this.streamradio2.setChecked(true);\n                break;\n            default:\n                this.streamradio0.setChecked(true);\n                break;\n        }\n        setTTSVisibility();\n        this.fenableTTS.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass1 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setTTSVisibility();\n            }\n        });\n        setMediaVisibility();\n        this.fsetvol.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass2 */\n            public void onCheckedChanged(CompoundButton buttonView, boolean isChecked) {\n                EditDevice.this.setMediaVisibility();\n            }\n        });\n        setInCallVisibility();\n        this.fsetpv.setOnCheckedChangeListener(new CompoundButton.OnCheckedChangeListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass3 */\n            public void onCheckedChanged(CompoundButton arg0, boolean arg1) {\n                EditDevice.this.setInCallVisibility();\n            }\n        });\n        setAppVisibility();\n        this.tv2.requestFocus();\n        vUpdateApp();\n        this.sb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass4 */\n            public void onClick(View v) {\n                EditDevice.this.Save();\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.cb.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass5 */\n            public void onClick(View arg0) {\n                EditDevice.this.closedb();\n                EditDevice.this.finish();\n            }\n        });\n        this.startapp.setOnLongClickListener(new View.OnLongClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass6 */\n            public boolean onLongClick(View arg0) {\n                PackageManager pm = EditDevice.this.getPackageManager();\n                List&lt;ApplicationInfo> packages = pm.getInstalledApplications(0);\n                String[] lstring = new String[packages.size()];\n                int i = 0;\n                for (int n = 0; n &lt; packages.size(); n++) {\n                    Intent itent = pm.getLaunchIntentForPackage(packages.get(n).packageName);\n                    if (packages.get(n).icon &gt; 0 && packages.get(n).enabled && itent != null) {\n                        lstring[i] = packages.get(n).packageName;\n                        i++;\n                    }\n                }\n                final String[] ls2 = new String[i];\n                for (int j = 0; j &lt; i; j++) {\n                    ls2[j] = lstring[j];\n                }\n                Arrays.sort(ls2);\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Pick a package\");\n                builder.setItems(ls2, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass6.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        EditDevice.this.fapp.setText(ls2[item]);\n                    }\n                });\n                builder.create().show();\n                return false;\n            }\n        });\n        this.startapp.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass7 */\n            public void onClick(View arg0) {\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(EditDevice.this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(EditDevice.APP_TYPE_OPTIONS, EditDevice.this.mAppTypeDialogOnClick);\n                adb2.create();\n                adb2.show();\n            }\n        });\n        this.connbt.setOnClickListener(new View.OnClickListener() {\n            /* class a2dp.Vol.EditDevice.AnonymousClass8 */\n            public void onClick(View v) {\n                if (!EditDevice.this.myDB.getDb().isOpen() && !EditDevice.this.myDB.getDb().isDbLockedByCurrentThread()) {\n                    EditDevice.this.myDB = new DeviceDB(EditDevice.this.application);\n                }\n                final Vector&lt;btDevice> vec = EditDevice.this.myDB.selectAlldb();\n                int j = vec.size();\n                int i = 0;\n                while (i &lt; j) {\n                    if (vec.get(i).mac.length() &lt; 17) {\n                        vec.remove(i);\n                        j--;\n                        i--;\n                    }\n                    i++;\n                }\n                vec.trimToSize();\n                String[] lstring = new String[(vec.size() + 1)];\n                for (int i2 = 0; i2 &lt; vec.size(); i2++) {\n                    lstring[i2] = vec.get(i2).desc2;\n                }\n                lstring[vec.size()] = \"none\";\n                AlertDialog.Builder builder = new AlertDialog.Builder(EditDevice.this);\n                builder.setTitle(\"Bluetooth Device\");\n                builder.setItems(lstring, new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass8.AnonymousClass1 */\n                    public void onClick(DialogInterface dialog, int item) {\n                        if (item &lt; vec.size()) {\n                            EditDevice.this.fbt.setText(((btDevice) vec.get(item)).mac);\n                        } else {\n                            EditDevice.this.fbt.setText(\"\");\n                        }\n                    }\n                });\n                builder.create().show();\n            }\n        });\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setMediaVisibility() {\n        if (this.fsetvol.isChecked()) {\n            this.tvmediavol.setVisibility(0);\n            this.fvol.setVisibility(0);\n            this.fautoVol.setVisibility(0);\n            this.frampVol.setVisibility(0);\n            this.l2.setVisibility(0);\n            this.mediadelay.setVisibility(0);\n            return;\n        }\n        this.tvmediavol.setVisibility(8);\n        this.fvol.setVisibility(8);\n        this.fautoVol.setVisibility(8);\n        this.frampVol.setVisibility(8);\n        this.l2.setVisibility(8);\n        this.mediadelay.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setTTSVisibility() {\n        if (this.fenableTTS.isChecked()) {\n            this.l1.setVisibility(0);\n            this.ttsdelay.setVisibility(0);\n            this.tvstream.setVisibility(0);\n            this.streamgroup.setVisibility(0);\n            return;\n        }\n        this.l1.setVisibility(8);\n        this.ttsdelay.setVisibility(8);\n        this.tvstream.setVisibility(8);\n        this.streamgroup.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void setInCallVisibility() {\n        if (this.fsetpv.isChecked()) {\n            this.tvincallVol.setVisibility(0);\n            this.fphonev.setVisibility(0);\n            return;\n        }\n        this.tvincallVol.setVisibility(8);\n        this.fphonev.setVisibility(8);\n    }\n    private void setAppVisibility() {\n        if (this.fapp.getText().length() &gt; 0) {\n            this.fapp.setVisibility(0);\n            this.fapprestart.setVisibility(0);\n            this.fappkill.setVisibility(0);\n            this.fsleepBox.setVisibility(8);\n            return;\n        }\n        this.fapp.setVisibility(8);\n        this.fapprestart.setVisibility(8);\n        this.fappkill.setVisibility(8);\n        this.fsleepBox.setVisibility(8);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void Save() {\n        if (this.fdesc2.length() &lt; 1) {\n            this.device.setDesc2(this.device.desc1);\n        } else {\n            this.device.setDesc2(this.fdesc2.getText().toString());\n        }\n        this.device.setSetV(this.fsetvol.isChecked());\n        this.device.setDefVol(this.fvol.getProgress());\n        this.device.setGetLoc(this.fgloc.isChecked());\n        this.device.setPname(this.pname);\n        this.device.setBdevice(this.fbt.getText().toString());\n        this.device.setWifi(this.fwifi.isChecked());\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.apprestart = this.fapprestart.isChecked();\n        this.device.setApprestart(this.apprestart);\n        this.appkill = this.fappkill.isChecked();\n        this.device.setAppkill(this.appkill);\n        this.enablegps = this.fenableTTS.isChecked();\n        this.device.setEnableTTS(this.enablegps);\n        this.device.setSetpv(this.fsetpv.isChecked());\n        this.device.setPhonev(this.fphonev.getProgress());\n        this.device.setSmsdelay(this.fsmsdelaybar.getProgress());\n        this.device.setVoldelay(this.fvoldelaybar.getProgress());\n        this.device.setVolramp(this.frampVol.isChecked());\n        this.device.setAutovol(this.fautoVol.isChecked());\n        this.device.setSilent(this.fsilent.isChecked());\n        this.device.setSleep(this.fsleepBox.isChecked());\n        this.device.setCarmode(this.fcarmodeBox.isChecked());\n        switch (this.icongroup.getCheckedRadioButtonId()) {\n            case R.id.iconradio0:\n                this.device.setIcon(R.drawable.car2);\n                break;\n            case R.id.iconradio1:\n                this.device.setIcon(R.drawable.headset);\n                break;\n            case R.id.iconradio2:\n                this.device.setIcon(R.drawable.jack);\n                break;\n            case R.id.iconradio3:\n                this.device.setIcon(R.drawable.usb);\n                break;\n            case R.id.iconradio4:\n                this.device.setIcon(R.drawable.icon5);\n                break;\n        }\n        switch (this.streamgroup.getCheckedRadioButtonId()) {\n            case R.id.streamradio0:\n                this.device.setSmsstream(0);\n                break;\n            case R.id.streamradio1:\n                this.device.setSmsstream(1);\n                break;\n            case R.id.streamradio2:\n                this.device.setSmsstream(2);\n                break;\n        }\n        if (!this.TTsEnabled && this.fenableTTS.isChecked()) {\n            SharedPreferences.Editor editor = this.preferences.edit();\n            editor.putBoolean(\"enableTTS\", true);\n            editor.commit();\n        }\n        this.sb.setText(\"Saving\");\n        try {\n            this.myDB.update(this.device);\n            Intent itent = new Intent();\n            itent.setAction(\"a2dp.Vol.main.RELOAD_LIST\");\n            itent.putExtra(\"device\", \"\");\n            this.application.sendBroadcast(itent);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void closedb() {\n        this.myDB.getDb().close();\n    }\n    /* access modifiers changed from: protected */\n    public void onActivityResult(int requestCode, int resultCode, Intent data) {\n        if (resultCode == -1) {\n            switch (requestCode) {\n                case 2:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    this.appaction = \"\";\n                    this.apptype = \"\";\n                    this.appdata = \"\";\n                    vUpdateApp();\n                    break;\n                case 6:\n                    this.pname = \"\";\n                    this.appaction = data.getStringExtra(\"alarm_custom_action\");\n                    this.appdata = data.getStringExtra(\"alarm_custom_data\");\n                    this.apptype = data.getStringExtra(\"alarm_custom_type\");\n                    if (this.appdata.length() &gt; 3) {\n                        try {\n                            this.pname = Intent.getIntent(this.pname).getComponent().getPackageName();\n                        } catch (URISyntaxException e) {\n                            this.pname = \"custom\";\n                            e.printStackTrace();\n                        }\n                    }\n                    if (this.pname.equals(\"\")) {\n                        this.pname = \"custom\";\n                    }\n                    vUpdateApp();\n                    break;\n                case 11:\n                    processShortcut(data);\n                    break;\n                case 14:\n                    startActivityForResult(data, 15);\n                    break;\n                case 15:\n                    processShortcut(data);\n                    if (this.pname.length() &lt; 3 || this.pname.equalsIgnoreCase(\"Custom\")) {\n                        showDialog(5);\n                        break;\n                    }\n                case 16:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n                case 17:\n                    this.pname = data.getStringExtra(AppChooser.EXTRA_PACKAGE_NAME);\n                    vUpdateApp();\n                    break;\n            }\n        }\n        super.onActivityResult(requestCode, resultCode, data);\n    }\n    /* access modifiers changed from: private */\n    /* access modifiers changed from: public */\n    private void vUpdateApp() {\n        this.device.setAppaction(this.appaction);\n        this.device.setAppdata(this.appdata);\n        this.device.setApptype(this.apptype);\n        this.device.setPname(this.pname);\n        if (!this.device.hasIntent()) {\n            this.fapp.setText(\"\");\n        } else if (this.pname != null && this.pname.length() &gt; 3) {\n            this.fapp.setText(this.pname);\n        } else if (this.appdata != null) {\n            this.fapp.setText(this.appdata);\n        } else if (this.appaction != null) {\n            this.fapp.setText(this.appaction);\n        } else {\n            this.fapp.setText(\"Custom\");\n        }\n        setAppVisibility();\n    }\n    private void processShortcut(Intent data) {\n        Intent i = (Intent) data.getParcelableExtra(\"android.intent.extra.shortcut.INTENT\");\n        this.appdata = getIntentUri(i);\n        if (data.hasExtra(ProviderList.EXTRA_PACKAGE_NAME)) {\n            this.pname = data.getStringExtra(ProviderList.EXTRA_PACKAGE_NAME);\n        } else {\n            try {\n                this.pname = i.getComponent().getPackageName();\n            } catch (Exception e) {\n                this.pname = \"\";\n                e.printStackTrace();\n            }\n        }\n        if (this.pname.length() &lt; 3) {\n            this.pname = \"custom\";\n        }\n        this.appaction = data.getStringExtra(\"android.intent.extra.shortcut.NAME\");\n        this.apptype = \"\";\n        vUpdateApp();\n    }\n    public static String getIntentUri(Intent i) {\n        try {\n            return (String) Intent.class.getMethod(\"toUri\", Integer.TYPE).invoke(i, Integer.valueOf(Intent.class.getField(\"URI_INTENT_SCHEME\").getInt(null)));\n        } catch (Exception e) {\n            return i.toURI();\n        }\n    }\n    /* access modifiers changed from: protected */\n    public Dialog onCreateDialog(int id) {\n        switch (id) {\n            case 3:\n                AlertDialog.Builder adb2 = new AlertDialog.Builder(this);\n                adb2.setTitle(R.string.ea_ti_app);\n                adb2.setItems(APP_TYPE_OPTIONS, this.mAppTypeDialogOnClick);\n                return adb2.create();\n            case 4:\n            default:\n                return super.onCreateDialog(id);\n            case 5:\n                AlertDialog.Builder adb4 = new AlertDialog.Builder(this);\n                adb4.setTitle(R.string.ae_stop_app_warning_title);\n                adb4.setMessage(R.string.ae_stop_app_warning_message);\n                adb4.setCancelable(false);\n                adb4.setPositiveButton(\"Select App\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass12 */\n                    public void onClick(DialogInterface dialog, int which) {\n                        EditDevice.this.startActivityForResult(new Intent(EditDevice.this.getBaseContext(), AppChooser.class), 17);\n                    }\n                });\n                adb4.setNegativeButton(\"Ignore\", new DialogInterface.OnClickListener() {\n                    /* class a2dp.Vol.EditDevice.AnonymousClass13 */\n                    public void onClick(DialogInterface dialog, int which) {\n                    }\n                });\n                return adb4.create();\n            case 6:\n                ProgressDialog pd = new ProgressDialog(this);\n                pd.setIndeterminate(true);\n                pd.setMessage(\"Shortenting Url with Bit.ly...\");\n                pd.setCancelable(false);\n                return pd;\n        }\n    }\n}\n", 
    "sourceimg": "/home/StoryDistiller-main/main-folder/outputs/a2dp.Vol_133//screenshots/a2dp.Vol.EditDevice.png", 
    "type": "suit", 
    "target_fullname": "a2dp.Vol.AppChooser"
},
];
